#!/bin/sh
#
# Formake configure
#
# Copyright (c) 2018, Oleksii Cherniavskyi
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

################################################################################
# SANITIZE ENVIRONMENT
if test -z "$FORMAKE_CLEAN_ENV"; then
  env -i FORMAKE_CLEAN_ENV=1 PATH="$PATH" HOME="$HOME" DISPLAY="$DISPLAY" SHELL="SHELL" LOGNAME="$LOGNAME" LANG="$LANG" USER="$USER" "$0" ${1+"$@"}
  exit $?
fi


################################################################################
# SWITCH TO MODERN SHELL IF POSSIBLE
(test_exit_code_127_sdfjsdfksjdhfksjdhf  >/dev/null) 2>/dev/null
if test $? -ne 127; then
  if test -z "$FORMAKE_BASH_REDIRECTED"; then
    FORMAKE_BASH_REDIRECTED=1
    export FORMAKE_BASH_REDIRECTED
    if test -x /bin/bash; then
      exec /bin/bash "$0" ${1+"$@"}
    elif test -x /usr/bin/bash; then
      exec /usr/bin/bash "$0" ${1+"$@"}
    elif test -x /usr/local/bin/bash; then
      exec /usr/local/bin/bash "$0" ${1+"$@"}
    elif test -x /usr/pkg/bin/bash; then
      exec /usr/pkg/bin/bash "$0" ${1+"$@"}
    else
      (bash -c "pwd" >/dev/null) 2>/dev/null
      if test $? -eq 0; then
        exec bash "$0" ${1+"$@"}
      fi
    fi
  fi
fi
FORMAKE_BASH_REDIRECTED=
export FORMAKE_BASH_REDIRECTED


################################################################################
# STAGE 0
CONFIG_STAGE=0

script_name=`basename "$0"`
orig_dir=`pwd`
cd `dirname "$0"`
CONFIG_SRCROOT=`pwd`
CONFIG_4MAKE_PATH=$CONFIG_SRCROOT/4make
CONFIG_CACHE=$CONFIG_SRCROOT/4make.cache

dot4m_tmp=_dot4m_stage_tmp

if test ! -d "$CONFIG_4MAKE_PATH"; then
  echo "$script_name: Formake modules not found: $CONFIG_4MAKE_PATH" >&2
  exit 1
fi

export CONFIG_STAGE
export CONFIG_SRCROOT
export CONFIG_4MAKE_PATH
export CONFIG_CACHE

PATH="$CONFIG_4MAKE_PATH:$PATH"

dot4m_list=`ls *.4m 2>/dev/null`

# Stage 0 read project configs
if test -n "$dot4m_list"; then
  for dot4m in $dot4m_list; do
    sed -n "1,/^#STAGE[1-2]/p" $dot4m > $dot4m_tmp
    . ./$dot4m_tmp
    cd $cd_param $CONFIG_SRCROOT
    rm -f $dot4m_tmp
  done
fi

clean_exit() {
  rm -f $CONFIG_CACHE
  exit $1
}

################################################################################
# STAGE 1
CONFIG_STAGE=1

parse_options() {
  IFS_save=$IFS
  IFS='
'
  fmk_opnum=0
  for line in $OPTIONS; do
    line=`echo "$line" | sed 's/^ *//'`
    ops=`echo "$line" | sed 's/  .*//'`
    outvar=`echo "$line" | sed 's/.* >> *//' | sed 's/ .*$//'`
    if test -n "$outvar"; then
      if test -z "$mode_help"; then
        case "$ops" in
          *\[=*\])
            op_have_arg=1
            ;;
          *=*)
            op_have_arg=2
            ;;
          *)
            op_have_arg=0
            ;;
        esac
        IFS_save2=$IFS
        IFS=','
        for op in $ops; do
          op=`echo "$op" | sed 's/^ *//' | sed 's/[[ =].*$//'`
          if test -n "$op"; then
            op_var=`echo "fmk_op_$op" | sed 's/[^a-zA-Z0-9_]/_/g'`
            eval $op_var=\$outvar
            eval ${op_var}_have_arg=\$op_have_arg
          fi
        done
        IFS=$IFS_save2
      else
        descr=`echo "$line" | sed 's/  *>>.*//' | sed 's/.*   *//'`
        eval fmk_op${fmk_opnum}_ops=\$ops
        eval fmk_op${fmk_opnum}_descr=\$descr
        fmk_opnum=`expr $fmk_opnum + 1`
      fi
    fi
  done
  IFS=$IFS_save
}

print_version() {
  cat <<EOF
Formake configure 1.3
Copyright (C) 2018 Oleksii Cherniavskyi
EOF
}

print_help() {
  cat <<EOF
Usage: configure [options]
EOF
  if test -z "$DISABLE_STD_CLI"; then
    cat <<EOF
  --prefix=PREFIX               path to install architecture-independent files [/usr/local]
  --exec-prefix=EPREFIX         path to install architecture-dependent files [PREFIX]
  --bindir=DIR                  bin path [EPREFIX/bin]
  --sbindir=DIR                 sbin path [EPREFIX/sbin]
  --libexecdir=DIR              libexec path [EPREFIX/libexec]
  --libdir=DIR                  lib path [EPREFIX/lib]
  --incdir=DIR                  include path [PREFIX/include]
  --etcdir=DIR                  etc path [PREFIX/etc]
  --vardir=DIR                  var path [PREFIX/var]
  --sharedir=DIR                share path [PREFIX/share]
  --mandir=DIR                  man path [SHAREDIR/man]
  --docdir=DIR                  doc path [SHAREDIR/doc]
EOF
  fi

  op_index=0
  while test $op_index -lt $fmk_opnum; do
    eval ops=\$fmk_op${op_index}_ops
    eval descr=\$fmk_op${op_index}_descr
    printf '  %-*s   %s\n' 27 "$ops" "$descr"
    op_index=`expr $op_index + 1`
  done
}


# parse options
while test $# -gt 0; do
  case "$1" in
    -h|--help)
      mode_help=1
      parse_options
      print_help
      exit 0
      ;;
    -v|--version)
      print_version
      exit 0
      ;;
    *)
      op_found=0
      if test -z "$DISABLE_STD_CLI"; then
        op_found=1
        case "$1" in
          --prefix=*)
            CONFIG_PREFIX=`echo "$1" | sed 's/^[^=]*=//'`
            ;;
          --exec-prefix=*)
            CONFIG_EXEC_PREFIX=`echo "$1" | sed 's/^[^=]*=//'`
            ;;
          --bindir=*)
            CONFIG_BINDIR=`echo "$1" | sed 's/^[^=]*=//'`
            ;;
          --sbindir=*)
            CONFIG_SBINDIR=`echo "$1" | sed 's/^[^=]*=//'`
            ;;
          --libexecdir=*)
            CONFIG_LIBEXECDIR=`echo "$1" | sed 's/^[^=]*=//'`
            ;;
          --libdir=*)
            CONFIG_LIBDIR=`echo "$1" | sed 's/^[^=]*=//'`
            ;;
          --incdir=*)
            CONFIG_INCDIR=`echo "$1" | sed 's/^[^=]*=//'`
            ;;
          --etcdir=*)
            CONFIG_ETCDIR=`echo "$1" | sed 's/^[^=]*=//'`
            ;;
          --vardir=*)
            CONFIG_VARDIR=`echo "$1" | sed 's/^[^=]*=//'`
            ;;
          --sharedir=*)
            CONFIG_SHAREDIR=`echo "$1" | sed 's/^[^=]*=//'`
            ;;
          --mandir=*)
            CONFIG_MANDIR=`echo "$1" | sed 's/^[^=]*=//'`
            ;;
          --docdir=*)
            CONFIG_DOCDIR=`echo "$1" | sed 's/^[^=]*=//'`
            ;;
          *)
            op_found=0
            ;;
        esac
      fi

      if test $op_found -eq 0; then
        if test -z "$project_options_parsed"; then
          parse_options
          project_options_parsed=1
        fi

        outvar=
        op=`echo "$1" | sed 's/=.*$//'`
        if test -n "$op"; then
          op_var=`echo "fmk_op_$op" | sed 's/[^a-zA-Z0-9_]/_/g'`
          eval outvar=\$$op_var
          eval op_have_arg=\$${op_var}_have_arg
        fi
        if test -z "$outvar"; then
          echo "$0: invalid option: $1" >&2
          exit 1
        fi

        case "$1" in
          *=*)
            if test "$op_have_arg" -ge 1; then
              arg=`echo "$1" | sed 's/^[^=]*=//'`
              eval $outvar=\$arg
            else
              echo "$0: invalid option: $1" >&2
              exit 1
            fi
            ;;
          *)
            if test "$op_have_arg" -le 1; then
              eval $outvar=1
            else
              echo "$0: invalid option: $1" >&2
              exit 1
            fi
            ;;
        esac
      fi
      ;;
  esac
  shift
done

cat <<EOF >$CONFIG_CACHE
CONFIG_CACHE_LOADED=1
CONFIG_SRCROOT="$CONFIG_SRCROOT"
CONFIG_4MAKE_PATH="$CONFIG_4MAKE_PATH"
export CONFIG_CACHE_LOADED
export CONFIG_SRCROOT
export CONFIG_4MAKE_PATH
EOF

if test -f $CONFIG_4MAKE_PATH/subscript; then
  . $CONFIG_4MAKE_PATH/subscript
else
  echo "$script_name: module not found: $CONFIG_4MAKE_PATH/subscript" >&2
  clean_exit 1
fi


if test -z "$DISABLE_SYS_PROBE"; then
################################################################################
# probe system parameters: OS, OS version, kernel version, distro, distro version, cpu
  formake_pofig
  
  cat <<EOF >>$CONFIG_CACHE
FORMAKE_POFIG_RUN=1
CONFIG_OS="$CONFIG_OS"
CONFIG_OS_VERSION="$CONFIG_OS_VERSION"
CONFIG_KERNEL_VERSION="$CONFIG_KERNEL_VERSION"
CONFIG_DISTRO="$CONFIG_DISTRO"
CONFIG_DISTRO_VERSION="$CONFIG_DISTRO_VERSION"
CONFIG_ARCH="$CONFIG_ARCH"
CONFIG_SYSTEM_ID="$CONFIG_SYSTEM_ID"
export CONFIG_OS
export CONFIG_OS_VERSION
export CONFIG_KERNEL_VERSION
export CONFIG_DISTRO
export CONFIG_DISTRO_VERSION
export CONFIG_ARCH
export CONFIG_SYSTEM_ID
EOF

  cat <<EOF
OS                $CONFIG_OS
OS Version        $CONFIG_OS_VERSION
Kernel version    $CONFIG_KERNEL_VERSION
Distro            $CONFIG_DISTRO
Distro version    $CONFIG_DISTRO_VERSION
Arch              $CONFIG_ARCH
System id         ***
EOF
fi


# Stage 1 read project configs
if test -n "$dot4m_list"; then
  for dot4m in $dot4m_list; do
    sed -n "1,/^#STAGE2/p" $dot4m > $dot4m_tmp
    . ./$dot4m_tmp
    cd $cd_param $CONFIG_SRCROOT
    rm -f $dot4m_tmp
  done
fi

CONFIG_PACKAGE_NAME=$PACKAGE_NAME
test -n "$CONFIG_PACKAGE_NAME" || CONFIG_PACKAGE_NAME=deadbeef
CONFIG_PACKAGE_VERSION=$PACKAGE_VERSION
CONFIG_PACKAGE_VERSION_MAJOR=$PACKAGE_VERSION_MAJOR
CONFIG_PACKAGE_VERSION_MINOR=$PACKAGE_VERSION_MINOR
CONFIG_PACKAGE_VERSION_REVISION=$PACKAGE_VERSION_REVISION
CONFIG_PACKAGE_DESCRIPTION=$PACKAGE_DESCRIPTION

cat <<EOF >>$CONFIG_CACHE
CONFIG_PACKAGE_NAME="$CONFIG_PACKAGE_NAME"
CONFIG_PACKAGE_VERSION="$CONFIG_PACKAGE_VERSION"
CONFIG_PACKAGE_VERSION_MAJOR="$CONFIG_PACKAGE_VERSION_MAJOR"
CONFIG_PACKAGE_VERSION_MINOR="$CONFIG_PACKAGE_VERSION_MINOR"
CONFIG_PACKAGE_VERSION_REVISION="$CONFIG_PACKAGE_VERSION_REVISION"
CONFIG_PACKAGE_DESCRIPTION="$CONFIG_PACKAGE_DESCRIPTION"
export CONFIG_PACKAGE_NAME
export CONFIG_PACKAGE_VERSION
export CONFIG_PACKAGE_VERSION_MAJOR
export CONFIG_PACKAGE_VERSION_MINOR
export CONFIG_PACKAGE_VERSION_REVISION
export CONFIG_PACKAGE_DESCRIPTION
EOF

if test -z "$DISABLE_STD_CLI"; then
  CONFIG_PREFIX=$PREFIX
  CONFIG_EXEC_PREFIX=$EXEC_PREFIX
  CONFIG_BINDIR=$BINDIR
  CONFIG_SBINDIR=$SBINDIR
  CONFIG_LIBEXECDIR=$LIBEXECDIR
  CONFIG_ETCDIR=$ETCDIR
  CONFIG_VARDIR=$VARDIR
  CONFIG_LIBDIR=$LIBDIR
  CONFIG_INCDIR=$INCDIR
  CONFIG_SHAREDIR=$SHAREDIR
  CONFIG_MANDIR=$MANDIR
  CONFIG_DOCDIR=$DOCDIR
  CONFIG_DATADIR=$DATADIR

  test -n "$CONFIG_PREFIX"      || CONFIG_PREFIX=/usr/local
  test -n "$CONFIG_EXEC_PREFIX" || CONFIG_EXEC_PREFIX=$CONFIG_PREFIX
  test -n "$CONFIG_BINDIR"      || CONFIG_BINDIR=$CONFIG_EXEC_PREFIX/bin
  test -n "$CONFIG_SBINDIR"     || CONFIG_SBINDIR=$CONFIG_EXEC_PREFIX/sbin
  test -n "$CONFIG_LIBEXECDIR"  || CONFIG_LIBEXECDIR=$CONFIG_EXEC_PREFIX/libexec
  test -n "$CONFIG_ETCDIR"      || CONFIG_ETCDIR=$CONFIG_PREFIX/etc
  test -n "$CONFIG_VARDIR"      || CONFIG_VARDIR=$CONFIG_PREFIX/etc
  test -n "$CONFIG_LIBDIR"      || CONFIG_LIBDIR=$CONFIG_EXEC_PREFIX/lib
  test -n "$CONFIG_INCDIR"      || CONFIG_INCDIR=$CONFIG_PREFIX/include
  test -n "$CONFIG_SHAREDIR"    || CONFIG_SHAREDIR=$CONFIG_PREFIX/share
  test -n "$CONFIG_MANDIR"      || CONFIG_MANDIR=$CONFIG_SHAREDIR/man
  test -n "$CONFIG_DOCDIR"      || CONFIG_DOCDIR=$CONFIG_SHAREDIR/doc
  test -n "$CONFIG_DATADIR"     || CONFIG_DATADIR=$CONFIG_SHAREDIR

  cat <<EOF >>$CONFIG_CACHE
CONFIG_PREFIX="$CONFIG_PREFIX"
CONFIG_EXEC_PREFIX="$CONFIG_EXEC_PREFIX"
CONFIG_BINDIR="$CONFIG_BINDIR"
CONFIG_SBINDIR="$CONFIG_SBINDIR"
CONFIG_LIBEXECDIR="$CONFIG_LIBEXECDIR"
CONFIG_ETCDIR="$CONFIG_ETCDIR"
CONFIG_VARDIR="$CONFIG_VARDIR"
CONFIG_LIBDIR="$CONFIG_LIBDIR"
CONFIG_INCDIR="$CONFIG_INCDIR"
CONFIG_SHAREDIR="$CONFIG_SHAREDIR"
CONFIG_MANDIR="$CONFIG_MANDIR"
CONFIG_DOCDIR="$CONFIG_DOCDIR"
CONFIG_DATADIR="$CONFIG_DATADIR"
export CONFIG_PREFIX
export CONFIG_EXEC_PREFIX
export CONFIG_BINDIR
export CONFIG_SBINDIR
export CONFIG_LIBEXECDIR
export CONFIG_ETCDIR
export CONFIG_VARDIR
export CONFIG_LIBDIR
export CONFIG_INCDIR
export CONFIG_SHAREDIR
export CONFIG_MANDIR
export CONFIG_DOCDIR
export CONFIG_DATADIR
EOF
fi


################################################################################
# STAGE 2
CONFIG_STAGE=2

# Stage 2 read project configs
if test -n "$dot4m_list"; then
  for dot4m in $dot4m_list; do
    . ./$dot4m_tmp
    cd $cd_param $CONFIG_SRCROOT
  done
fi

if test -z "$DISABLE_MKMF"; then
  if test -x $CONFIG_4MAKE_PATH/mkmf; then
    $CONFIG_4MAKE_PATH/mkmf
  fi
fi


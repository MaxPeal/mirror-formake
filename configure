#!/bin/sh

################################################################################
# set base project variables
PACKAGE_NAME="PROJECT_X"
PACKAGE_VERSION="1.0.0"
CONFIG_OUT="build.conf"

################################################################################
# parse options
while test $# -gt 0; do
  param=`echo "$1" | sed 's/^--/-/'`
  case $param in
    -h|-help)
      op_help=1
      ;;
    -prefix=*)
      PREFIX=`echo "$param" | sed 's/^[^=]*=//'`
      ;;
    -exec-prefix=*)
      EXEC_PREFIX=`echo "$param" | sed 's/^[^=]*=//'`
      ;;
    -bindir=*)
      BINDIR=`echo "$param" | sed 's/^[^=]*=//'`
      ;;
    -sbindir=*)
      SBINDIR=`echo "$param" | sed 's/^[^=]*=//'`
      ;;
    -libexecdir=*)
      LIBEXECDIR=`echo "$param" | sed 's/^[^=]*=//'`
      ;;
    -libdir=*)
      LIBDIR=`echo "$param" | sed 's/^[^=]*=//'`
      ;;
    -incdir=*)
      INCDIR=`echo "$param" | sed 's/^[^=]*=//'`
      ;;
    -etcdir=*)
      ETCDIR=`echo "$param" | sed 's/^[^=]*=//'`
      ;;
    -vardir=*)
      VARDIR=`echo "$param" | sed 's/^[^=]*=//'`
      ;;
    -sharedir=*)
      SHAREDIR=`echo "$param" | sed 's/^[^=]*=//'`
      ;;
    -mandir=*)
      MANDIR=`echo "$param" | sed 's/^[^=]*=//'`
      ;;
    -docdir=*)
      DOCDIR=`echo "$param" | sed 's/^[^=]*=//'`
      ;;
    CC=*)
      CC=`echo "$param" | sed 's/^[^=]*=//'`
      ;;
    CFLAGS=*)
      CFLAGS=`echo "$param" | sed 's/^[^=]*=//'`
      ;;
    LDFLAGS=*)
      LDFLAGS=`echo "$param" | sed 's/^[^=]*=//'`
      ;;
    *)
      echo "$0: invalid option: $1"
      exit 1
      ;;
  esac
  shift
done

################################################################################
# print help if we received -h or --help parameter
if test x$op_help = x1; then
  cat <<EOF
Usage: configure [options]
  --prefix=PREFIX         path to install architecture-independent files [/usr/local]
  --exec-prefix=EPREFIX   path to install architecture-dependent files [PREFIX]
  --bindir=DIR            bin path [EPREFIX/bin]
  --sbindir=DIR           sbin path [EPREFIX/sbin]
  --libexecdir=DIR        libexec path [EPREFIX/libexec]
  --libdir=DIR            lib path [EPREFIX/lib]
  --incdir=DIR            include path [PREFIX/include]
  --etcdir=DIR            etc path [PREFIX/etc]
  --vardir=DIR            var path [PREFIX/var]
  --sharedir=DIR          share path [PREFIX/share]
  --mandir=DIR            man path [SHAREDIR/man]
  --docdir=DIR            doc path [SHAREDIR/doc]
  CC=CMD                  C compiler command
  CFLAGS=FLAGS            C compiler flags
  LDFLAGS=FLAGS           LD flags
EOF
  exit 0
fi

################################################################################
# go to package dir and set up PATH
cd `dirname "$0"`
PATH=`pwd`/mk:$PATH

################################################################################
# check that PATH is correct and we have access to the package scripts
cmdok cltest cppdef cprobe mkdep pofig || exit 1

################################################################################
# probe build host parameters: OS, OS version, kernel version, distro, distro version, cpu
# run 'pofig -h' to get help on tool parameters
HOST_OS=`pofig -o`
HOST_OS_VERSION=`pofig -s`
HOST_KERNEL_VERSION=`pofig -k`
HOST_DISTRO=`pofig -d`
HOST_DISTRO_VERSION=`pofig -r`
HOST_ARCH=`pofig -a`

################################################################################
# check system tools: make install
cmdok make install || exit 1

################################################################################
# check if we have valid C compiler and get compiler command
cprobe $CC >/dev/null || exit 1
CC=`cprobe $CC -c`

################################################################################
# check compiler, compiler flags, linker flags
# run 'cltest -h' to get help on tool parameters
cltest $CC || exit 1
if test -n "$CFLAGS$LDFLAGS"; then
  cltest $CC -cflags="$CFLAGS" -ldflags="$LDFLAGS" || exit 1
fi

################################################################################
# Set up standard installation directories
test -n "$PREFIX"      || PREFIX=/usr/local
test -n "$EXEC_PREFIX" || EXEC_PREFIX=$PREFIX
test -n "$BINDIR"      || BINDIR=$EXEC_PREFIX/bin
test -n "$SBINDIR"     || SBINDIR=$EXEC_PREFIX/sbin
test -n "$LIBEXECDIR"  || LIBEXECDIR=$EXEC_PREFIX/libexec
test -n "$ETCDIR"      || ETCDIR=$PREFIX/etc
test -n "$VARDIR"      || VARDIR=$PREFIX/etc
test -n "$LIBDIR"      || LIBDIR=$EXEC_PREFIX/lib
test -n "$INCDIR"      || INCDIR=$PREFIX/include
test -n "$SHAREDIR"    || SHAREDIR=$PREFIX/share
test -n "$MANDIR"      || MANDIR=$SHAREDIR/man
test -n "$DOCDIR"      || DOCDIR=$SHAREDIR/doc

DOCDIR=$DOCDIR/$PACKAGE_NAME
DATADIR=$SHAREDIR/$PACKAGE_NAME

################################################################################
# generate build config file
cat <<EOF >$CONFIG_OUT
PACKAGE_NAME="$PACKAGE_NAME"
PACKAGE_VERSION="$PACKAGE_VERSION"
PREFIX="$PREFIX"
EXEC_PREFIX="$EXEC_PREFIX"
BINDIR="$BINDIR"
SBINDIR="$SBINDIR"
LIBEXECDIR="$LIBEXECDIR"
LIBDIR="$LIBDIR"
INCDIR="$INCDIR"
ETCDIR="$ETCDIR"
VARDIR="$VARDIR"
SHAREDIR="$SHAREDIR"
MANDIR="$MANDIR"
DOCDIR="$DOCDIR"
DATADIR="$DATADIR"

HOST_OS="$HOST_OS"
HOST_OS_VERSION="$HOST_OS_VERSION"
HOST_KERNEL_VERSION="$HOST_KERNEL"
HOST_DISTRO="$HOST_DISTRO"
HOST_DISTRO_VERSION="$HOST_DISTRO_VERSION"
HOST_ARCH="$HOST_ARCH"

CFLAGS="$CFLAGS"
LDFLAGS="$LDFLAGS"
EOF

################################################################################
# probe compiler parameters and save to config file
# run 'cprobe -h' to get help on tool parameters
cprobe $CC -1 - $CFLAGS >>$CONFIG_OUT

################################################################################
# generate makefiles
./mkmf

################################################################################
# finish
echo "configuring done."


#!/bin/sh
#
# Formake mkconfigure
#
# Copyright (c) 2015-2017, Oleksiy Chernyavskyy
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

################################################################################
# JUMP TO MODERN SHELL IF POSSIBLE
(test_exit_code_127_sdfjsdfksjdhfksjdhf  >/dev/null) 2>/dev/null
if test $? -ne 127; then
  if test -z "$FORMAKE_BASH_REDIRECT"; then
    FORMAKE_BASH_REDIRECTED=1
    export FORMAKE_BASH_REDIRECTED
    if test -x /bin/bash; then
      exec /bin/bash "$0" ${1+"$@"}
    elif test -x /usr/bin/bash; then
      exec /usr/bin/bash "$0" ${1+"$@"}
    elif test -x /usr/local/bin/bash; then
      exec /usr/local/bin/bash "$0" ${1+"$@"}
    elif test -x /usr/pkg/bin/bash; then
      exec /usr/pkg/bin/bash "$0" ${1+"$@"}
    else
      (bash -c "pwd" >/dev/null) 2>/dev/null
      if test $? -eq 0; then
        exec bash "$0" ${1+"$@"}
      fi
    fi
  fi
fi
FORMAKE_BASH_REDIRECTED=
export FORMAKE_BASH_REDIRECTED
################################################################################


version_string="Formake mkconfigure 1.0"

script_name=`basename "$0"`
script_options="$@"
script_dir=`dirname "$0"`
tmp_help=/tmp/mkconf_help_$$.txt
rm -f $tmp_help
op_pkgname=package
op_pkgver=
out_file=configure
rm_out_file=0
op_force=
share_dir=

print_help() {
  cat <<EOF
Create 'configure' script

$script_name OPTIONS
  -name NAME         package name (PACKAGE_NAME) [$op_pkgname]
  -version VERSION   package version (PACKAGE_VERSION)
  -sys               probe system properties
  -progs ..          probe system programs
  -cc                probe and configure C environment
  -c++               probe and configure C++ environment
  -f                 force to overwrite existing configure script if found
  -o FILE            output script file [$out_file]
  -v                 print version
EOF
}

print_version() {
  echo "$version_string"
}

current_opt=
mk_scripts="relpath"
op_excom=
while test $# -gt 0; do
  case "$1" in
    -h|-help|--help)
      print_help
      exit 0
      ;;
    -v)
      print_version
      exit 0
      ;;
    -name)
      current_opt=name
      ;;
    -version)
      current_opt=version
      ;;
    -sys)
      op_sys=1
      mk_scripts="$mk_scripts pofig"
      current_opt=
      ;;
    -progs)
      op_progs=1
      current_opt=progs
      ;;
    -cc)
      op_cc=1
      mk_scripts="$mk_scripts cstem"
      current_opt=
      ;;
    -c++)
      op_cxx=1
      mk_scripts="$mk_scripts cstem+"
      current_opt=
      ;;
    -f)
      op_force=1
      current_opt=
      ;;
    -o)
      current_opt=o
      ;;
    *)
      case "$current_opt" in
        name)
          op_pkgname=$1
          current_opt=
          ;;
        version)
          op_pkgver=$1
          current_opt=
          ;;
        progs)
          op_excom="$op_excom $1"
          ;;
        o)
          out_file=$1
          if test -d "$out_file"; then
            out_file="$out_file/configure"
          fi
          out_file_dir=`dirname "$out_file"`
          if test ! -d "$out_file_dir"; then
            echo "$script_name: error. Directory not found: $out_file_dir" >&2
            exit 1
          fi
          op_force=1
          current_opt=
          ;;
        *)
          echo "$script_name: error. Invalid parameter: $1" >&2
          exit 1
          ;;
      esac
      ;;
  esac
  shift
done

if test -f $out_file && test x$op_force = x; then
  out_file="${out_file}.new"
fi


if test ! -d mk; then
  rm -f mk
  mkdir mk
fi
for script in excom $mk_scripts; do
  if test -n "$share_dir" && test -f $share_dir/$script; then
    cp $share_dir/$script mk
  elif test -f $script_dir/$script; then
    cp $script_dir/$script mk
  else
    echo "$script_name: warning: $share_dir/$script script not found" >&2
  fi
done


cat <<TOP_EOF >$out_file
#!/bin/sh
################################################################################
# Generated by mkconfigure
TOP_EOF
(date >/dev/null) 2>/dev/null
if test $? -eq 0; then
  date | sed 's/^/# /' >>$out_file
fi

cat <<TOP_EOF >>$out_file
#
# $script_name $script_options
#
# Important variables to use:
#   PACKAGE_NAME     - package (project) name
#   PACKAGE_VERSION  - package version
#   CONF             - name of the build config file
#   SRCROOT          - package source root directory (package top dir)

################################################################################
# BASE CONFIGURATION
PACKAGE_NAME="$op_pkgname"
PACKAGE_VERSION="$op_pkgver"
CONF="build.conf"
MK_CONF="mk.conf"
DISTCLEAN_FILES="\$CONF \$MK_CONF configure.log"

TOP_EOF

cat <<"TOP_EOF" >>$out_file
################################################################################
# PACKAGE PATHES
SRCROOT=`dirname "$0"`
PATH=`pwd`/mk:$SRCROOT/mk:$PATH

TOP_EOF

cat <<TOP_EOF >>$out_file
################################################################################
# PACKAGE CONSISTENCY
#
# Here we check scripts that are used by this script
excom $mk_scripts || exit 1

TOP_EOF

cat <<"TOP_EOF" >>$out_file

################################################################################
# IMPORTANT VARIABLES
#
SRCROOT=`dirname "$0" | xargs relpath ./`
ABS_SRCROOT=`pwd`/$SRCROOT
TOP_EOF

cat <<"TOP_EOF" >>$out_file

################################################################################
# OPTIONS
TOP_EOF

params="PACKAGE_NAME PACKAGE_VERSION PREFIX EXEC_PREFIX BINDIR SBINDIR LIBEXECDIR LIBDIR INCDIR ETCDIR VARDIR SHAREDIR MANDIR DOCDIR"

cat <<"TOP_EOF" >>$out_file
while test $# -gt 0; do
  param=`echo "$1" | sed 's/^--*/-/'`
  case $param in
    -h|-help)
      op_help=1
      ;;
    -prefix=*)
      PREFIX=`echo "$param" | sed 's/^[^=]*=//'`
      ;;
    -exec-prefix=*)
      EXEC_PREFIX=`echo "$param" | sed 's/^[^=]*=//'`
      ;;
    -bindir=*)
      BINDIR=`echo "$param" | sed 's/^[^=]*=//'`
      ;;
    -sbindir=*)
      SBINDIR=`echo "$param" | sed 's/^[^=]*=//'`
      ;;
    -libexecdir=*)
      LIBEXECDIR=`echo "$param" | sed 's/^[^=]*=//'`
      ;;
    -libdir=*)
      LIBDIR=`echo "$param" | sed 's/^[^=]*=//'`
      ;;
    -incdir=*)
      INCDIR=`echo "$param" | sed 's/^[^=]*=//'`
      ;;
    -etcdir=*)
      ETCDIR=`echo "$param" | sed 's/^[^=]*=//'`
      ;;
    -vardir=*)
      VARDIR=`echo "$param" | sed 's/^[^=]*=//'`
      ;;
    -sharedir=*)
      SHAREDIR=`echo "$param" | sed 's/^[^=]*=//'`
      ;;
    -mandir=*)
      MANDIR=`echo "$param" | sed 's/^[^=]*=//'`
      ;;
    -docdir=*)
      DOCDIR=`echo "$param" | sed 's/^[^=]*=//'`
      ;;
TOP_EOF
if test x$op_cc = x1; then
  params="$params CC CFLAGS"
  cat <<"TOP_EOF" >>$out_file
    CC=*)
      CC=`echo "$param" | sed 's/^[^=]*=//'`
      ;;
    CFLAGS=*)
      CFLAGS=`echo "$param" | sed 's/^[^=]*=//'`
      ;;
TOP_EOF
fi
if test x$op_cxx = x1; then
  params="$params CXX CXXFLAGS"
  cat <<"TOP_EOF" >>$out_file
    CXX=*)
      CXX=`echo "$param" | sed 's/^[^=]*=//'`
      ;;
    CXXFLAGS=*)
      CXXFLAGS=`echo "$param" | sed 's/^[^=]*=//'`
      ;;
TOP_EOF
fi
if test -n "$op_cc$op_cxx"; then
  params="$params LDFLAGS"
  cat <<"TOP_EOF" >>$out_file
    LDFLAGS=*)
      LDFLAGS=`echo "$param" | sed 's/^[^=]*=//'`
      ;;
TOP_EOF
fi
cat <<"TOP_EOF" >>$out_file
    *)
      echo "$script_name: invalid option: $1"
      exit 1
      ;;
  esac
  shift
done

if test x$op_help = x1; then
  cat <<EOF
Usage: configure [options]
  --prefix=PREFIX         path to install architecture-independent files [/usr/local]
  --exec-prefix=EPREFIX   path to install architecture-dependent files [PREFIX]
  --bindir=DIR            bin path [EPREFIX/bin]
  --sbindir=DIR           sbin path [EPREFIX/sbin]
  --libexecdir=DIR        libexec path [EPREFIX/libexec]
  --libdir=DIR            lib path [EPREFIX/lib]
  --incdir=DIR            include path [PREFIX/include]
  --etcdir=DIR            etc path [PREFIX/etc]
  --vardir=DIR            var path [PREFIX/var]
  --sharedir=DIR          share path [PREFIX/share]
  --mandir=DIR            man path [SHAREDIR/man]
  --docdir=DIR            doc path [SHAREDIR/doc]
TOP_EOF
if test x$op_cc = x1; then
  cat <<TOP_EOF >>$out_file
  CC=CMD                  C compiler command
  CFLAGS=FLAGS            C compiler flags
TOP_EOF
fi
if test x$op_cxx = x1; then
  cat <<TOP_EOF >>$out_file
  CXX=CMD                 C++ compiler command
  CXXFLAGS=FLAGS          C++ compiler flags
TOP_EOF
fi
if test -n "$op_cc$op_cxx"; then
  cat <<TOP_EOF >>$out_file
  LDFLAGS=FLAGS           LD flags
TOP_EOF
fi
cat <<"TOP_EOF" >>$out_file
EOF
  exit 0
fi

################################################################################
# VPATH
VPATH_ON=
test ! -f `basename "$0"` && VPATH_ON=1

################################################################################
# INIT BUILD ROOT
if test x$VPATH_ON = x1; then
  if test -f $SRCROOT/mk; then
    cp -Rf $SRCROOT/mk ./
    rm -f mk/*.conf
  fi
fi


################################################################################
# STANDARD DIRECTORIES
#
# Set up standard installation directories

test -n "$PREFIX"      || PREFIX=/usr/local
test -n "$EXEC_PREFIX" || EXEC_PREFIX=$PREFIX
test -n "$BINDIR"      || BINDIR=$EXEC_PREFIX/bin
test -n "$SBINDIR"     || SBINDIR=$EXEC_PREFIX/sbin
test -n "$LIBEXECDIR"  || LIBEXECDIR=$EXEC_PREFIX/libexec
test -n "$ETCDIR"      || ETCDIR=$PREFIX/etc
test -n "$VARDIR"      || VARDIR=$PREFIX/etc
test -n "$LIBDIR"      || LIBDIR=$EXEC_PREFIX/lib
test -n "$INCDIR"      || INCDIR=$PREFIX/include
test -n "$SHAREDIR"    || SHAREDIR=$PREFIX/share
test -n "$MANDIR"      || MANDIR=$SHAREDIR/man
test -n "$DOCDIR"      || DOCDIR=$SHAREDIR/doc

DOCDIR=$DOCDIR/$PACKAGE_NAME
DATADIR=$SHAREDIR/$PACKAGE_NAME

TOP_EOF

params="$params DATADIR SRCROOT ABS_SRCROOT"

cat <<"TOP_EOF" >>$out_file

################################################################################
# CREATE BUILD AND MK CONFIG FILES
cat <<EOF >$CONF
TOP_EOF
for param in $params; do
  echo "$param=\"\$$param\"" >>$out_file
done

cat <<"TOP_EOF" >>$out_file
EOF

cat $CONF > mk/$MK_CONF

TOP_EOF

if test x$op_sys = x1; then
  cat <<"TOP_EOF" >>$out_file

################################################################################
## PROBE THE BASE SYSTEM PROPERTIES
##
## See pofig manual or run 'pofig -help' to get a full list of options

## Probe system properties: OS, OS version, kernel, kernel version, distro,
## distro version, architecture:
sys_os=`pofig -os`
sys_os_version=`pofig -osver`
sys_kernel=`pofig -kernel`
sys_kernel_version=`pofig -kernver`
sys_distro=`pofig -distro`
sys_distro_version=`pofig -distver`
sys_arch=`pofig -arch`

TOP_EOF
fi

cat <<TOP_EOF >>$out_file

################################################################################
## CHECK THAT REQUIRED PROGRAMS ARE AVAILABLE
##
## Run 'excom -help' to get a full list of options

## Example. Find programs: ar tar bzip2. Exit if any one not found.
# excom ar tar bzip2 || exit 1

excom install $op_excom || exit 1
TOP_EOF


if test x$op_cc = x1; then
  cat <<"TOP_EOF" >>$out_file

################################################################################
## PROBE AND CONFIGURE C ENVIRONMENT
##
## See cstem manual or run 'cstem -help' to get a full list of options

## Check C compiler, flags , linker, linker flags
cstem test -cc $CC -cflags="$CFLAGS" -ld $CC -ldflags="$LDFLAGS" || exit 1

## Configure cstem for the following tests
cstem config CC=$CC CFLAGS=$CFLAGS LDFLAGS=$LDFLAGS

## Probe compiler properties: compiler id, version, command, language standard,
## target OS, target OS version, target kernel, target architecture,
## target bitness, target endianess, target data model:
cc_id=`cstem probe -id`
cc_version=`cstem probe -ver`
cc_cmd=`cstem probe -cmd`
cc_standard=`cstem probe -std`
cc_os=`cstem probe -os`
cc_os_version=`cstem probe -osver`
cc_kernel=`cstem probe -kernel`
cc_arch=`cstem probe -arch`
cc_bitness=`cstem probe -bits`
cc_endianess=`cstem probe -endian`
cc_data_model=`cstem probe -dm`

## Test C environment
# cstem test -lib ... -inc ... -def ... -type ... -enum ... -var ... -func ... -sym ... -rsym ...

TOP_EOF
fi

if test x$op_cxx = x1; then
  cat <<"TOP_EOF" >>$out_file

################################################################################
## PROBE AND CONFIGURE C++ ENVIRONMENT
##
## See cstem+ manual or run 'cstem+ -help' to get a full list of options

## Check C++ compiler, flags , linker, linker flags
cstem+ test -cxx $CXX -cxxflags="$CXXFLAGS" -ld $CXX -ldflags="$LDFLAGS" || exit 1

## Configure cstem+ for the following tests
cstem+ config CXX=$CXX CXXFLAGS=$CXXFLAGS LDFLAGS=$LDFLAGS

## Probe compiler properties: compiler id, version, command, language standard,
## target OS, target OS version, target kernel, target architecture,
## target bitness, target endianess, target data model:
cxx_id=`cstem+ probe -id`
cxx_version=`cstem+ probe -ver`
cxx_cmd=`cstem+ probe -cmd`
cxx_standard=`cstem+ probe -std`
cxx_os=`cstem+ probe -os`
cxx_os_version=`cstem+ probe -osver`
cxx_kernel=`cstem+ probe -kernel`
cxx_arch=`cstem+ probe -arch`
cxx_bitness=`cstem+ probe -bits`
cxx_endianess=`cstem+ probe -endian`
cxx_data_model=`cstem+ probe -dm`

## Test C++ environment
# cstem+ test -lib ... -inc ... -def ... -type ... -enum ... -var ... -func ... -sym ... -rsym ...

TOP_EOF
fi

cat <<"TOP_EOF" >>$out_file

################################################################################
# FINISH
echo "configuring done."

TOP_EOF

chmod +x $out_file

echo "created script '$out_file'"


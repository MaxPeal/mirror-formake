#!/bin/sh
#
# Formake libro
#
# Copyright (c) 2015-2017, Oleksiy Chernyavskyy
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

################################################################################
# JUMP TO MODERN SHELL IF POSSIBLE
(test_exit_code_127_sdfjsdfksjdhfksjdhf  >/dev/null) 2>/dev/null
if test $? -ne 127; then
  if test -z "$FORMAKE_BASH_REDIRECT"; then
    FORMAKE_BASH_REDIRECTED=1
    export FORMAKE_BASH_REDIRECTED
    if test -x /bin/bash; then
      exec /bin/bash "$0" ${1+"$@"}
    elif test -x /usr/bin/bash; then
      exec /usr/bin/bash "$0" ${1+"$@"}
    elif test -x /usr/local/bin/bash; then
      exec /usr/local/bin/bash "$0" ${1+"$@"}
    elif test -x /usr/pkg/bin/bash; then
      exec /usr/pkg/bin/bash "$0" ${1+"$@"}
    else
      (bash -c "pwd" >/dev/null) 2>/dev/null
      if test $? -eq 0; then
        exec bash "$0" ${1+"$@"}
      fi
    fi
  fi
fi
FORMAKE_BASH_REDIRECTED=
export FORMAKE_BASH_REDIRECTED
################################################################################


version_string="libro 0.2"
script_name=`basename "$0"`
script_dir=`dirname "$0"`

################################################################################
# LOAD CONFIG
AR=
AR_FLAGS=
if test -f $script_dir/mk.conf; then
  . $script_dir/mk.conf
fi
if test -f $script_dir/libro.conf; then
  . $script_dir/libro.conf
fi
test -n "$PROG_AR" && AR=$PROG_AR
test -n "$AR" || AR=ar
test -n "$AR_FLAGS" || AR_FLAGS=rcs
################################################################################

print_help() {
  cat <<EOF
Build static and dynamic libraries

$script_name [static] -name NAME [-ver VERSION] -obj OBJECTS [-o dir] [-p] [-s]
$script_name shared [-ldflags=FLAGS] -name NAME [-ver VERSION] [-c++] -obj OBJECTS [-o DIR] [-p] [-s]
$script_name -v
 static           create static library (default)
 shared           create shared library
 -name NAME       library name 
 -ver X[.Y[.Z]]   library version in specified format
 -obj OBJECTS     object files
 -ldflags=FLAGS   LD flags
 -c++             use C++ linker
 -o DIR           output directory
 -p               only print commands that would be run
 -s               do not print commands
 -v               print version
EOF
}

print_version() {
  echo "$version_string"
}

run_command() {
  if test x$op_silent = x; then
    cat <<EOF
$@
EOF
  fi
  if test x$op_print = x; then
"$@"
  fi
  if test x$op_print4mk = x1; then
    echo "CMD $@"
  fi
}


mkstatic() {
  if test x$op_print = x; then
    ($AR -h >dev/null) 2>/dev/null
    if test $? -ge 126; then
      echo "$script_name: $AR not found" >&2
      exit 1
    fi
  fi

  lib_static="lib${op_name}.a"
  if test -n "$op_dir"; then
    lib_static="$op_dir/$lib_static"
  fi

  if test x$op_print4mk = x1; then
    echo "TARGETS $lib_static"
    echo "LIB_A $lib_static"
    echo "REGULAR_FILES $lib_static"
  fi

  run_command rm -f $lib_static
  run_command $AR $AR_FLAGS $lib_static $op_obj
  run_command ranlib $lib_static
}

mkshared() {
  if test x$cxx_mode = x; then
    xstem=cstem
  else
    xstem="cstem c++"
  fi
  
  ($xstem -h >/dev/null) 2>/dev/null
  if test $? -eq 0; then
    CSTEM=$xstem
  else
    ($script_dir/$xstem -h >/dev/null) 2>/dev/null
    if test $? -eq 0; then
      CSTEM=$script_dir/$xstem
    else
      echo "$script_name: error: $xstem not found" >&2
      exit 1
    fi
  fi
  
  cc_cmd=`$CSTEM -cmd`
  if test -z "$cc_cmd"; then
    echo "$script_name: compiler not found" >&2
    exit 1
  fi
  cc_id=`$CSTEM -id`
  
  if test -n "$op_dir"; then
    out_dir="$op_dir/"
  else
    out_dir=
  fi

  if test -z "$op_age"; then
    age_pref=
  else
    age_pref=".${op_age}"
  fi

  orig_dir=`pwd`
  case "$cc_id" in
    gcc|*)
      lib_so="lib${op_name}.so"
      lib_so_c="${lib_so}.${op_current}"
      lib_so_cra="${lib_so_c}.${op_revision}$age_pref"

      if test x$op_print4mk = x1; then
        echo "TARGETS $out_dir$lib_so $out_dir$lib_so_c $out_dir$lib_so_cra"
        echo "LIB_SO $out_dir$lib_so"
        echo "LIB_SO_C $out_dir$lib_so_c"
        echo "LIB_SO_CRA $out_dir$lib_so_cra"
        echo "REGULAR_FILES $out_dir$lib_so_cra"
        echo "SYMLINKS $out_dir$lib_so $out_dir$lib_so_c"
      fi

      run_command rm -f $out_dir$lib_so $out_dir$lib_so_c $out_dir$lib_so_cra
  	  run_command $cc_cmd -shared -fPIC -Wl,-soname,$lib_so_c -o $out_dir$lib_so_cra $op_obj $op_ldflags
  	  run_command ln -s $lib_so_cra $out_dir$lib_so_c
  	  run_command ln -s $lib_so_cra $out_dir$lib_so
    ;;
  esac
}

if test $# -eq 0; then
  echo "$script_name: error: no parameters passed" >&2
  exit 1
fi

case "$1" in
  -h|-help|--help)
    print_help
    exit 0
    ;;
  -v)
    print_version
    exit 0
    ;;
  static)
    lib_type=static
    shift
    ;;
  shared)
    lib_type=shared
    shift
    ;;
  *)
    lib_type=static
    ;;
esac

if test $# -eq 0; then
  echo "$script_name: error: additional parameters missing" >&2
  exit 1
fi

current_opt=
while test $# -gt 0; do
  case "$1" in
    -name)
      op_name=
      current_opt=name
      ;;
    -ver)
      op_ver=
      current_opt=ver
      ;;
    -obj)
      op_obj=
      current_opt=obj
      ;;
    -ldflags=*)
      op_ldflags=`echo "$1" | sed 's/^[^=]*=//'`
      current_opt=
      ;;
    -c++)
      cxx_mode=1
      current_opt=
      ;;
    -o)
      op_dir=
      current_opt=o
      ;;
    -p)
      op_print=1
      current_opt=
      ;;
    -s)
      op_silent=1
      current_opt=
      ;;
    -print4mk)
      op_print4mk=1
      op_print=1
      op_silent=1
      current_opt=
      ;;
    *)
      case "$current_opt" in
        name)
          op_name=$1
          current_opt=
          ;;
        ver)
          _current=`echo "$1" | sed 's/\..*//'`
          rest=`echo "$1" | sed 's/^[^.]*\.*//'`
          _revision=`echo "$rest" | sed 's/\..*//'`
          rest=`echo "$rest" | sed 's/^[^.]*\.*//'`
          _age=`echo "$rest" | sed 's/\..*//'`
          op_ver=$1
          op_current=$_current
          op_revision=$_revision
          op_age=$_age
          current_opt=
          ;;
        o)
          op_dir=$1
          current_opt=
          ;;
        obj)
          op_obj="$op_obj $1"
          ;;
        *)
          echo "$script_name: error: invalid parameter $1" >&2
          exit 1
          ;;
      esac
      ;;
  esac
  shift
done

if test -z "$op_obj"; then
  echo "$script_name: error: objects not specified" >&2
  exit 1
fi

if test -z "$op_name"; then
  op_name=nn
fi

if test -z "$op_ver"; then
  op_ver="1.0.0"
  op_current=1
  op_revision=0
  op_age=0
elif test -z "$op_revision"; then
  op_revision=0
fi

if test -n "$op_dir" && test -z "$op_print"; then
  test ! -d $op_dir && mkdir -p $op_dir
  if test ! -d $op_dir; then
    echo "$script_name: error: could not create output directory $op_dir" >&2
    exit 1
  fi
  _orig_dir=`pwd`
  cd $op_dir
  op_dir=`pwd`
  cd $_orig_dir
elif test -n "$op_dir" && test x$op_print4mk = x1; then
  echo "CMD test -d $op_dir || mkdir -p $op_dir"
fi

if test $lib_type = static; then
  mkstatic
else
  mkshared
fi


#!/bin/sh
#
# Formake ldlshell
#
# Copyright (c) 2015-2017, Oleksiy Chernyavskyy
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

################################################################################
# JUMP TO MODERN SHELL IF POSSIBLE
(test_exit_code_127_sdfjsdfksjdhfksjdhf  >/dev/null) 2>/dev/null
if test $? -ne 127; then
  if test -z "$FORMAKE_BASH_REDIRECT"; then
    FORMAKE_BASH_REDIRECTED=1
    export FORMAKE_BASH_REDIRECTED
    if test -x /bin/bash; then
      exec /bin/bash "$0" ${1+"$@"}
    elif test -x /usr/bin/bash; then
      exec /usr/bin/bash "$0" ${1+"$@"}
    elif test -x /usr/local/bin/bash; then
      exec /usr/local/bin/bash "$0" ${1+"$@"}
    elif test -x /usr/pkg/bin/bash; then
      exec /usr/pkg/bin/bash "$0" ${1+"$@"}
    else
      (bash -c "pwd" >/dev/null) 2>/dev/null
      if test $? -eq 0; then
        exec bash "$0" ${1+"$@"}
      fi
    fi
  fi
fi
FORMAKE_BASH_REDIRECTED=
export FORMAKE_BASH_REDIRECTED
################################################################################


script_name=`basename "$0"`
script_dir=`dirname "$0"`
tmp_rc=/tmp/ldlshell$$-bash.rc

################################################################################
# LOAD CONFIG
if test -f $script_dir/mk.conf; then
  . $script_dir/mk.conf
fi
if test -f $script_dir/ldlshell.conf; then
  . $script_dir/ldlshell.conf
fi
################################################################################

print_help() {
  cat <<EOF
Load interactive shell with predefined LD library path environment

Usage: ldlshell [PROFILE]

ldlshell starts new interactive shell with predefined variables:
  LD_LIBRARY_PATH - on Linux and other UNIX-like systems
  LIBPATH         - on AIX
  SHLIB_PATH      - on HP-UX

ldlshell receives parameters from invironment variables in the following order of priority:
  <PROFILE>_LDLP_DIRS   - list of library search directories separated with a colon (:)
                          used if PROFILE parameter is specified
  <PROFILE>_LDLP_ID     - name of the shell session used to identify it among different sessions
                          used if PROFILE parameter is specified
  LDLP_DIRS             - list of library search directories separated with a colon (:)
  LDLP_ID               - name of the shell session used to identify it among different sessions
  PACKAGE_NAME          - name of the shell session used to identify it among different sessions

ldlshell also searches configuration files in it's local directory in the following order of priority:
  ldlshell.conf
  mk.conf

Configuration file is loaded when found. It overried environment variables that are set.
EOF
}

abs_path() {
  _sub_orig_dir=`pwd`
  if test $# = 0; then
    abs_path_ret=
    return
  fi
  if test $# = 2; then
    _arg_orig_dir=$1
    _arg=$2
    if echo "$_arg" | grep "^/" > /dev/null; then
      :
    else
      _arg=`echo "$_arg_orig_dir/$_arg" | sed 's!//*!/!g'`
    fi
  else
    _arg=$1
  fi
  if test -e "$_arg"; then
    if test -d $_arg; then
      _file=
    else
      _file=`basename "$_arg"`
      _arg=`dirname "$_arg"`
    fi

    cd $_cd_param $_arg
    abs_path_ret=`pwd`
    if test x"$_file" != "x"; then
      abs_path_ret="$abs_path_ret/$_file"
    fi

    cd $_cd_param $_sub_orig_dir
  else
    if echo "$_arg" | grep "^/" > /dev/null; then
      abs_path_ret="$_arg"
    else
      abs_path_ret="$_sub_orig_dir/$_arg"
    fi
    abs_path_ret=`echo "$abs_path_ret" | sed 's#//*#/#g'`
    abs_path_ret=`echo "$abs_path_ret" | sed 's#/*$#/#'`
    string_prev=
    while test "x$abs_path_ret" != "x$string_prev" ; do
      string_prev=$abs_path_ret
      abs_path_ret=`echo "$abs_path_ret" | sed 's#/[^/][^/][^/][^/]*/\.\./#/#g' | sed 's#/[^/][^/.]/\.\./#/#g' | sed 's#/[^/.][^/]/\.\./#/#g' | sed 's#/[^/.]/\.\./#/#g'`
      abs_path_ret=`echo "$abs_path_ret" | sed 's#^/\.\./#/#' | sed 's#^/\.\.$#/#'`
      abs_path_ret=`echo "$abs_path_ret" | sed 's#/\./#/#g' | sed 's#/\.$#/#'`
    done
    abs_path_ret=`echo "$abs_path_ret" | sed 's#/$##' | sed 's#^$#/#'`
  fi
}

if test $# -gt 1; then
  echo "$script_name: error: invalid number of parameters" >&2
  exit 1
fi

op_profile=
if test $# -gt 0; then
  case "$1" in
    -h|-help|--help)
      print_help
      exit 0
      ;;
    *)
      op_profile=$1
      ;;
  esac
fi

if test -f $script_dir/ldlshell.conf; then
  . $script_dir/ldlshell.conf
elif test -f $script_dir/mk.conf; then
  . $script_dir/mk.conf
fi

if test -n "$op_profile"; then
  profile_check=`echo "$op_profile" | sed 's/[^a-zA-Z0-9_]//g'`
  if test "$profile_check" != "$op_profile"; then
    echo "$script_name: error: bad profile name: $op_profile"
    exit 1
  fi
  case "$op_profile" in
    [0-9]*)
      echo "$script_name: error: bad profile name. Can't start with number: $op_profile"
      exit 1
      ;;
  esac
      
  eval ldlp_dirs=\$${op_profile}_LDLP_DIRS
  eval ldlp_id=\$${op_profile}_LDLP_ID
  if test -n "$ldlp_id"; then
    ldlp_id="$ldlp_id "
  elif test -n "$PACKAGE_NAME"; then
    ldlp_id="$PACKAGE_NAME "
  else
    ldlp_id="$op_profile "
  fi
else
  ldlp_dirs=$LDLP_DIRS
  if test -n "$LDLP_ID"; then
    ldlp_id="$LDLP_ID "
  elif test -n "$PACKAGE_NAME"; then
    ldlp_id="$PACKAGE_NAME "
  else
    ldlp_id=
  fi
fi

ldlp_abs=
if test -n "$ldlp_dirs"; then
  IFS_save=$IFS
  IFS=:
  for lp in $ldlp_dirs; do
    abs_path "$lp"
    ldlp_abs="$ldlp_abs:$abs_path_ret"
  done
  IFS=$IFS_save
  ldlp_abs=`echo "$ldlp_abs" | sed 's/^://'`
fi

rm -f $tmp_rc
if test -f /etc/bash.bashrc; then
  cat /etc/bash.bashrc >>$tmp_rc
fi
if test -f $HOME/.bashrc; then
  cat $HOME/.bashrc >>$tmp_rc
fi

(command -v ls >/dev/null) 2>/dev/null
if test $? -eq 0; then
  have_command_v=1
fi
(hash ls >/dev/null) 2>/dev/null
if test $? -eq 0; then
  have_hash=1
fi
(type -P ls >/dev/null) 2>/dev/null
if test $? -eq 0; then
  have_type_p=1
fi
(whence -p ls >/dev/null) 2>/dev/null
if test $? -eq 0; then
  have_whence_p=1
fi

bash_cmd=
if test x$have_command_v = x1; then
  (command -v bash >/dev/null) 2>/dev/null
  bash_cmd=bash
elif test x$have_hash = x1; then
  (hash bash >/dev/null) 2>/dev/null
  bash_cmd=bash
elif test x$have_type_p = x1; then
  (type -P bash >/dev/null) 2>/dev/null
  bash_cmd=bash
elif test x$have_whence_p = x1; then
  (whence -p bash >/dev/null) 2>/dev/null
  bash_cmd=bash
else
  IFS_save=$IFS
  IFS=:
  for dir in $PATH; do
    if test -n "$dir" && test -f "$dir/bash" && test -x "$dir/bash" ; then
      bash_cmd=bash
      break
    fi
  done
  IFS=$IFS_save
fi

ldlp_abs=`echo "$ldlp_abs" | sed 's/^:*//' | sed 's/:*$//'`
if test -n "$ldlp_abs"; then
  ldlp_abs="$ldlp_abs:"
fi

if test -n "$bash_cmd"; then
  cat <<EOF >>$tmp_rc
export LD_LIBRARY_PATH="${ldlp_abs}$LD_LIBRARY_PATH"
export LIBPATH=${ldlp_abs}$LIBPATH
export SHLIB_PATH=${ldlp_abs}$SHLIB_PATH
export PS1="\[\e[1;31m\]${ldlp_id}ldlshell\[\e[0;37m\] \\$ "
cat <<SUB_EOF

LD_LIBRARY_PATH: \$LD_LIBRARY_PATH

SUB_EOF
rm -f $tmp_rc
EOF

  $bash_cmd --rcfile $tmp_rc
else
  export LD_LIBRARY_PATH="$ldlp_abs:$LD_LIBRARY_PATH"
  export LIBPATH=$ldlp_abs:$LIBPATH
  export SHLIB_PATH=$ldlp_abs:$SHLIB_PATH
  export PS1="${ldlp_id}ldlshell \\$ "
  /bin/sh
fi

rm -f $tmp_rc


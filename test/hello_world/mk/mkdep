#!/bin/sh
#
# mkdep
#
# Copyright (c) 2015-2018, Oleksii Cherniavskyi
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

################################################################################
# SWITCH TO MODERN SHELL IF POSSIBLE
(test_exit_code_127_sdfjsdfksjdhfksjdhf  >/dev/null) 2>/dev/null
if test $? -ne 127; then
  if test -z "$FORMAKE_BASH_REDIRECTED"; then
    FORMAKE_BASH_REDIRECTED=1
    export FORMAKE_BASH_REDIRECTED
    if test -x /bin/bash; then
      exec /bin/bash "$0" ${1+"$@"}
    elif test -x /usr/bin/bash; then
      exec /usr/bin/bash "$0" ${1+"$@"}
    elif test -x /usr/local/bin/bash; then
      exec /usr/local/bin/bash "$0" ${1+"$@"}
    elif test -x /usr/pkg/bin/bash; then
      exec /usr/pkg/bin/bash "$0" ${1+"$@"}
    else
      (bash -c "pwd" >/dev/null) 2>/dev/null
      if test $? -eq 0; then
        exec bash "$0" ${1+"$@"}
      fi
    fi
  fi
fi
FORMAKE_BASH_REDIRECTED=
export FORMAKE_BASH_REDIRECTED
################################################################################

script_name=`basename "$0"`
orig_dir=`pwd`

if test "x$CONFIG_CACHE_LOADED" = x && test -n "$CONFIG_CACHE" && test -f "$CONFIG_CACHE"; then
  . $CONFIG_CACHE
fi

cd_param=
(cd -P / >/dev/null) 2>/dev/null
if test $? -eq 0; then
  cd_param="-P"
fi
cd $cd_param $orig_dir


print_help() {
  cat <<EOF
Generate Make dependency rules for C/C++ sources

Usage: $script_name [<compiler>] <compiler_options>

EOF
}

print_version() {
  cat <<EOF
mkdep 1.1
Copyright (C) 2015-2018 Oleksii Cherniavskyi
EOF
}

if test $# -eq 0; then
  echo "$script_name: no parameters specified" >&2
  exit 1
fi

first_param=1
op_cmd=
op_src=
op_cflags=
op_ofile=
src_multi=
op_compile=
out_obj=
MKDEP_LANG=c
while test $# -gt 0; do
  case "$1" in
    -h|-help|--help)
      print_help
      exit 0
      ;;
    -c)
      op_compile=1
      ;;
    "/c")
      op_compile=1
      ;;
    "/Fo:")
      shift
      op_ofile=$1
      out_obj=$1
      ;;
    -o)
      shift
      op_ofile=$1
      ;;
    -v|--version)
      if test x$first_param = x1; then
        print_version
        exit 0
      fi
      op_cflags="$op_cflags $1"
      ;;
    -*)
      op_cflags="$op_cflags $1"
      ;;
    *.c)
      test -n "$op_src" && src_multi=1
      op_src="$op_src $1"
      ;;
    *.C|*.[Cc][Cc]|*.[Cc][Pp][Pp]|*.[Cc][Xx][Xx]|*.[Cc]++)
      test -n "$op_src" && src_multi=1
      op_src="$op_src $1"
      MKDEP_LANG=c++
      ;;
    *.h)
      test -n "$op_src" && src_multi=1
      op_src="$op_src $1"
      ;;
    *.H|*.[Hh]++|*.[Hh][Hh]|*.[Hh][Xx][Xx]|*.[Hh][Pp][Pp])
      test -n "$op_src" && src_multi=1
      op_src="$op_src $1"
      MKDEP_LANG=c++
      ;;
    *)
      if test x$first_param = x1; then
        op_cmd=`echo "$1" | sed "s#^\(\.\.*\)/#$orig_dir/\1/#"`
      fi
      ;;
  esac
  shift
  first_param=
done

if test -z "$op_src"; then
  echo "$script_name: no source files specified" >&2
  exit 1
fi

if test -n "$op_ofile" && test x$op_compile = x1 && test x$src_multi = x; then
  out_obj=$op_ofile
fi

################################################################################
#CONFIG_MK_PATH
if test -z "$CONFIG_MK_PATH"; then
  cd $cd_param `dirname "$0"`
  if test -x $script_name; then
    CONFIG_MK_PATH=`pwd`
  elif test -d $CONFIG_SRCROOT/mk && test -x $CONFIG_SRCROOT/mk/$script_name; then
    cd $cd_param $CONFIG_SRCROOT/mk
    CONFIG_MK_PATH=`pwd`
  else
    IFS_save=$IFS
    IFS=:
    for dir in $PATH; do
      if test -f "$dir/$script_name" && test -x "$dir/$script_name" ; then
        abs_path "$dir"
        CONFIG_MK_PATH=$abs_path_ret
        break
      fi
    done
    IFS=$IFS_save
  fi

  if test -z "$CONFIG_MK_PATH"; then
    echo "$script_name: Formake modules not found" >&2
    exit 1
  fi

  export CONFIG_MK_PATH
  PATH="$CONFIG_MK_PATH:$PATH"
  export PATH
  cd $cd_param $orig_dir
fi
################################################################################

if test -f $CONFIG_MK_PATH/subscript; then
  . $CONFIG_MK_PATH/subscript
else
  echo "$script_name: module not found: subscript" >&2
  exit 1
fi

############
if test -n "$op_cmd"; then
  if test "$MKDEP_LANG" = "c++"; then
    CONFIG_CXX=$op_cmd
    export CONFIG_CXX
  else
    CONFIG_CC=$op_cmd
    export CONFIG_CC
  fi
fi

if test -n "$op_cflags"; then 
  if test "$MKDEP_LANG" = "c++"; then
    CONFIG_CXXFLAGS=$op_cflags
    export CONFIG_CXXFLAGS
  else
    CONFIG_CFLAGS=$op_cflags
    export CONFIG_CFLAGS
  fi
fi

if test "$MKDEP_LANG" = "c++"; then
  formake_cxxprobe_exifer
  MKDEP_CC=$CONFIG_CXX
  MKDEP_CFLAGS=$CONFIG_CXXFLAGS
  MKDEP_CC_TYPE=$CONFIG_CXX_TYPE
  MKDEP_CC_OS=$CONFIG_CXX_OS
else
  formake_cprobe_exifer
  MKDEP_CC=$CONFIG_CC
  MKDEP_CFLAGS=$CONFIG_CFLAGS
  MKDEP_CC_TYPE=$CONFIG_CC_TYPE
  MKDEP_CC_OS=$CONFIG_CC_OS
fi

formake_pofig
############

case "$MKDEP_CC_TYPE" in
  ticc)
    cpp_flag=-ppl
    ;;
  msc)
    cpp_flag="/E"
    obj_ext="obj"
    ;;
  gcc|clang|hpacc|hpansic|intel|mipspro|sunpro|tinyc|xlc)
    cpp_flag=-E
    obj_ext="o"
    ;;
  *)
    echo "$script_name: unsupported compiler: $MKDEP_CC_TYPE" >&2
    exit 0
    ;;
esac

case "$CONFIG_OS" in
  cygwin)
    obj_ext="obj"
    ;;
esac

case "$MKDEP_CC_OS" in
  cygwin|windows)
    obj_ext="obj"
    ;;
esac

work_dir=/tmp/mkdep$$
(mkdir $work_dir) 2>/dev/null
rm -f $work_dir/*
tmp_file0=dep$$.t0
tmp_file1=dep$$.t1
tmp_file2=dep$$.t2

for file in $op_src; do
  cd $orig_dir
  if test ! -f $file; then
    echo "$script_name: file not found $file"
    exit 1
  fi
  cp $file $work_dir
  cd $work_dir

  base_name=`basename "$file" | sed 's/\.[^.]*$//'`
  if test -n "$out_obj"; then
    object=$out_obj
  elif test -n "$op_out_dir"; then
    object="$op_out_dir/${base_name}.$obj_ext"
  else
    object="${base_name}.$obj_ext"
  fi

  if test "$MKDEP_CC_TYPE" = ticc; then
    src_pp="${base_name}.pp"
    rm -f $src_pp
    $MKDEP_CC $cpp_flag $MKDEP_CFLAGS $file
    if test -f $src_pp; then
      cat $src_pp >$tmp_file0
    fi
    echo "" >>$tmp_file0
  else
    $MKDEP_CC $cpp_flag $MKDEP_CFLAGS $file >$tmp_file0
  fi
  cat $tmp_file0 | sed -n 's!^# *[0-9][0-9]* *"\([^<][^"]*\)".*!\1!p' | sort | uniq >$tmp_file1

  cat $tmp_file1 | sed "s/^/$object: /" >>$tmp_file2
  cat $tmp_file1 | sed 's/ *$/:/' >>$tmp_file2
done

cat $tmp_file2 | sort | uniq
rm -rf $work_dir

exit 0


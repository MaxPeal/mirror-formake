#!/bin/sh
#
# Formake mkmf
#
# Copyright (c) 2018, Oleksiy Chernyavskyy
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

################################################################################
# SWITCH TO MODERN SHELL IF POSSIBLE
(test_exit_code_127_sdfjsdfksjdhfksjdhf  >/dev/null) 2>/dev/null
if test $? -ne 127; then
  if test -z "$MKMF_BASH_REDIRECTED"; then
    MKMF_BASH_REDIRECTED=1
    export MKMF_BASH_REDIRECTED
    if test -x /bin/bash; then
      exec /bin/bash "$0" ${1+"$@"}
    elif test -x /usr/bin/bash; then
      exec /usr/bin/bash "$0" ${1+"$@"}
    elif test -x /usr/local/bin/bash; then
      exec /usr/local/bin/bash "$0" ${1+"$@"}
    elif test -x /usr/pkg/bin/bash; then
      exec /usr/pkg/bin/bash "$0" ${1+"$@"}
    else
      (bash -c "pwd" >/dev/null) 2>/dev/null
      if test $? -eq 0; then
        exec bash "$0" ${1+"$@"}
      fi
    fi
  fi
fi
MKMF_BASH_REDIRECTED=
export MKMF_BASH_REDIRECTED
################################################################################

version_string="Formake mkmf 1.0"
script_name=`basename "$0"`

orig_dir=`pwd`
op_srcdir=`pwd`
op_out_mkfile=Makefile
default_static_dir="_static"
default_pic_dir="_pic"
tmp_file=_mkmf_out_buffer_093471848
all_sources=

cd_param=
(cd -P / >/dev/null) 2>/dev/null
if test $? -eq 0; then
  cd_param="-P"
fi
cd $cd_param $op_srcdir


target_vars="
SOURCES
OBJECTS
DOBJECTS
TYPE
NAME
CFLAGS
CXXFLAGS
LDFLAGS
NO_INSTALL
VERSION
OBJDIR
IS_COMMON
LANG
"

common_vars="
SUBDIRS
COMMON_SOURCES
COMMON_OBJECTS
COMMON_DOBJECTS
COMMON_CFLAGS
COMMON_CXXFLAGS
COMMON_LDFLAGS
DEFAULT_TYPE
DEFAULT_VERSION
DEFAULT_NO_INSTALL
DEFAULT_OBJDIR
DEFAULT_LANG

INSTALL_BIN
INSTALL_SBIN
INSTALL_LIB
INSTALL_LIBEXEC
INSTALL_INC
INSTALL_MAN0
INSTALL_MAN1
INSTALL_MAN2
INSTALL_MAN3
INSTALL_MAN4
INSTALL_MAN5
INSTALL_MAN6
INSTALL_MAN7
INSTALL_MAN8
INSTALL_MAN9
INSTALL_DOC
INSTALL_SHARE
INSTALL_ETC

DISTFILES
"

print_help() {
  cat <<EOF
Makefile generation tool

$script_name [options]
 -a                   append generated script to Makefile
 -p                   print Make script to stdout and do not write to Makefile
 -omk FILE            output Make script [$op_out_mkfile]
 -i ..                read specified configuration files
 -skip-mkmf           do not scan .mkmf files
 -C DIR               change to directory DIR before processing
 -srcroot PATH        source root dir relative path [./]
 -subdirs ..          subdirectories to run Make in
 -type TYPE           build type:
                         prog       - build program
                         lib        - build library (static and dynamic)
                         tlib       - build static library
                         dlib       - build dynamic library
                         obj        - compile objects (static and dynamic)
                         tobj       - compile static objects
                         dobj       - compile dynamic objects
 -src ..              source files
 -name NAME           target name
 -ver X[.Y[.Z]]       target version
 -cflags=FLAGS        C compiler flags
 -cxxflags=FLAGS      C++ compiler flags
 -ldflags=FLAGS       linker flags
 -lang LANG           language: c, c++
 -no-install          do not install
 -inst-bin ..         executables to be installed into bin directory
 -inst-sbin ..        executables to be installed into sbin directory
 -inst-lib ..         files and directories to be installed into lib directory
 -inst-libexec ..     files and directories to be installed into libexec directory
 -inst-inc ..         header files and directories to be installed into include dir
 -inst-man[0-9] ..    man files and directories to be installed into man directory
 -inst-doc ..         documentation files and directories to be installed into doc
 -inst-share ..       files and directories to be installed into share directory
 -inst-etc ..         files and directories to be installed into etc directory
 -v                   print version
EOF
}


abs_path() {
  _sub_orig_dir=`pwd`
  if test $# = 0; then
    abs_path_ret=
    return
  fi
  if test $# = 2; then
    _arg_orig_dir=$1
    _arg=$2
    if echo "$_arg" | grep "^/" > /dev/null; then
      :
    else
      _arg=`echo "$_arg_orig_dir/$_arg" | sed 's!//*!/!g'`
    fi
  else
    _arg=$1
  fi
  if test -e "$_arg"; then
    if test -d $_arg; then
      _file=
    else
      _file=`basename "$_arg"`
      _arg=`dirname "$_arg"`
    fi

    cd $cd_param $_arg
    abs_path_ret=`pwd`
    if test x"$_file" != "x"; then
      abs_path_ret="$abs_path_ret/$_file"
    fi

    cd $cd_param $_sub_orig_dir
  else
    if echo "$_arg" | grep "^/" > /dev/null; then
      abs_path_ret="$_arg"
    else
      abs_path_ret="$_sub_orig_dir/$_arg"
    fi
    abs_path_ret=`echo "$abs_path_ret" | sed 's#//*#/#g'`
    abs_path_ret=`echo "$abs_path_ret" | sed 's#/*$#/#'`
    string_prev=
    while test "x$abs_path_ret" != "x$string_prev" ; do
      string_prev=$abs_path_ret
      abs_path_ret=`echo "$abs_path_ret" | sed 's#/[^/][^/][^/][^/]*/\.\./#/#g' | sed 's#/[^/][^/.]/\.\./#/#g' | sed 's#/[^/.][^/]/\.\./#/#g' | sed 's#/[^/.]/\.\./#/#g'`
      abs_path_ret=`echo "$abs_path_ret" | sed 's#^/\.\./#/#' | sed 's#^/\.\.$#/#'`
      abs_path_ret=`echo "$abs_path_ret" | sed 's#/\./#/#g' | sed 's#/\.$#/#'`
    done
    abs_path_ret=`echo "$abs_path_ret" | sed 's#/$##' | sed 's#^$#/#'`
  fi
}

################################################################################
#parse .mkmf files
current_opt=
for param in "$@"; do
  case "$param" in
    -h|-help|--help)
      print_help
      exit 0
      ;;
    -v)
      echo "$version_string"
      exit 0
      ;;
    -C)
      current_opt=C
      ;;
    -i)
      op_input_mkmf=
      current_opt=i
      ;;
    -skip-mkmf)
      op_skip_mkmf=1
      current_opt=
      ;;
    *)
      case "$current_opt" in
        C)
          if test -d "$param"; then
            abs_path $param
            op_srcdir=$abs_path_ret
          else
            echo "$script_name: error: invalid source directory: $param" >&2
            exit 1
          fi
          current_opt=
          ;;
        i)
          op_input_mkmf="$op_input_mkmf $param"
          ;;
      esac
      ;;
  esac
done

add_mkmf_common_data() {
  op_subdirs=$SUBDIRS
  op_add_obj=$COMMON_OBJECTS
  op_add_dobj=$COMMON_DOBJECTS
  op_add_cflags=$COMMON_CFLAGS
  op_add_cxxflags=$COMMON_CXXFLAGS
  op_add_ldflags=$COMMON_LDFLAGS
  op_def_ver=$DEFAULT_VERSION
  op_def_objdir=$DEFAULT_OBJDIR

  if test -n "$COMMON_SOURCES"; then
    op_add_src=$COMMON_SOURCES
    all_sources="$all_sources $COMMON_SOURCES"
    have_src=1
    for src in $COMMON_SOURCES; do
      case "$src" in
        *.C|*.[Cc][Cc]|*.[Cc][Pp][Pp]|*.[Cc][Xx][Xx])
          have_add_cxx=1
          ;;
        *.c)
          have_add_c=1
          ;;
        *)
          echo "$script_name: error: unknown source file type: $src" >&2
          exit 1
          ;;
      esac
    done
  fi

  if test -n "$DEFAULT_TYPE"; then
    case "$DEFAULT_TYPE" in
      prog|tobj|dobj|obj|tlib|dlib|lib)
        :
        ;;
      *)
        echo "$script_name: error: invalid default type: $DEFAULT_TYPE" >&2
        exit 1
        ;;
    esac
    op_def_type=$DEFAULT_TYPE
  fi

  if test -n "$DEFAULT_NO_INSTALL"; then
    op_def_no_install=1
  fi
  if test -n "$DEFAULT_LANG"; then
    case "$DEFAULT_LANG" in
      c|c++)
        op_def_lang=$DEFAULT_LANG
        ;;
      *)
        echo "$script_name: error: invalid language type $DEFAULT_LANG" >&2
        exit 1
        ;;
    esac
  fi
  if test -n "$INSTALL_BIN"; then
    have_custom_inst_stuff=1
    op_inst_bin=$INSTALL_BIN
  fi
  if test -n "$INSTALL_SBIN"; then
    have_custom_inst_stuff=1
    op_inst_sbin=$INSTALL_SBIN
  fi
  if test -n "$INSTALL_LIB"; then
    have_custom_inst_stuff=1
    op_inst_lib=$INSTALL_LIB
  fi
  if test -n "$INSTALL_LIBEXEC"; then
    have_custom_inst_stuff=1
    op_inst_libexec=$INSTALL_LIBEXEC
  fi
  if test -n "$INSTALL_INC"; then
    have_custom_inst_stuff=1
    op_inst_inc=$INSTALL_INC
  fi
  for n in 0 1 2 3 4 5 6 7 8 9; do
    var="INSTALL_MAN$n"
    eval val=\$$var
    if test -n "$val"; then
      have_custom_inst_stuff=1
      eval op_inst_man$n=\$val
    fi
  done
  if test -n "$INSTALL_DOC"; then
    have_custom_inst_stuff=1
    op_inst_doc=$INSTALL_DOC
  fi
  if test -n "$INSTALL_SHARE"; then
    have_custom_inst_stuff=1
    op_inst_share=$INSTALL_SHARE
  fi
  if test -n "$INSTALL_ETC"; then
    have_custom_inst_stuff=1
    op_inst_etc=$INSTALL_ETC
  fi
}

add_mkmf_data() {
  prefix_add=
  if test -n "$MKMF_SOURCES"; then
    prefix_add=$prefix
    eval target_${prefix}_src=\$MKMF_SOURCES
    all_sources="$all_sources $MKMF_SOURCES"

    eval target_${prefix}_have_c=
    eval target_${prefix}_have_cxx=
    have_src=1
    for src in $MKMF_SOURCES; do
      case "$src" in
        *.C|*.[Cc][Cc]|*.[Cc][Pp][Pp]|*.[Cc][Xx][Xx])
          eval target_${prefix}_have_cxx=1
          ;;
        *.c)
          eval target_${prefix}_have_c=1
          ;;
        *)
          echo "$script_name: error: unknown source file type: $src" >&2
          exit 1
          ;;
      esac
    done
  fi

  if test -n "$MKMF_OBJECTS"; then
    prefix_add=$prefix
    eval target_${prefix}_obj=\$MKMF_OBJECTS
  fi
  if test -n "$MKMF_DOBJECTS"; then
    prefix_add=$prefix
    eval target_${prefix}_dobj=\$MKMF_DOBJECTS
  fi

  if test -n "$MKMF_TYPE"; then
    prefix_add=$prefix
    case "$MKMF_TYPE" in
      prog|tobj|dobj|obj|tlib|dlib|lib)
        :
        ;;
      *)
        echo "$script_name: error: invalid target type: $MKMF_TYPE" >&2
        exit 1
        ;;
    esac
    eval target_${prefix}_type=\$MKMF_TYPE
  fi

  if test -n "$MKMF_NAME"; then
    prefix_add=$prefix
    eval target_${prefix}_name=\$MKMF_NAME
  fi

  if test -n "$MKMF_VERSION"; then
    prefix_add=$prefix
    eval target_${prefix}_ver=\$MKMF_VERSION
  fi

  if test -n "$MKMF_CFLAGS"; then
    prefix_add=$prefix
    eval target_${prefix}_cflags=\$MKMF_CFLAGS
  fi

  if test -n "$MKMF_CXXFLAGS"; then
    prefix_add=$prefix
    eval target_${prefix}_cxxflags=\$MKMF_CXXFLAGS
  fi

  if test -n "$MKMF_LDFLAGS"; then
    prefix_add=$prefix
    eval target_${prefix}_ldflags=\$MKMF_LDFLAGS
  fi

  if test -n "$MKMF_NO_INSTALL"; then
    prefix_add=$prefix
    eval target_${prefix}_no_install=1
  fi

  if test -n "$MKMF_IS_COMMON"; then
    prefix_add=$prefix
    eval target_${prefix}_common=1
  fi

  if test -n "$MKMF_OBJDIR"; then
    prefix_add=$prefix
    eval target_${prefix}_objdir=\$MKMF_OBJDIR
  fi

  if test -n "$MKMF_LANG"; then
    prefix_add=$prefix
    case "$MKMF_LANG" in
      c|c++)
        eval target_${prefix}_lang=\$MKMF_LANG
        ;;
      *)
        echo "$script_name: error: invalid language type $MKMF_LANG" >&2
        exit 1
        ;;
    esac
  fi

  prefix_list="$prefix_list $prefix_add"
}

clean_vars() {
  for var in $target_vars; do
    eval $var=
  done
  PREFIXES=
}
clean_common_vars() {
  for var in $common_vars; do
    eval $var=
  done
}
  
if test -z "$op_skip_mkmf" || test -n "$op_input_mkmf"; then
  if test -n "$op_input_mkmf"; then
    mkmf_list=$op_input_mkmf
  else
    mkmf_list=`ls *.mkmf 2>/dev/null`
  fi

  if test -n "$mkmf_list"; then
    clean_common_vars
    prefix=0
    for mkmf in $mkmf_list; do
      clean_vars
      . ./$mkmf
      cd $cd_param $op_srcdir
      if test -z "$PREFIXES"; then
        for var in $target_vars; do
          eval MKMF_$var=\$$var
        done
        add_mkmf_data
        prefix=`expr $prefix + 1`
      else
        PREFIXES=`echo "$PREFIXES" | tr ' ' '\n' | sort | uniq | tr '\n' ' '`
        for pref in $PREFIXES; do
          for var in $target_vars; do
            eval MKMF_$var=\$$pref$var
            eval $pref$var=
          done
          add_mkmf_data
          prefix=`expr $prefix + 1`
        done
      fi
    done
    add_mkmf_common_data
  fi
fi
#end
##########################

prefix_add=
current_opt=
while test $# -gt 0; do
  case "$1" in
    -C)
      current_opt=C
      ;;
    -i)
      current_opt=i
      ;;
    -srcroot)
      current_opt=srcroot
      ;;
    -subdirs)
      op_subdirs=
      current_opt=subdirs
      ;;
    -src)
      target___src=
      current_opt=target-src
      ;;
    -type)
      current_opt=target-type
      ;;
    -name)
      current_opt=target-name
      ;;
    -cflags=*)
      _cflags=`echo "$1" | sed 's/^[^=]*=//'`
      target___cflags=$_cflags
      prefix_add='_'
      current_opt=
      ;;
    -cxxflags=*)
      _cxxflags=`echo "$1" | sed 's/^[^=]*=//'`
      target___cxxflags=$_cxxflags
      prefix_add='_'
      current_opt=
      ;;
    -ldflags=*)
      _ldflags=`echo "$1" | sed 's/^[^=]*=//'`
      target___ldflags=$_ldflags
      prefix_add='_'
      current_opt=
      ;;
    -no-install)
      target___no_install=1
      prefix_add='_'
      current_opt=
      ;;
    -ver)
      current_opt=target-ver
      ;;
    -lang)
      current_opt=target-lang
      ;;
    -inst-bin)
      op_inst_bin=
      current_opt=inst-bin
      ;;
    -inst-sbin)
      op_inst_sbin=
      current_opt=inst-sbin
      ;;
    -inst-lib)
      op_inst_lib=
      current_opt=inst-lib
      ;;
    -inst-libexec)
      op_inst_libexec=
      current_opt=inst-libexec
      ;;
    -inst-inc)
      op_inst_inc=
      current_opt=inst-inc
      ;;
    -inst-man[0-9])
      man_num=`echo "$1" | sed 's/^-inst-man//'`
      eval op_inst_man$man_num=
      current_opt=inst-man
      ;;
    -inst-doc)
      op_inst_doc=
      current_opt=inst-doc
      ;;
    -inst-share)
      op_inst_share=
      current_opt=inst-share
      ;;
    -inst-etc)
      op_inst_etc=
      current_opt=inst-etc
      ;;
    -omk)
      current_opt=omk
      ;;
    -skip-mkmf)
      current_opt=
      ;;
    -a)
      op_append=1
      current_opt=
      ;;
    -p)
      op_print=1
      op_out_mkfile=
      current_opt=
      ;;
    *)
      case "$current_opt" in
        C)
          current_opt=
          ;;
        i)
          :
          ;;
        srcroot)
          CONFIG_SRCROOT=`echo "$1" | sed 's!//*!/!g'`
          abs_path $CONFIG_SRCROOT
          CONFIG_SRCROOT=$abs_path_ret
          export CONFIG_SRCROOT
          current_opt=
          ;;
        subdirs)
          if echo "$1" | grep "^/" > /dev/null; then
            echo "$script_name: error: parameter -subdirs: absolute path not allowed: $1" >&2
            exit 1
          fi
          subdir=`echo "$1" | sed 's/\/*$//'`
          op_subdirs="$op_subdirs $subdir"
          ;;
        target-src)
          target___src="$target___src $1"
          all_sources="$all_sources $1"
          have_src=1
          case "$1" in
            *.C|*.[Cc][Cc]|*.[Cc][Pp][Pp]|*.[Cc][Xx][Xx])
              target___have_cxx=1
              ;;
            *.c)
              target___have_c=1
              ;;
            *)
              echo "$script_name: error: bad source type $1" >&2
              exit 1
              ;;
          esac
          prefix_add='_'
          ;;
        target-type)
          case "$1" in
            prog|tobj|dobj|obj|tlib|dlib|lib)
              :
              ;;
            *)
              echo "$script_name: error: invalid target type: $1" >&2
              exit 1
              ;;
          esac
          target___type=$1
          prefix_add='_'
          current_opt=
          ;;
        target-name)
          target___name=$1
          prefix_add='_'
          current_opt=
          ;;
        target-ver)
          target___ver=$1
          prefix_add='_'
          current_opt=
          ;;
        target-lang)
          case "$1" in
            c|c++)
              target___lang=$1
              ;;
            *)
              echo "$script_name: error: invalid language type $1" >&2
              exit 1
              ;;
          esac
          prefix_add='_'
          current_opt=
          ;;
        inst-bin)
          op_inst_bin="$op_inst_bin $1"
          prefix_add='_'
          have_custom_inst_stuff=1
          ;;
        inst-sbin)
          op_inst_sbin="$op_inst_sbin $1"
          prefix_add='_'
          have_custom_inst_stuff=1
          ;;
        inst-lib)
          op_inst_lib="$op_inst_lib $1"
          prefix_add='_'
          have_custom_inst_stuff=1
          ;;
        inst-libexec)
          op_inst_libexec="$op_inst_libexec $1"
          prefix_add='_'
          have_custom_inst_stuff=1
          ;;
        inst-inc)
          op_inst_inc="$op_inst_inc $1"
          prefix_add='_'
          have_custom_inst_stuff=1
          ;;
        inst-man)
          eval op_inst_man$man_num=\"\$op_inst_man$man_num $1\"
          prefix_add='_'
          have_custom_inst_stuff=1
          ;;
        inst-doc)
          op_inst_doc="$op_inst_doc $1"
          prefix_add='_'
          have_custom_inst_stuff=1
          ;;
        inst-share)
          op_inst_share="$op_inst_share $1"
          prefix_add='_'
          have_custom_inst_stuff=1
          ;;
        inst-etc)
          op_inst_etc="$op_inst_etc $1"
          prefix_add='_'
          have_custom_inst_stuff=1
          ;;
        omk)
          base=`basename "$1"`
          if test "$base" != "$1" || test -d "$1"; then
            echo "$script_name: error: invalid file name: $1" >&2
            exit 1
          fi
          op_out_mkfile=$1
          op_print=
          current_opt=
          ;;
        *)
          echo "$script_name: error: bad option $1" >&2
          exit 1
          ;;
      esac
      ;;
  esac
  shift
done

prefix_list="$prefix_list $prefix_add"

################################################################################
# CONFIG_SRCROOT
if test -z "$CONFIG_SRCROOT"; then
  while test `pwd` != '/'; do
    if test -d mk && test -x mk/$script_name; then
      CONFIG_SRCROOT=`pwd`
      break
    fi
    cd $cd_param ..
  done
  cd $cd_param $op_srcdir

  if test -z "$CONFIG_SRCROOT"; then
    CONFIG_SRCROOT=`pwd`
    mkmf_num=`ls *.mkmf 2>/dev/null | wc -l`
    while test $mkmf_num -ge 1; do
      CONFIG_SRCROOT=`pwd`
      test `pwd` = '/' && break
      cd $cd_param ..
      mkmf_num=`ls *.mkmf 2>/dev/null | wc -l`
    done
    cd $cd_param $op_srcdir
  fi
  export CONFIG_SRCROOT
fi


################################################################################
# CONFIG_MK_PATH
if test -z "$CONFIG_MK_PATH"; then
  cd $cd_param `dirname "$0"`
  if test -x $script_name; then
    CONFIG_MK_PATH=`pwd`
  elif test -d $CONFIG_SRCROOT/mk && test -x $CONFIG_SRCROOT/mk/$script_name; then
    cd $cd_param $CONFIG_SRCROOT/mk
    CONFIG_MK_PATH=`pwd`
  else
    IFS_save=$IFS
    IFS=:
    for dir in $PATH; do
      if test -f "$dir/$script_name" && test -x "$dir/$script_name" ; then
        abs_path "$dir"
        CONFIG_MK_PATH=$abs_path_ret
        break
      fi
    done
    IFS=$IFS_save
  fi

  if test -z "$CONFIG_MK_PATH"; then
    echo "$script_name: error: Formake modules not found"
    exit 1
  fi

  export CONFIG_MK_PATH
  PATH="$CONFIG_MK_PATH:$PATH"
  export PATH
  cd $cd_param $op_srcdir
fi
################################################################################

if test x$op_print = x1; then
  rm -f $tmp_file
  op_out_mkfile=$tmp_file
fi

if test x$op_def_no_install = x1; then
  for prefix in $prefix_list; do
    eval target_${prefix}_no_install=1
  done
fi

formake_scripts="relpath mkrule src2obj"
cmdok -f $formake_scripts || exit 1
srcdir_rel=`relpath $CONFIG_SRCROOT ./`


################################################################################
# INIT Makefile
if test -z "$op_append"; then
  cat <<TOP_EOF >$op_out_mkfile
################################################################################
# Generated by Formake mkmf
TOP_EOF
  (date >/dev/null) 2>/dev/null
  if test $? -eq 0; then
    date | sed 's/^/# /' >>$op_out_mkfile
  fi
  mkrule init >>$op_out_mkfile
  mkrule distclean $op_out_mkfile >>$op_out_mkfile
fi


################################################################################
# OBJECTS
#
# Compile C/C++ sources
#
common_static_objects=
common_pic_objects=
for prefix in $prefix_list; do
  eval target_src=\$target_${prefix}_src
  eval target_obj=\$target_${prefix}_obj
  eval target_dobj=\$target_${prefix}_dobj
  eval target_cflags=\$target_${prefix}_cflags
  eval target_cxxflags=\$target_${prefix}_cxxflags
  eval target_type=\$target_${prefix}_type
  eval target_objdir=\$target_${prefix}_objdir
  eval target_have_cxx=\$target_${prefix}_have_cxx
  eval target_obj_common=\$target_${prefix}_common
  eval target_lang=\$target_${prefix}_lang

  sources=`echo "$op_add_src $target_src" | sed 's/^ *//' | sed 's/ *$//' | sed 's/  */ /g'`

  if test -n "$sources"; then
    if test -z "$target_type"; then
      target_type=prog
      eval target_${prefix}_type=\$target_type
    fi

    case "$target_type" in
      prog|tlib|dlib|lib|tobj|dobj|obj)
        if test -n "$target_objdir"; then
          target_objdir_pic="${target_objdir}_pic"
        elif test -n "$op_def_objdir"; then
          target_objdir=$op_def_objdir
          target_objdir_pic="${target_objdir}_pic"
          eval target_${prefix}_objdir=\$target_objdir
        else
          target_objdir=$default_static_dir
          target_objdir_pic=$default_pic_dir
          eval target_${prefix}_objdir=\$target_objdir
        fi
        eval target_${prefix}_objdir_pic=\$target_objdir_pic

        if test x$have_add_cxx = x1; then
          target_have_cxx=1
          eval target_${prefix}_have_cxx=1
        fi

        if test -z "$target_lang"; then
          if test -n "$op_def_lang"; then
            target_lang=$op_def_lang
          elif test x$target_have_cxx = x1; then
            target_lang="c++"
          else
            target_lang="c"
          fi
          eval target_${prefix}_lang=\$target_lang
        fi

        case $target_lang in
          c)
            cflags="$op_add_cflags $target_cflags"
            eval target_${prefix}_have_cxx=
            eval target_${prefix}_have_c=1
            add_params="-cflags=\"$cflags\""
            ;;
          c++)
            cxxflags="$op_add_cxxflags $target_cxxflags"
            eval target_${prefix}_have_cxx=1
            eval target_${prefix}_have_c=
            add_params="-c++ -cflags=\"$cxxflags\""
            ;;
        esac
        ;;
    esac

    case $target_type in
      prog|tlib|lib|tobj|obj)
        mkrule obj $add_params -src $sources -d $target_objdir >>$op_out_mkfile
        objects=`src2obj -o $target_objdir $sources`

        if test -n "$target_obj"; then
          objects="$objects $target_obj"
        fi
        if test x$target_obj_common = x1; then
          common_static_objects="$common_static_objects $objects"
        fi
        eval target_${prefix}_obj=\$objects
        ;;
    esac
    case $target_type in
      dlib|lib|dobj|obj)
        mkrule obj $add_params -pic -src $sources -d $target_objdir_pic >>$op_out_mkfile
        pic_objects=`src2obj -o $target_objdir_pic $sources`

        if test -n "$target_dobj"; then
          pic_objects="$pic_objects $target_dobj"
        fi
        if test x$target_obj_common = x1; then
          common_pic_objects="$common_pic_objects $pic_objects"
        fi
        eval target_${prefix}_dobj=\$pic_objects
        ;;
    esac
  fi
done

common_static_objects=`echo "$common_static_objects" | sed 's/^ *//' | sed 's/ *$//'`
common_pic_objects=`echo "$common_pic_objects" | sed 's/^ *//' | sed 's/ *$//'`

################################################################################
# PROGRAMS
#
# Link C/C++ programs
#
for prefix in $prefix_list; do
  eval target_obj=\$target_${prefix}_obj
  eval target_name=\$target_${prefix}_name
  eval target_type=\$target_${prefix}_type
  eval target_ldflags=\$target_${prefix}_ldflags
  eval target_no_install=\$target_${prefix}_no_install
  eval target_lang=\$target_${prefix}_lang

  if test -z "$target_type" && test -n "$target_obj$target_dobj"; then
    target_type=prog
    eval target_${prefix}_type=\$target_type
  fi

  if test $target_type = prog; then
    if test -z "$target_name"; then
      target_name="prog$prefix"
      eval target_${prefix}_name=\$target_name
    fi

    add_params="-all"
    if test x$target_no_install = x; then
      add_params="$add_params -install"
    fi
    if test "x$target_lang" = "xc++"; then
      add_params="$add_params -c++"
    fi

    if test -n "$target_obj$op_add_obj$common_static_objects"; then
      mkrule prog $add_params -ldflags="$op_add_ldflags $target_ldflags" -n $target_name -obj $target_obj $common_static_objects $op_add_obj >>$op_out_mkfile
    fi
  fi
done

################################################################################
# LIBRARIES
#
# Link C/C++ libraries
#
for prefix in $prefix_list; do
  eval target_obj=\$target_${prefix}_obj
  eval target_dobj=\$target_${prefix}_dobj
  eval target_name=\$target_${prefix}_name
  eval target_type=\$target_${prefix}_type
  eval target_ldflags=\$target_${prefix}_ldflags
  eval target_no_install=\$target_${prefix}_no_install
  eval target_version=\$target_${prefix}_ver
  eval target_lang=\$target_${prefix}_lang

  if test $target_type = tlib || test $target_type = dlib || test $target_type = lib; then
    if test -z "$target_name"; then
      target_name="foo$prefix"
      eval target_${prefix}_name=\$target_name
    fi

    if test -z "$target_version"; then
      if test -n "$op_def_ver"; then
        target_version=$op_def_ver
      else
        target_version="1.0.0"
      fi
      eval target_${prefix}_ver=\$target_version
    fi

    add_params="-all"
    if test x$target_no_install = x; then
      add_params="$add_params -install"
    fi
    if test "x$target_lang" = "xc++"; then
      add_params="$add_params -c++"
    fi

    if test -n "$target_obj$op_add_obj$common_static_objects"; then
      if test $target_type = tlib || test $target_type = lib; then
        mkrule lib $add_params -static -ldflags="$op_add_ldflags $target_ldflags" -n $target_name -ver $target_version -obj $target_obj $common_static_objects $op_add_obj >>$op_out_mkfile
      fi
    fi

    if test -n "$target_dobj$op_add_dobj$common_pic_objects"; then
      if test $target_type = dlib || test $target_type = lib; then
        mkrule lib $add_params -shared -ldflags="$op_add_ldflags $target_ldflags" -n $target_name -ver $target_version -obj $target_dobj $common_pic_objects $op_add_dobj >>$op_out_mkfile
      fi
    fi
  fi
done

################################################################################
# INSTALLATION FILES
#
# Install files by 'make install'
#
dist_files=
if test x$have_custom_inst_stuff = x1; then
  if test -n "$op_inst_bin"; then
    mkrule install bin $op_inst_bin >>$op_out_mkfile
    dist_files="$dist_files $op_inst_bin"
  fi
  if test -n "$op_inst_sbin"; then
    mkrule install sbin $op_inst_sbin >>$op_out_mkfile
    dist_files="$dist_files $op_inst_sbin"
  fi
  if test -n "$op_inst_lib"; then
    mkrule install lib $op_inst_lib >>$op_out_mkfile
    dist_files="$dist_files $op_inst_lib"
  fi
  if test -n "$op_inst_libexec"; then
    mkrule install libexec $op_inst_libexec >>$op_out_mkfile
    dist_files="$dist_files $op_inst_libexec"
  fi
  if test -n "$op_inst_inc"; then
    mkrule install inc $op_inst_inc >>$op_out_mkfile
    dist_files="$dist_files $op_inst_inc"
  fi
  if test -n "$op_inst_man0"; then
    mkrule install man0 $op_inst_man0 >>$op_out_mkfile
    dist_files="$dist_files $op_inst_man0"
  fi
  if test -n "$op_inst_man1"; then
    mkrule install man1 $op_inst_man1 >>$op_out_mkfile
    dist_files="$dist_files $op_inst_man1"
  fi
  if test -n "$op_inst_man2"; then
    mkrule install man2 $op_inst_man2 >>$op_out_mkfile
    dist_files="$dist_files $op_inst_man2"
  fi
  if test -n "$op_inst_man3"; then
    mkrule install man3 $op_inst_man3 >>$op_out_mkfile
    dist_files="$dist_files $op_inst_man3"
  fi
  if test -n "$op_inst_man4"; then
    mkrule install man4 $op_inst_man4 >>$op_out_mkfile
    dist_files="$dist_files $op_inst_man4"
  fi
  if test -n "$op_inst_man5"; then
    mkrule install man5 $op_inst_man5 >>$op_out_mkfile
    dist_files="$dist_files $op_inst_man5"
  fi
  if test -n "$op_inst_man6"; then
    mkrule install man6 $op_inst_man6 >>$op_out_mkfile
    dist_files="$dist_files $op_inst_man6"
  fi
  if test -n "$op_inst_man7"; then
    mkrule install man7 $op_inst_man7 >>$op_out_mkfile
    dist_files="$dist_files $op_inst_man7"
  fi
  if test -n "$op_inst_man8"; then
    mkrule install man8 $op_inst_man8 >>$op_out_mkfile
    dist_files="$dist_files $op_inst_man8"
  fi
  if test -n "$op_inst_man9"; then
    mkrule install man9 $op_inst_man9 >>$op_out_mkfile
    dist_files="$dist_files $op_inst_man9"
  fi
  if test -n "$op_inst_doc"; then
    mkrule install doc $op_inst_doc >>$op_out_mkfile
    dist_files="$dist_files $op_inst_doc"
  fi
  if test -n "$op_inst_share"; then
    mkrule install data $op_inst_share >>$op_out_mkfile
    dist_files="$dist_files $op_inst_share"
  fi
  if test -n "$op_inst_etc"; then
    mkrule install etc $op_inst_etc >>$op_out_mkfile
    dist_files="$dist_files $op_inst_etc"
  fi
fi

################################################################################
# DIST
#
# Create distribution tarball by 'make dist'
dist_files="$DISTFILES $dist_files"

src_dist_files=
if test -n "$all_sources"; then
  src_dist_files="$src_dist_files $all_sources"
fi
src_dist_files=`echo "$src_dist_files" | sed 's/^ *//' | tr ' ' '\n' | sort | uniq | tr '\n' ' ' | sed 's/ *$//'`
dist_files="$dist_files $src_dist_files"

add_params="-buildroot $CONFIG_SRCROOT -f $dist_files"
if test -z "$op_append" && test "$CONFIG_SRCROOT" = "$op_srcdir"; then
  opt_fscripts="cmdok cppdef cprobe cstem libro mkdep mkmf mkrule pofig relpath src2obj"
  formake_dist=
  for script in $opt_fscripts; do
    if test -f $CONFIG_MK_PATH/$script; then
      formake_dist="$formake_dist $CONFIG_MK_PATH/$script"
    fi
  done
  formake_dist=`echo "$formake_dist" | sed 's/^ *//'`
  dist_files="$formake_dist $dist_files"
  if test -x configure; then
    dist_files="configure $dist_files"
  fi
fi

mkrule dist $add_params >>$op_out_mkfile || exit 1


################################################################################
# SUBDIRS
#
# Build subdirectories
#
if test -z "$op_append" && test -z "$op_skip_mkmf" && test -n "$op_subdirs"; then
  mkrule subdir -all -install -clean -dist -distclean -d $op_subdirs >>$op_out_mkfile
  for dir in $op_subdirs; do
    cd $cd_param $op_srcdir
    if test -d $dir; then
      cd $cd_param $dir
      mkmf_num=`ls *.mkmf 2>/dev/null | wc -l`
      if test $mkmf_num -gt 0; then
        mkmf || exit 1
      fi
    fi
  done
fi

################################################################################
# DONE
if test x$op_print = x1; then
  cat $op_out_mkfile
  rm -f $op_out_mkfile
else
  echo "$srcdir_rel: DONE"
fi


#!/bin/sh
#
# Formake relpath
#
# Copyright (c) 2015-2018, Oleksiy Chernyavskyy
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

################################################################################
# SWITCH TO MODERN SHELL IF POSSIBLE
(test_exit_code_127_sdfjsdfksjdhfksjdhf  >/dev/null) 2>/dev/null
if test $? -ne 127; then
  if test -z "$FORMAKE_BASH_REDIRECTED"; then
    FORMAKE_BASH_REDIRECTED=1
    export FORMAKE_BASH_REDIRECTED
    if test -x /bin/bash; then
      exec /bin/bash "$0" ${1+"$@"}
    elif test -x /usr/bin/bash; then
      exec /usr/bin/bash "$0" ${1+"$@"}
    elif test -x /usr/local/bin/bash; then
      exec /usr/local/bin/bash "$0" ${1+"$@"}
    elif test -x /usr/pkg/bin/bash; then
      exec /usr/pkg/bin/bash "$0" ${1+"$@"}
    else
      (bash -c "pwd" >/dev/null) 2>/dev/null
      if test $? -eq 0; then
        exec bash "$0" ${1+"$@"}
      fi
    fi
  fi
fi
FORMAKE_BASH_REDIRECTED=
export FORMAKE_BASH_REDIRECTED
################################################################################

abs_path() {
  _sub_orig_dir=`pwd`
  if test $# = 0; then
    abs_path_ret=
    return
  fi
  if test $# = 2; then
    _arg_orig_dir=$1
    _arg=$2
    if echo "$_arg" | grep "^/" > /dev/null; then
      :
    else
      _arg=`echo "$_arg_orig_dir/$_arg" | sed 's!//*!/!g'`
    fi
  else
    _arg=$1
  fi
  if test -e "$_arg"; then
    if test -d $_arg; then
      _file=
    else
      _file=`basename "$_arg"`
      _arg=`dirname "$_arg"`
    fi

    cd $cd_param $_arg
    abs_path_ret=`pwd`
    if test x"$_file" != "x"; then
      abs_path_ret="$abs_path_ret/$_file"
    fi

    cd $cd_param $_sub_orig_dir
  else
    if echo "$_arg" | grep "^/" > /dev/null; then
      abs_path_ret="$_arg"
    else
      abs_path_ret="$_sub_orig_dir/$_arg"
    fi
    abs_path_ret=`echo "$abs_path_ret" | sed 's#//*#/#g'`
    abs_path_ret=`echo "$abs_path_ret" | sed 's#/*$#/#'`
    string_prev=
    while test "x$abs_path_ret" != "x$string_prev" ; do
      string_prev=$abs_path_ret
      abs_path_ret=`echo "$abs_path_ret" | sed 's#/[^/][^/][^/][^/]*/\.\./#/#g' | sed 's#/[^/][^/.]/\.\./#/#g' | sed 's#/[^/.][^/]/\.\./#/#g' | sed 's#/[^/.]/\.\./#/#g'`
      abs_path_ret=`echo "$abs_path_ret" | sed 's#^/\.\./#/#' | sed 's#^/\.\.$#/#'`
      abs_path_ret=`echo "$abs_path_ret" | sed 's#/\./#/#g' | sed 's#/\.$#/#'`
    done
    abs_path_ret=`echo "$abs_path_ret" | sed 's#/$##' | sed 's#^$#/#'`
  fi
}

rel_path() {
  file1=$1
  file2=$2
  if test -z "$file2"; then
    file2=`pwd`
  fi
  abs_path "$file1"
  file1=$abs_path_ret
  abs_path "$file2"
  file2=$abs_path_ret
  
  break1=0
  dir_down=
  found_base=0
  while test $break1 = 0; do
    if test "$file1" = "/"; then
      break1=1
    fi

    break2=0
    dir_up=
    file2_tmp=$file2
    while test $break2 = 0; do
      if test "$file2_tmp" = "/"; then
        break2=1
      fi
      if test "$file1" = "$file2_tmp"; then
        break2=1
        found_base=1
      else
        if test -z "$dir_up"; then
          dir_up=".."
        else
          dir_up="$dir_up/.."
        fi
        file2_tmp=`dirname "$file2_tmp"`
      fi
    done

    if test $found_base = 0; then
      base_name=`basename "$file1"`
      if test -z "$dir_down"; then
        dir_down=$base_name
      else
        dir_down="$base_name/$dir_down"
      fi
      file1=`dirname "$file1"`
    else
      break1=1
    fi
  done

  if test -z "$dir_up"; then
    if test -z "$dir_down"; then
      rel_path_ret="."
    else
      rel_path_ret="$dir_down"
    fi
  else
    if test -z "$dir_down"; then
      rel_path_ret=$dir_up
    else
      rel_path_ret="$dir_up/$dir_down"
    fi
  fi
}

# shorter and faster version
# Function [rel_path2 dir [file]] returns path of 'file' (or current dir) relative to a 'dir'
rel_path2() {
  abs_path "$1"
  file_from=$abs_path_ret
  if test -n "$2"; then
    abs_path "$2"
    file_to=$abs_path_ret
  else
    file_to=`pwd`
  fi

  file_from_tmp=$file_from
  while test `expr "$file_to" : "^$file_from_tmp"` -eq 0; do
    file_from_tmp=`dirname "$file_from_tmp"`
  done
  dir_up=`echo "$file_from" | sed "s:^$file_from_tmp::" | sed 's:^/::' | sed 's:[^/][^/]*:..:g'`
  dir_down=`echo "$file_to" | sed "s:^$file_from_tmp::" | sed 's:^/::'`
  rel_path_ret=`echo "$dir_up/$dir_down" | sed 's:^/*$:.:' | sed 's:^/*::' | sed 's:/*$::'`
}

script_name=`basename "$0"`

case x"$1" in
  x-help|x--help)
    cat <<EOF
Calculate relative path between two directories

Usage: $script_name FROM [TO]
EOF
    exit 0
    ;;
esac

cd_param=
orig_dir=`pwd`
(cd -P / >/dev/null) 2>/dev/null
if test $? -eq 0; then
  cd_param="-P"
fi
cd "$orig_dir"

if test $# -eq 1; then
  if test "$1" = "-v"; then
    echo "Formake relpath 1.0"
    exit 0
  fi
  rel_path2 $1 ""
elif test $# -eq 2; then
  rel_path2 $1 $2
else
  echo "Usage: $script_name FROM [TO]" >&2
  exit 1
fi

echo $rel_path_ret


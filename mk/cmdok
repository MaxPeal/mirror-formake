#!/bin/sh
#
# cmdok
#
# Copyright (c) 2016-2017, Oleksii Cherniavskyi
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

################################################################################
# JUMP TO MODERN SHELL IF POSSIBLE
(test_exit_code_127_sdfjsdfksjdhfksjdhf  >/dev/null) 2>/dev/null
if test $? -ne 127; then
  if test -z "$CMDOK_BASH_REDIRECT"; then
    CMDOK_BASH_REDIRECTED=1
    export CMDOK_BASH_REDIRECTED
    if test -x /bin/bash; then
      exec /bin/bash "$0" ${1+"$@"}
    elif test -x /usr/bin/bash; then
      exec /usr/bin/bash "$0" ${1+"$@"}
    elif test -x /usr/local/bin/bash; then
      exec /usr/local/bin/bash "$0" ${1+"$@"}
    elif test -x /usr/pkg/bin/bash; then
      exec /usr/pkg/bin/bash "$0" ${1+"$@"}
    else
      (bash -c "pwd" >/dev/null) 2>/dev/null
      if test $? -eq 0; then
        exec bash "$0" ${1+"$@"}
      fi
    fi
  fi
fi
CMDOK_BASH_REDIRECTED=
export CMDOK_BASH_REDIRECTED
################################################################################


script_name=`basename "$0"`
tmp_buf="/tmp/cmdok_$$_buf.txt"
rm -f $tmp_buf

print_help() {
cat <<EOF
Command validation tool

Usage: $script_name [OPTIONS] <command>..

Options:
  -n             no echo
  -f             echo only on fail
  -v             display version information and exit
  <command>..    commands to check

cmdok checks that specified commands are OK

EOF
}

print_version() {
  cat <<EOF
cmdok 1.0.1
Copyright (C) 2016-2017 Oleksii Cherniavskyi
EOF
}

echo_status() {
  if test x$op_no_echo = x; then
    printf "$1" "$2"
  elif test x$op_echo_fail = x1; then
    printf "$1" "$2" >> $tmp_buf
  fi
}

clean_exit() {
  exit_status=$1
  if test $exit_status != 0 && test x$op_echo_fail = x1 && test -f $tmp_buf; then
    cat $tmp_buf
  fi
  rm -f $tmp_buf
  exit $exit_status
}

for param in "$@"; do
  case "$param" in
    -h|-help|--help)
      print_help
      exit 0
      ;;
    -v|--version)
      print_version
      exit 0
      ;;
    -n)
      op_no_echo=1
      op_echo_fail=
      ;;
    -f)
      op_echo_fail=1
      op_no_echo=1
      ;;
  esac
done

(command -v ls >/dev/null) 2>/dev/null
if test $? -eq 0; then
  have_command_v=1
fi
(hash ls >/dev/null) 2>/dev/null
if test $? -eq 0; then
  have_hash=1
fi
(type -P ls >/dev/null) 2>/dev/null
if test $? -eq 0; then
  have_type_p=1
fi
(whence -p ls >/dev/null) 2>/dev/null
if test $? -eq 0; then
  have_whence_p=1
fi

while test $# -gt 0; do
  case "$1" in
    -n|-f|-v|--version) : ;;
    *)
      echo_status "%s" "checking $1 ... "
      if test x$have_command_v = x1; then
        (command -v $1 >/dev/null) 2>/dev/null
        if test $? != 0; then
          echo_status "%s\n" "Failed"
          clean_exit 1
        fi
      elif test x$have_hash = x1; then
        (hash $1 >/dev/null) 2>/dev/null
        if test $? != 0; then
          echo_status "%s\n" "Failed"
          clean_exit 1
        fi
      elif test x$have_type_p = x1; then
        (type -P $1 >/dev/null) 2>/dev/null
        if test $? != 0; then
          echo_status "%s\n" "Failed"
          clean_exit 1
        fi
      elif test x$have_whence_p = x1; then
        (whence -p $1 >/dev/null) 2>/dev/null
        if test $? != 0; then
          echo_status "%s\n" "Failed"
          clean_exit 1
        fi
      else
        found=
        IFS_save=$IFS
        IFS=:
        for dir in $PATH; do
          if test -n "$dir" && test -f "$dir/$prog" && test -x "$dir/$prog" ; then
            found=1
            break
          fi
        done
        IFS=$IFS_save
        if test x$found = x; then
          echo_status "%s\n" "Failed"
          clean_exit 1
        fi
      fi
      echo_status "%s\n" "OK"
      ;;
  esac
  shift
done

clean_exit 0


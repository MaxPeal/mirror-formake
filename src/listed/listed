#!/bin/sh
#
# Formake listed
# author: Oleksiy Chernyavskyy <ochern@rocketmail.com>
#

version=1.0
script_name=`basename $0`
script_dir=`dirname $0`
nl='
'
op_ifs=
list=

################################################################################
# LOAD CONFIG
PATH=$FORMAKE:$PATH
LISTED=
if test -f $script_dir/config.rc; then
  . $script_dir/config.rc
fi
test -n "$FORMAKE_LISTED" && LISTED=$FORMAKE_LISTED
if test -n "$LISTED" && test -z "$LISTED_REDIRECT"; then
  export LISTED_REDIRECT=1
  $LISTED "$@"
  ret=$?
  if test $ret -ne 64; then
    exit $ret
  fi
fi
################################################################################

print_help() {
  cat <<EOF
$script_name OPTIONS list..
$script_name -v

Fileter/edit options may be specified multiple times and are applied in the same
order.

Filter/edit options:
  -grep=ARGS          pass list thourgh a grep tool
  -sed=ARGS           pass list through a sed tool
  -pref=PREFIX        add prefix to each list item
  -rm-ext             for every item remove suffix that goes after last dot
  -suff=SUFIX         add suffix to each list item
  -edit-ext=EXT       for every item change suffix that goes after last dot
  -cmd=CMD            pass every item through the specified pipe command

Global options:
  -ifs=IFS            specify list items delimiter [space]
EOF
}

if test $# -eq 0; then
  echo "$script_name: error. No options specified" >&2
  exit 1
fi

idx=0
while test $# -gt 0; do
  case $1 in
  -h|-help|--help)
    print_help
    exit 0
    ;;
  -v)
    printf "$script_name ${version}\n"
    exit 0
    ;;
  -sed=*)
    op_val=`echo -n "$1" | sed 's/^[^=]*=//'`
    eval op${idx}_type=sed
    eval op${idx}_val=\$op_val
    ;;
  -grep=*)
    op_val=`echo -n "$1" | sed 's/^[^=]*=//'`
    eval op${idx}_type=grep
    eval op${idx}_val=\$op_val
    ;;
  -pref=*)
    op_val=`echo -n "$1" | sed 's/^[^=]*=//'`
    eval op${idx}_type=prefix
    eval op${idx}_val=\$op_val
    ;;
  -rm-ext)
    eval op${idx}_type="rm-ext"
    ;;
  -edit-ext=*)
    op_val=`echo -n "$1" | sed 's/^[^=]*=//'`
    eval op${idx}_type="edit-ext"
    eval op${idx}_val=\$op_val
    ;;
  -suff=*)
    op_val=`echo -n "$1" | sed 's/^[^=]*=//'`
    eval op${idx}_type=suffix
    eval op${idx}_val=\$op_val
    ;;
  -cmd=*)
    op_val=`echo -n "$1" | sed 's/^[^=]*=//'`
    eval op${idx}_type=cmd
    eval op${idx}_val=\$op_val
    ;;
  -ifs=*)
    op_ifs=`echo -n "$1" | sed 's/^[^=]*=//'`
    ;;
  *)
    list="$list $1"
    ;;
  esac
  shift
  idx=`expr $idx + 1`
done

opnum=$idx

list=`echo -n "$list" | sed 's/^ *//'`

if test -z "$list"; then
  IFS_save=$IFS
  IFS=$nl
  while read input; do
    if test -z "$list"; then
      list=$input
    else
      list="${list}${nl}$input"
    fi
  done
  if test -z "$op_ifs"; then
    op_ifs=$nl
  fi
  IFS=$IFS_save
elif test -z "$op_ifs"; then
    op_ifs=' '
fi

if test x"$op_ifs" = "x\n"; then
  op_ifs=$nl
fi

IFS_save=$IFS
IFS=$nl

data=$list
for list in $data; do
  IFS=$op_ifs

  idx=0
  while test $idx -lt $opnum; do
    eval op_type=\$op${idx}_type
    eval op_val=\$op${idx}_val

    case $op_type in
      sed)
        new_list=
        for item in $list; do
          item=`echo -n "$item" | eval sed $op_val`
          if test -n "$item"; then
            if test -z "$new_list"; then
              new_list=$item
            else
              new_list="${new_list}${IFS}${item}"
            fi
          fi
        done
        list=$new_list
        ;;
      grep)
        new_list=
        for item in $list; do
          item=`echo -n "$item" | eval grep $op_val`
          if test -n "$item"; then
            if test -z "$new_list"; then
              new_list="$item"
            else
              new_list="${new_list}${IFS}${item}"
            fi
          fi
        done
        list=$new_list
        ;;
      prefix)
        new_list=
        for item in $list; do
          item="${op_val}${item}"
          if test -z "$new_list"; then
            new_list=$item
          else
            new_list="${new_list}${IFS}${item}"
          fi
        done
        list=$new_list
        ;;
      rm-ext)
        new_list=
        for item in $list; do
          item=`echo -n "$item" | sed 's/\.[^.]*$//'`
          if test -n "$item"; then
            if test -z "$new_list"; then
              new_list=$item
            else
              new_list="${new_list}${IFS}${item}"
            fi
          fi
        done
        list=$new_list
        ;;
      edit-ext)
        new_list=
        for item in $list; do
          item=`echo -n "$item" | sed 's/\.[^.]*$//'`
          item="${item}.${op_val}"
          if test -z "$new_list"; then
            new_list=$item
          else
            new_list="${new_list}${IFS}${item}"
          fi
        done
        list=$new_list
        ;;
      suffix)
        new_list=
        for item in $list; do
          item="${item}${op_val}"
          if test -z "$new_list"; then
            new_list=$item
          else
            new_list="${new_list}${IFS}${item}"
          fi
        done
        list=$new_list
        ;;
      cmd)
        new_list=
        for item in $list; do
          item=`echo -n "$item" | eval $op_val`
          if test -n "$item"; then
            if test -z "$new_list"; then
              new_list=$item
            else
              new_list="${new_list}${IFS}${item}"
            fi
          fi
        done
        list=$new_list
        ;;
    esac
    idx=`expr $idx + 1`
  done
  
  printf "%s\n" "${list}"

  IFS=$nl
done

IFS=$IFS_save
 

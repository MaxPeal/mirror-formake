#!/bin/sh
#
# Author: Oleksiy Chernyavskyy <ochern@rocketmail.com>
#

version_string="mkconfigure 1.0"

script_name=`basename "$0"`
script_options="$@"
tmp_help=/tmp/mkconf_help_$$.txt
rm -f $tmp_help
op_pkgname=softmodule
op_pkgver=
out_file=configure
out_file_dir=.
rm_out_file=0

print_help() {
  cat <<EOF
$script_name [options]
 -name NAME     package name (PACKAGE_NAME) [$op_pkgname]
 -ver VERSION   package version (PACKAGE_VERSION)
 -params=".."   list of parameters for parsing
 -cc            probe and configure C compiler
 -c++           probe and configure C++ compiler
 -lib           probe the tools required for building C/C++ libraries
 -syscap ".."   probe a system with syscap test tool
 -sh CODE       insert shell string
 -build-h       generate BUILDROOT/build.h config header
 -mkpackage     create package
 -o FILE        output script file [$out_file]
 -v             print version
EOF
}

print_version() {
  echo "$version_string"
}

clean_exit() {
  ecode=$1
  if test $rm_out_file = 1; then
    rm -f $out_file
  fi
  exit $ecode
}

op_params=
current_opt=
syscap_index=0
while test $# -gt 0; do
  case $1 in
    -h|-help|--help)
      print_help
      clean_exit 0
      ;;
    -v)
      print_version
      clean_exit 0
      ;;
    -name)
      current_opt=name
      ;;
    -ver)
      current_opt=ver
      ;;
    -params=*)
      op_params=`echo -n "$1" | sed 's/^[^=]*=//'`
      rm -f $tmp_help
      for param in $op_params; do
        echo "  $param" >> $tmp_help
      done
      current_opt=
      ;;
    -cc)
      op_cc=1
      current_opt=
      ;;
    -c++)
      op_cxx=1
      current_opt=
      ;;
    -lib)
      op_lib=1
      current_opt=
      ;;
    -syscap)
      current_opt=syscap
      ;;
    -sh)
      current_opt=sh
      ;;
    -build-h)
      op_build_h=1
      current_opt=
      ;;
    -o)
      current_opt=o
      ;;
    -mkpackage)
      op_mkpackage=1
      current_opt=
      ;;
    *)
      case "$current_opt" in
        name)
          op_pkgname=$1
          current_opt=
          ;;
        ver)
          op_pkgver=$1
          current_opt=
          ;;
        syscap)
          op_syscap=1
          params=$1
          eval syscap${syscap_index}_params=\$params
          syscap_index=`expr $syscap_index + 1`
          current_opt=
          ;;
        sh)
          op_sh=$1
          current_opt=
          ;;
        o)
          out_file=$1
          if test -d "$out_file"; then
            out_file="$out_file/configure"
          fi
          out_file_dir=`dirname "$out_file"`
          if test ! -d "$out_file_dir"; then
            echo "$script_name: error. Directory not found: $out_file_dir" >&2
            clean_exit 1
          fi
          current_opt=
          ;;
        *)
          echo "$script_name: error. Invalid parameter: $1" >&2
          clean_exit 1
          ;;
      esac
      ;;
  esac
  shift
done

formake_scripts="relpath mkrule"
test -n "$op_syscap$op_lib" && test -z "$op_cc$op_cxx" && op_cc=1
if test x$op_lib = x1; then
  formake_scripts="$formake_scripts libro"
fi
if test x$op_cc = x1; then
  formake_scripts="$formake_scripts cstem"
fi
if test x$op_cxx = x1; then
  formake_scripts="$formake_scripts cstem+"
fi
if test -n "$op_cc$op_cxx"; then
  formake_scripts="$formake_scripts mkdep"
fi
formake_scripts=`echo -n "$formake_scripts" | sed 's/^ *//'`

if test x$op_mkpackage = x1; then
  if mkpackage -h >/dev/null; then
    :
  else
    echo "$script_name: mkpackage script not found" >&2
    clean_exit 1
  fi
  test -d $out_file_dir/formake || mkdir -p $out_file_dir/formake
  if test ! -d $out_file_dir/formake; then
    echo "$script_name: could not create Formake directory $out_file_dir/formake" >&2
    clean_exit 1
  fi
  mkpackage -d $out_file_dir/formake -std $formake_scripts || clean_exit 1
fi

rm_out_file=1
cat <<TOP_EOF >$out_file
#!/bin/sh
################################################################################
# This script was generated with the following command:
#  $script_name $script_options
#
# Important variables to use:
#   PACKAGE_NAME     - package (project) name
#   PACKAGE_VERSION  - package version
#   CONF             - name of the build config file
#   CONF_H           - name of the build config header file
#   SRCROOT          - package source root directory (package top dir)
#   STD_OPTIONS      - standard configure options
#   OPTIONS          - custom configure options
#   VPATH_ON         - set to 1 if configure is run outside of the source root dir

################################################################################
# BASE CONFIGURATION
PACKAGE_NAME="$op_pkgname"
PACKAGE_VERSION="$op_pkgver"
CONF="build.conf"
CONF_H="build.h"

TOP_EOF

cat <<"TOP_EOF" >>$out_file
################################################################################
# BUILD DIRECTORIES
SRCROOT=`dirname $0`
PATH=$FORMAKE:`pwd`/formake:$SRCROOT/formake:$PATH

TOP_EOF

std_options="-h -help --help -prefix -exec-prefix -bindir -sbindir -libexecdir -libdir -incdir \\
             -etcdir -vardir -sharedir -mandir -docdir"
if test x$op_cc = x1; then
  std_options="$std_options -cc -cflags"
fi
if test x$op_cxx = x1; then
  std_options="$std_options -cxx -cxxflags"
fi
if test -n "$op_cc$op_cxx"; then
  std_options="$std_options -ldflags"
fi

cat <<TOP_EOF >>$out_file
################################################################################
# OPTIONS
STD_OPTIONS="$std_options"
OPTIONS="$op_params"

optool validate \$STD_OPTIONS \$OPTIONS - "\$@" || exit 1
if optool test any -h -help --help - "\$@"; then
  cat <<EOF
Usage: configure [options]
  -prefix PREFIX         path to install architecture-independent files [/usr/local]
  -exec-prefix EPREFIX   path to install architecture-dependent files [PREFIX]
  -bindir DIR            bin path [EPREFIX/bin]
  -sbindir DIR           sbin path [EPREFIX/sbin]
  -libexecdir DIR        libexec path [EPREFIX/libexec]
  -libdir DIR            lib path [EPREFIX/lib]
  -incdir DIR            include path [PREFIX/include]
  -etcdir DIR            etc path [PREFIX/etc]
  -vardir DIR            var path [PREFIX/var]
  -sharedir DIR          share path [PREFIX/share]
  -mandir DIR            man path [SHAREDIR/man]
  -docdir DIR            doc path [SHAREDIR/doc]
TOP_EOF
if test x$op_cc = x1; then
  cat <<TOP_EOF >>$out_file
  -cc CMD                C compiler command
  -cflags=FLAGS          C compiler flags
TOP_EOF
fi
if test x$op_cxx = x1; then
  cat <<TOP_EOF >>$out_file
  -cxx CMD               C++ compiler command
  -cxxflags=FLAGS        C++ compiler flags
TOP_EOF
fi
if test -n "$op_cc$op_cxx"; then
  cat <<TOP_EOF >>$out_file
  -ldflags=FLAGS         LD flags
TOP_EOF
fi
if test -f $tmp_help; then
  cat $tmp_help >>$out_file
  rm -f $tmp_help
fi
cat <<"TOP_EOF" >>$out_file
EOF
  exit 0
fi
. `optool source "$@"`

################################################################################
# VPATH
VPATH_ON=
test ! -f `basename $0` && VPATH_ON=1

################################################################################
# INIT BUILD ROOT
if test x$VPATH_ON = x1; then
  if test -f $SRCROOT/formake; then
    rm -Rf formake
    cp -Rf $SRCROOT/formake ./
    rm -f formake/*.conf
  fi
fi
rm -f configure.log

TOP_EOF

cat <<TOP_EOF >>$out_file
################################################################################
# PACKAGE CONSISTENCY
syscap test $formake_scripts || exit 1

TOP_EOF

cat <<"TOP_EOF" >>$out_file
################################################################################
# BASE CONFIG FILES
optool dump  "$@" -package-name "$PACKAGE_NAME" -package-version "$PACKAGE_VERSION" >$CONF
TOP_EOF
if test x"$op_build_h" = x1; then
  cat <<"TOP_EOF" >>$out_file
optool hdump "$@" -package-name "$PACKAGE_NAME" -package-version "$PACKAGE_VERSION" >$CONF_H
TOP_EOF
fi

cat <<"TOP_EOF" >>$out_file

################################################################################
# STANDARD DIRECTORIES
test -n "$PREFIX"      || PREFIX=/usr/local
test -n "$EXEC_PREFIX" || EXEC_PREFIX=$PREFIX
test -n "$BINDIR"      || BINDIR=$EXEC_PREFIX/bin
test -n "$SBINDIR"     || SBINDIR=$EXEC_PREFIX/sbin
test -n "$LIBEXECDIR"  || LIBEXECDIR=$EXEC_PREFIX/libexec
test -n "$ETCDIR"      || ETCDIR=$PREFIX/etc
test -n "$VARDIR"      || VARDIR=$PREFIX/etc
test -n "$LIBDIR"      || LIBDIR=$EXEC_PREFIX/lib
test -n "$INCDIR"      || INCDIR=$PREFIX/include
test -n "$SHAREDIR"    || SHAREDIR=$PREFIX/share
test -n "$MANDIR"      || MANDIR=$SHAREDIR/man
test -n "$DOCDIR"      || DOCDIR=$SHAREDIR/doc

PACKAGE_SHAREDIR=$SHAREDIR/$PACKAGE_NAME
PACKAGE_DOCDIR=$SHAREDIR/doc/$PACKAGE_NAME

optool dump -prefix $PREFIX -exec-prefix $EXEC_PREFIX -bindir $BINDIR -sbindir $SBINDIR \
            -libexecdir $LIBEXECDIR -libdir $LIBDIR -incdir $INCDIR -etcdir $ETCDIR \
            -vardir $VARDIR -sharedir $SHAREDIR -mandir $MANDIR -docdir $DOCDIR \
            -package-sharedir $PACKAGE_SHAREDIR -package-docdir $PACKAGE_DOCDIR >>$CONF

################################################################################
# FORMAKE CONFIG
optool dump -prefix $PREFIX -exec-prefix $EXEC_PREFIX -bindir $BINDIR -sbindir $SBINDIR \
            -libexecdir $LIBEXECDIR -libdir $LIBDIR -incdir $INCDIR -etcdir $ETCDIR \
            -vardir $VARDIR -sharedir $SHAREDIR -mandir $MANDIR -docdir $DOCDIR \
            -package-sharedir $PACKAGE_SHAREDIR -package-docdir $PACKAGE_DOCDIR \
            -package-name $PACKAGE_NAME -package-version $PACKAGE_VERSION >formake/formake.conf

TOP_EOF

if test -n "$op_cc$op_cxx"; then
  cat <<TOP_EOF >>$out_file
################################################################################
# SYSTEM COMPILERS
TOP_EOF
  if test x$op_cc = x1; then
    echo "cstem config -cc \$CC -cflags=\"\$CFLAGS\" || exit 1" >>$out_file
  fi
  if test x$op_cxx = x1; then
    echo "cstem+ config -cc \$CXX -cflags=\"\$CXXFLAGS\" || exit 1" >>$out_file
  fi
  echo "" >>$out_file
fi

cat <<TOP_EOF >>$out_file
################################################################################
# SYSTEM DEPENDENCIES
syscap test install || exit 1

TOP_EOF
if test x$op_lib = x1; then
  cat <<"TOP_EOF" >>$out_file
test -n "$PROG_AR" || PROG_AR=ar
syscap test $PROG_AR || exit 1

TOP_EOF
fi

if test x$op_cc = x1; then
  echo "syscap test -cc -ld -log=configure.log || exit 1" >>$out_file
  echo "syscap test -with-cc -cflags=\"\$CFLAGS\" -ldflags=\"\$LDFLAGS\" -log=configure.log || exit 1" >>$out_file
  print_nl=1
fi
if test x$op_cxx = x1; then
  echo "syscap test -cxx -ld -log=configure.log || exit 1" >>$out_file
  echo "syscap test -with-cxx -cflags=\"\$CXXFLAGS\" -ldflags=\"\$LDFLAGS\" -log=configure.log || exit 1" >>$out_file
  print_nl=1
fi

idx=0
while test $idx -lt $syscap_index; do
  eval syscap_params=\$syscap${idx}_params
  if test x$op_cc = x1; then
    echo "syscap test -with-cc -with-ldflags=\"\$LDFLAGS\" $syscap_params -log=configure.log || exit 1" >>$out_file
  elif test x$op_cxx = x1; then
    echo "syscap test -with-cxx -with-ldflags=\"\$LDFLAGS\" $syscap_params -log=configure.log || exit 1" >>$out_file
  else
    echo "syscap test -with-ldflags=\"\$LDFLAGS\" $syscap_params -log=configure.log || exit 1" >>$out_file
  fi
  idx=`expr $idx + 1`
  print_nl=1
done
test x$print_nl = x1 && echo "" >>$out_file
print_nl=

cat <<TOP_EOF >>$out_file
################################################################################
# CUSTOM CODE
TOP_EOF
if test -n "$op_sh"; then
  echo "$op_sh" >>$out_file
fi

cat <<"TOP_EOF" >>$out_file

################################################################################
# MKMF
$SRCROOT/mkmf || exit 1

################################################################################
# FINISH
echo "configuring done."

TOP_EOF

chmod +x $out_file

cat <<TOP_EOF
created script "$out_file"
package name: $op_pkgname
package version: $op_pkgver
TOP_EOF


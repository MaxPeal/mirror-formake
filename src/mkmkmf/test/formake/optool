#!/bin/sh
#
# Author: Oleksiy Chernyavskyy <ochern@rocketmail.com>
#

script_name=`basename $0`

sbs_param=
disable_special=
param_skip=
op_prefix=
no_case_change=
case x$1 in
  x-h|x-help|x--help)
    cat <<EOF
Usage: $script_name rc [-p <PREFIX>] [-nc] [-] OPTIONS
       $script_name def [-p <PREFIX>] [-nc] [-] OPTIONS
       $script_name validate OPTIONS - VALID_OPTIONS
       $script_name if OPTIONS - COND_OPTIONS
       $script_name ifor OPTIONS - COND_OPTIONS
       $script_name ifhelp OPTIONS
       $script_name source OPTIONS
EOF
    exit 0
    ;;
  xrc|xdef)
    mode=$1
    shift
    while test $# -gt 0; do
      case "$1" in
        -*|*=*)
          if test -n "$sbs_param"; then
            test -n "$sbs_param_val$sbs_param_set" || sbs_param_val=1
            if test $mode = rc; then
              echo "$sbs_param=\"$sbs_param_val\""
            else
              echo "#define $sbs_param \"$sbs_param_val\""
            fi
            sbs_param=
          fi
          param_skip=
          if test -z "$disable_special"; then
            case "$1" in
              -p)
                shift
                if test -z "$1"; then 
                  echo "$script_name: error: Parameter -p requires argument" >&2
                  exit 1
                fi
                op_prefix=`echo -n "$1" | sed 's/[^a-zA-Z0-9_]//g'`
                if test -z "$op_prefix"; then 
                  echo "$script_name: error: invalid prefix '$1'" >&2
                  exit 1
                fi
                param_skip=1
                ;;
              -nc)
                no_case_change=1
                param_skip=1
                ;;
            esac
          fi
          if test -z "$param_skip"; then
            case "$1" in
              -)
                disable_special=1
                ;;
              *)
                sbs_param=`echo -n "$1" | sed "s/^-*//" | sed 's/=.*//' | tr '-' '_' | sed 's/[^a-zA-Z0-9_]//g'`
                sbs_param="$op_prefix$sbs_param"
                if test -z $no_case_change; then
                  sbs_param=`echo -n "$sbs_param" | tr '[a-z]' '[A-Z]'`
                fi
                sbs_param_val=
                sbs_param_set=
                case "$1" in
                  *=*)
                    sbs_param_val=`echo -n "$1" | sed 's/^[^=]*=//'`
                    sbs_param_set=1
                    ;;
                esac
                ;;
            esac
          fi
          ;;
        *)
          if test -z "$sbs_param" || test x$sbs_param_set = x1; then
            echo "invalid parameter: $1" >&2
            exit 1
          fi
          if test -n "$sbs_param_val"; then
            sbs_param_val="$sbs_param_val $1"
          else
            sbs_param_val="$1"
          fi
          ;;
      esac
      shift
    done
    if test -n "$sbs_param"; then
      test -n "$sbs_param_val$sbs_param_set" || sbs_param_val=1
      if test $mode = rc; then
        echo "$sbs_param=\"$sbs_param_val\""
      else
        echo "#define $sbs_param \"$sbs_param_val\""
      fi
    fi
    exit 0
    ;;
  xvalidate)
    shift
    test $# -ne 0 || exit 0
    n=$#
    param=
    while test $n -ne 0; do
      eval param=\$$n
      test "$param" = "-" && break
      sbs_param=`echo -n "$param" | sed 's/=.*//' | tr '-' '_' | sed 's/[^a-zA-Z0-9_]//g' | tr '[a-z]' '[A-Z]'`
      eval SBS_VALID_$sbs_param=1
      n=`expr $n - 1`
    done

    if test "$param" != "-"; then 
      echo "invalid parameter: $param" >&2
      exit 1
    fi

    n=1
    sbs_param=
    while test $n -le $#; do
      eval param=\$$n
      case "$param" in
        -)
          break
          ;;
        -*|*=*)
          sbs_param=`echo -n "$param" | sed 's/=.*//' | tr '-' '_' | sed 's/[^a-zA-Z0-9_]//g' | tr '[a-z]' '[A-Z]'`
          eval is_valid=\$SBS_VALID_$sbs_param
          if test x$is_valid != x1; then
            echo "invalid parameter: $param" >&2
            exit 1
          fi
          ;;
        *)
          if test -z "$sbs_param"; then
            echo "invalid parameter: $param" >&2
            exit 1
          fi
          ;;
      esac
      n=`expr $n + 1`
    done
    exit 0
    ;;
  xif|xifor)
    mode=$1
    shift
    test $# -ne 0 || exit 0
    n=1
    param=
    while test $n -le $#; do
      eval param=\$$n
      case "$param" in
        -)
          break
          ;;
        -*|*=*)
          sbs_param=`echo -n "$param" | sed 's/=.*//' | tr '-' '_' | sed 's/[^a-zA-Z0-9_]//g' | tr '[a-z]' '[A-Z]'`
          eval SBS_SET_$sbs_param=1
          ;;
      esac
      n=`expr $n + 1`
    done

    test "$param" = "-" || exit 0

    n=`expr $n + 1`
    sbs_param=
    while test $n -le $#; do
      eval param=\$$n
      sbs_param=`echo -n "$param" | sed 's/=.*//' | tr '-' '_' | sed 's/[^a-zA-Z0-9_]//g' | tr '[a-z]' '[A-Z]'`
      eval is_set=\$SBS_SET_$sbs_param
      if test $mode = if; then
        test x$is_set = x1 || exit 1
      else
        test x$is_set = x1 && exit 0
      fi
      n=`expr $n + 1`
    done
    if test $mode = if; then
      exit 0
    else
      exit 1
    fi
    ;;
  xifhelp)
    shift
    test $# -ne 0 || exit 1
    SBS_SET__H=1
    SBS_SET__HELP=1
    SBS_SET___HELP=1

    n=1
    sbs_param=
    while test $n -le $#; do
      eval param=\$$n
      sbs_param=`echo -n "$param" | sed 's/=.*//' | tr '-' '_' | sed 's/[^a-zA-Z0-9_]//g' | tr '[a-z]' '[A-Z]'`
      eval is_set=\$SBS_SET_$sbs_param
      test x$is_set = x1 && exit 0
      n=`expr $n + 1`
    done
    exit 1
    ;;
  xsource)
    shift
    tmp_file=/tmp/op_source$$.sh
    cat <<EOF >$tmp_file
#!/bin/sh
rm -f $tmp_file
EOF
    $0 rc "$@" >>$tmp_file
    echo -n "$tmp_file"
    ;;
  x)
    echo "$script_name: error: function not specified" >&2; exit 1
    ;;
  x*)
    echo "$script_name: error: invalid function: $1" >&2; exit 1
    ;;
esac


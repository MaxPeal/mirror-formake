#!/bin/sh
#
# Formake formake-package
#
# Copyright (c) 2015-2017, Oleksiy Chernyavskyy
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

script_name=`basename $0`
script_dir=`dirname $0`
orig_dir=`pwd`
cd $script_dir
script_dir=`pwd`
cd $orig_dir

print_help() {
  cat <<EOF
Create build automation package

Usage: $script_name
EOF
}

while test $# -gt 0; do
  case "$1" in
    -h|-help|--help)
      print_help
      exit 0
      ;;
    *)
      echo "$script_name: error: invalid options: $1" >&2
      exit 1
      ;;
  esac
  shift
done

formake-install -help >/dev/null 2>&1
if test $? -ne 0; then
  if test -f $script_dir/formake-install; then
    FMKINSTALL=$script_dir/formake-install
  else
    echo "$script_name: error: formake-install not found"
    exit 1
  fi
else
  FMKINSTALL=formake-install
fi

formake-configure -help >/dev/null 2>&1
if test $? -ne 0; then
  if test -f $script_dir/formake-configure; then
    FMKCONFIGURE=$script_dir/formake-configure
  else
    echo "$script_name: error: formake-configure not found"
    exit 1
  fi
else
  FMKCONFIGURE=formake-configure
fi

formake-mkmf -help >/dev/null 2>&1
if test $? -ne 0; then
  if test -f $script_dir/formake-mkmf; then
    FMKMF=$script_dir/formake-mkmf
  else
    echo "$script_name: error: formake-mkmf not found"
    exit 1
  fi
else
  FMKMF=formake-mkmf
fi

$FMKINSTALL
$FMKCONFIGURE
$FMKMF


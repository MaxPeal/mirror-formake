#!/bin/sh
#
# Formake formake-install
#
# Copyright (c) 2015-2017, Oleksiy Chernyavskyy
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

version_string="formake-install 1.0"

script_name=`basename "$0"`
orig_dir=`pwd`
cd `dirname $0`
script_dir=`pwd`
cd $orig_dir
formake_dir=

op_dir=formake
formake_scripts="abspath cfront cstem cstem+ install ldlshell ldlwrap libro src2obj mkdep mkrule optool relpath syscap"

print_help() {
  cat <<EOF
Install Formake scripts into package

$script_name -v
$script_name [OPTIONS] [SCRIPTS]

 -v      print version

Options:
 -p DIR  create package directory
 -d DIR  package script directory name [formake]
 -std    install standard minimum set of scripts
 -all    install all scripts

Scripts:
  abspath      general automation       calculate absolute path
  cstem        configure automation     configure and probe C compiler
  cstem+       configure automation     configure and probe C++ compiler
  cfront       mkmf automation          C/C++ compiler frontend based on cstem/cstem+
  install      general automation       portable version of BSD install
  ldlshell     test automation          load interactive shell with predefined LD library path environment
  ldlwrap      test automation          create program wrapper script with predefined LD library path
  libro        mkmf automation          build static and dynamic libraries
  src2obj      general automation       convert source list to object list
  mkdep        mkmf automation          generate dependencies of C/C++ source files for Makefile
  mkrule       mkmf automation          generate Make rules
  optool       general automation       options processing tool
  syscap       configure automation     system capabilities query and test tool
  relpath      general automation       calculate relative path between two directories
EOF
}

print_version() {
  echo "$version_string"
}

select_standard() {
  s_mkrule=1
  s_optool=1
  s_relpath=1
  s_src2obj=1
  s_syscap=1
  have_list=1
}

select_all() {
  s_abspath=1
  s_cfront=1
  s_cstem=1
  s_cstemx=1
  s_install=1
  s_ldlshell=1
  s_ldlwrap=1
  s_libro=1
  s_src2obj=1
  s_mkdep=1
  s_mkrule=1
  s_optool=1
  s_relpath=1
  s_syscap=1
  have_list=1
}

while test $# -gt 0; do
  case "$1" in
    -h|-help|--help)
      print_help
      exit 0
      ;;
    -v)
      print_version
      exit 0
      ;;
    -p)
      shift
      if test -z "$1"; then
        echo "$script_name: error. Parameter -p requires argument" >&2
        exit 1
      fi
      op_package_dir=$1
      ;;
    -d)
      shift
      if test -z "$1"; then
        echo "$script_name: error. Parameter -d requires argument" >&2
        exit 1
      fi
      op_dir=$1
      ;;
    -std)
      select_standard
      ;;
    -all)
      select_all
      ;;
    abspath)
      s_abspath=1
      have_list=1
      ;;
    cstem)
      s_cstem=1
      have_list=1
      ;;
    cstem+)
      s_cstemx=1
      have_list=1
      ;;
    cfront)
      s_cfront=1
      have_list=1
      ;;
    install)
      s_install=1
      have_list=1
      ;;
    ldlshell)
      s_ldlshell=1
      ;;
    ldlwrap)
      s_ldlwrap=1
      ;;
    libro)
      s_libro=1
      have_list=1
      ;;
    src2obj)
      s_src2obj=1
      have_list=1
      ;;
    mkdep)
      s_mkdep=1
      have_list=1
      ;;
    mkrule)
      s_mkrule=1
      have_list=1
      ;;
    optool)
      s_optool=1
      have_list=1
      ;;
    syscap)
      s_syscap=1
      have_list=1
      ;;
    relpath)
      s_relpath=1
      have_list=1
      ;;
    *)
      echo "$script_name: invalid option: $1" >&2
      exit 1
      ;;
  esac
  shift
done

test -z "$have_list" && select_all

if test -n "$s_mkrule"; then
  test -z "$s_cstem$s_cstemx" && s_cstem=1
  s_libro=1
  s_mkdep=1
fi
test -n "$s_libro$s_mkdep$s_cfront" && test -z "$s_cstem$s_cstemx" && s_cstem=1
if test -n "$s_cstem$s_ctemx"; then
  s_ldlshell=1
  s_ldlwrap=1
  s_mkdep=1
  s_syscap=1
fi

for script in $formake_scripts; do
  case $script in
    cstem+)
      selected=$s_cstemx
      ;;
    *)
      eval selected=\$s_$script
      ;;
  esac
  if test x$selected = x1; then
    selected_scripts="$selected_scripts $script"
  fi
done

if test -z "$formake_dir"; then
  if test -z "$script_dir"; then
    for dir in $PATH; do
      if test -f "$dir/$script_name" && test -x "$dir/$script_name" ; then
        script_dir=$dir
        break
      fi
    done
  fi
  if test -n "$script_dir"; then
    cd $script_dir
    formake_dir=`pwd`
    cd $orig_dir
  fi
fi

if test -z "$formake_dir"; then
  if test -d /usr/share/formake; then
    formake_dir=/usr/share/formake
  elif test -d /usr/local/share/formake; then
    formake_dir=/usr/local/share/formake
  elif test -n "$script_dir" && test -d $script_dir/../share/formake; then
    formake_dir=$script_dir/../share/formake
  fi
fi

if test -n "$formake_dir"; then
  for script in $selected_scripts; do
    if test ! -f $formake_dir/$script; then
      echo "$script_name: script $script not found" >&2
      exit 1
    fi
  done
  if test -n "$op_package_dir" && test ! -d $op_package_dir; then
    mkdir -p $op_package_dir
    if test ! -d $op_package_dir; then
      echo "$script_name: could not create package directory $op_dir" >&2
      exit 1
    fi
    cd $op_package_dir
  fi
  test -d $op_dir || mkdir -p $op_dir
  if test ! -d $op_dir; then
    echo "$script_name: could not create script directory $op_dir" >&2
    exit 1
  fi
  for script in $selected_scripts; do
    cp $formake_dir/$script $op_dir
    chmod +x $op_dir/$script
  done
else
  echo "$script_name: script directory not found" >&2
fi


#!/bin/sh
#
# Author: Oleksiy Chernyavskyy <ochern@rocketmail.com>
#

script_name=`basename $0`
script_dir=`dirname $0`
tmp_file="/tmp/iftool_$$.txt"
tmp_buf="/tmp/iftool_$$_buf.txt"
rm -f $tmp_buf

################################################################################
# LOAD CONFIG
PATH=$FORMAKE:$PATH
IFTOOL=
if test -f $script_dir/config.rc; then
  . $script_dir/config.rc
fi
test -n "$FORMAKE_IFTOOL" && IFTOOL=$FORMAKE_IFTOOL
if test -n "$IFTOOL" && test -z "$IFTOOL_REDIRECT"; then
  export IFTOOL_REDIRECT=1
  $IFTOOL "$@"
  ret=$?
  if test $ret -ne 64; then
    exit $ret
  fi
fi
################################################################################

print_help() {
cat <<EOF
Command test tool

$script_name [OPTIONS] program ...
 -n              no echo
 -f              echo only on fail
 program         name of program to check
EOF
}

echo_status() {
  if test x$op_no_echo = x; then
    printf "$1" "$2"
  elif test x$op_echo_fail = x1; then
    printf "$1" "$2" >> $tmp_buf
  fi
}

clean_exit() {
  exit_status=$1
  if test $exit_status != 0 && test x$op_echo_fail = x1 && test -f $tmp_buf; then
    cat $tmp_buf
  fi
  rm -f $tmp_buf
  rm -f $tmp_file
  exit $exit_status
}

for param in "$@"; do
  case "$param" in
    -h|-help|--help)
      print_help
      clean_exit 0
      ;;
    -n)
      op_no_echo=1
      op_echo_fail=
      ;;
    -f)
      op_echo_fail=1
      op_no_echo=1
      ;;
  esac
done

command -v ls >/dev/null 2>&1
if test $? -ne 127; then
  have_command_v=1
fi
hash ls >/dev/null 2>&1
if test $? -eq 0; then
  have_hash=1
fi
type -P ls >/dev/null 2>&1
if test $? -eq 0; then
  have_type_p=1
fi
whence -p ls >/dev/null 2>&1
if test $? -eq 0; then
  have_whence_p=1
fi

echo "" >$tmp_file
while test $# -gt 0; do
  case "$1" in
    -n)
      :
      ;;
    -f)
      :
      ;;
    *)
      if grep -F -x "$1" $tmp_file > /dev/null; then
        :
      else
        echo_status "%s" "checking $1 ... "
        if test x$have_command_v = x1; then
          command -v $1 >/dev/null 2>&1
          if test $? != 0; then
            echo_status "%s\n" "Failed"
            clean_exit 1
          fi
        elif test x$have_hash = x1; then
          hash $1 >/dev/null 2>&1
          if test $? != 0; then
            echo_status "%s\n" "Failed"
            clean_exit 1
          fi
        elif test x$have_type_p = x1; then
          type -P $1 >/dev/null 2>&1
          if test $? != 0; then
            echo_status "%s\n" "Failed"
            clean_exit 1
          fi
        elif test x$have_whence_p = x1; then
          whence -p $1 >/dev/null 2>&1
          if test $? != 0; then
            echo_status "%s\n" "Failed"
            clean_exit 1
          fi
        else
          found=
          for dir in $PATH; do
            test -z "$dir" && dir=.
            if test -f "$dir/$1" && test -x "$dir/$1" ; then
              found=1
              break
            fi
          done
          if test x$found = x; then
            echo_status "%s\n" "Failed"
            clean_exit 1
          fi
        fi
        echo_status "%s\n" "OK"
        echo "$1" >>$tmp_file
      fi
      ;;
  esac
  shift
done

rm -f $tmp_file

clean_exit 0


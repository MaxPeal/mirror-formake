#!/bin/sh
################################################################################
# Generated by Formake fmkmf
# Mon Feb 20 11:56:08 EET 2017
# fmkmf 

################################################################################
# BASE CONFIGURATION
BUILDROOT=.
CONF="build.conf"
MAKEFILE="Makefile"
TOOLS="relpath mkrule"

################################################################################
# INIT
SCRIPT=`basename $0`
PATH=$FORMAKE:$PWD/$BUILDROOT/formake:$PATH
syscap test -f $TOOLS || exit 1
SRCDIR=`dirname $0 | xargs relpath ./`
SRCROOT=`relpath ./ $SRCDIR/$BUILDROOT`
ABS_BUILDDIR=`pwd`
SUBDIR=`relpath $BUILDROOT ./`

################################################################################
# READ CONFIG
#. $BUILDROOT/$CONF

################################################################################
# INIT MAKEFILE
mkrule init >$MAKEFILE
mkrule distclean $MAKEFILE >>$MAKEFILE

################################################################################
# OBJECTS
#
# Compile C/C++ sources
#
# ---OPTIONAL CODE--------------------------------------------------------------
#   # Set module specific C flags
#   CFLAGS=""
#
#   # Set module specific C++ flags
#   CXXFLAGS=""
#
#   # Set output directory for C/C++ compiled objects
#   STATIC_DIR="_static"
#   C_STATIC_DIR="_static"
#   CXX_STATIC_DIR="cxx_static"
#
#   # Set output directory for C/C++ compiled objects for shared library
#   PIC_DIR="_pic"
#   C_PIC_DIR="_pic"
#   CXX_PIC_DIR="cxx_pic"
#
#   # Set sources
#   c_prog_sources="file1.c file2.c file3.c"
#   cxx_prog_sources="file1.C file2.C file3.C"
#   c_lib_sources="file1.c file2.c file3.c"
#   cxx_lib_sources="file1.C file2.C file3.C"
#
#   # Compile sources
#   mkrule obj -cflags="$CFLAGS" -srcdir $SRCDIR -src $c_prog_sources -d $STATIC_DIR >>$MAKEFILE
#   mkrule obj -c++ -cflags="$CXXFLAGS" -srcdir $SRCDIR -src $cxx_prog_sources -d $STATIC_DIR >>$MAKEFILE
#   mkrule obj -pic -cflags="$CFLAGS" -srcdir $SRCDIR -src $c_lib_sources -d $PIC_DIR >>$MAKEFILE
#   mkrule obj -c++ -pic -cflags="$CXXFLAGS" -srcdir $SRCDIR -src $cxx_lib_sources -d $PIC_DIR >>$MAKEFILE

################################################################################
# PROGRAMS
#
# Link C/C++ programs
#
# ---OPTIONAL CODE--------------------------------------------------------------
#   # Set up program options
#   prog_name="my_prog"
#   prog_ldflags=""
#
#   Link C program
#   mkrule prog -all -install -ldflags="$prog_ldflags" -n $prog_name -objdir $STATIC_DIR -src $c_prog_sources >>$MAKEFILE
#
#   Link C++ program
#   mkrule prog -all -install -c++ -ldflags="$prog_ldflags" -n $prog_name -objdir $STATIC_DIR -src $cxx_prog_sources >>$MAKEFILE

################################################################################
# LIBRARIES
#
# Link C/C++ libraries
#
# ---OPTIONAL CODE--------------------------------------------------------------
#   # Set up library options
#   lib_name="my_lib"
#   lib_version="1.0.0"
#   lib_ldflags=""
#
#   # Link C library
#   mkrule lib -all -install -static -n $lib_name -ver $lib_version -objdir $STATIC_DIR -src $c_lib_sources >>$MAKEFILE
#   mkrule lib all -install -shared -ldflags="$lib_ldflags" -n $lib_name -ver $lib_version -objdir $PIC_DIR -src $c_lib_sources >>$MAKEFILE
#
#   # Link C++ library
#   mkrule lib -all -install -c++ -static -n $lib_name -ver $lib_version -objdir $STATIC_DIR -src $cxx_lib_sources >>$MAKEFILE
#   mkrule lib all -install -c++ -shared -ldflags="$lib_ldflags" -n $lib_name -ver $lib_version -objdir $PIC_DIR -src $cxx_lib_sources >>$MAKEFILE

################################################################################
# CUSTOM CODE
#
# Put your custom code here

################################################################################
# INSTALLATION FILES
#
# Install files by 'make install'
#
# ---OPTIONAL CODE--------------------------------------------------------------
#   # Set up corresponding variables and generate installation rules
#   mkrule install bin $install_bin >>$MAKEFILE
#   mkrule install sbin $install_sbin >>$MAKEFILE
#   mkrule install lib $install_lib >>$MAKEFILE
#   mkrule install libexec $install_libexec >>$MAKEFILE
#   mkrule install inc $install_inc >>$MAKEFILE
#   mkrule install man0 $install_man0 >>$MAKEFILE
#   mkrule install man1 $install_man1 >>$MAKEFILE
#   mkrule install man2 $install_man2 >>$MAKEFILE
#   mkrule install man3 $install_man3 >>$MAKEFILE
#   mkrule install man4 $install_man4 >>$MAKEFILE
#   mkrule install man5 $install_man5 >>$MAKEFILE
#   mkrule install man6 $install_man6 >>$MAKEFILE
#   mkrule install man7 $install_man7 >>$MAKEFILE
#   mkrule install man8 $install_man8 >>$MAKEFILE
#   mkrule install man9 $install_man9 >>$MAKEFILE
#   mkrule install doc $install_doc >>$MAKEFILE
#   mkrule install data $install_share >>$MAKEFILE
#   mkrule install etc $install_etc >>$MAKEFILE

################################################################################
# DIST
#
# Create distribution tarball by 'make dist'

dist_files="configure formake/relpath formake/mkrule  mkmf "
mkrule dist -n $PACKAGE_NAME -ver $PACKAGE_VERSION -buildroot $BUILDROOT -srcdir $SRCDIR -f $dist_files >>$MAKEFILE || exit 1

################################################################################
# SUBDIRS
#
# Build subdirectories
#
# ---OPTIONAL CODE--------------------------------------------------------------
#   # Generate rules to build subdirectories
#   mkrule subdir -all -install -clean -dist -distclean -d $SUBDIRS >>$MAKEFILE
#
#   # Run mkmf in subdirectories
#   for dir in $SUBDIRS; do
#     cd $ABS_BUILDDIR
#     test -d $dir || mkdir -p $dir
#     cd $dir; $ABS_BUILDDIR/$SRCDIR/$dir/mkmf || exit 1
#   done

################################################################################
# DONE
echo "$SUBDIR/$SCRIPT: DONE"


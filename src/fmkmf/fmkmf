#!/bin/sh
#
# Formake fmkmf
# author: Oleksiy Chernyavskyy <ochern@rocketmail.com>
#

version_string="fmkmf 1.0"
script_name=`basename "$0"`
script_options="$@"

op_out_file=mkmf
op_out_mkfile=Makefile
op_srcroot="."
dist_files="mkmf"
op_force=
default_static_dir="_static"
default_pic_dir="_pic"

cd_param=
orig_dir=`pwd`
cd -P / >/dev/null 2>&1
if test $? -eq 0; then
  cd_param="-P"
fi
cd "$orig_dir"

print_help() {
  cat <<EOF
Generate mkmf script

$script_name [options]
 -srcroot PATH        source root dir relative path (SRCROOT) [./]
 -subdirs ..          run mkmf scripts in subdirs in specified order
 -*src ..             source files
 -*obj ..             object files
 -*dobj ..            PIC object files
 -*type TYPE          output target type:
                        prog       - build program
                        lib|tlib   - build static library
                        dlib       - build dynamic library
                        xlib       - build static and dynamic libraries
                        obj|tobj   - compile objects for static linking
                        dobj       - compile objects for dynamic linking
                        xobj       - compile objects for static and dynamic linking
 -*name NAME          program/library name
 -*cflags=FLAGS       C compiler flags
 -*cxxflags=FLAGS     C++ compiler flags
 -*ldflags=FLAGS      linker flags
 -*no-install         do not add target to the install rule
 -*ver X[.Y[.Z]]      library version
 -*objdir DIR         output directory for compiled objects
 -*common             make objects common for other targets (option is valid only for *obj target)
 -*lang c|c++         compiler/linker type [autodetect]
 -add-src ..          add sources for all targets
 -add-obj ..          add objects for all targets
 -add-dobj ..         add PIC objects for all targets
 -add-cflags=FLAGS    add C flags for all targets
 -add-cxxflags=FLAGS  add C++ flags for all targets
 -add-ldflags=FLAGS   add LD flags for all targets
 -def-type TYPE       default target type
 -def-ver VER         default library version
 -def-no-install      no-install for all targets
 -def-objdir DIR      default object output directory
 -def-lang c|c++      default compiler/linker type
 -inst-bin ..         executables to be installed into bin directory
 -inst-sbin ..        executables to be installed into sbin directory
 -inst-lib ..         files and directories to be installed into lib directory
 -inst-libexec ..     files and directories to be installed into libexec directory
 -inst-inc ..         header files and directories to be installed into include dir
 -inst-man[0-9] ..    man files and directories to be installed into man directory
 -inst-doc ..         documentation files and directories to be installed into doc
 -inst-share ..       files and directories to be installed into share directory
 -inst-etc ..         files and directories to be installed into etc directory
 -f                   force to overwrite existing mkmf script if found
 -o FILE              output script file [$op_out_file]
 -omk FILE            output Make script [$op_out_mkfile]
 -v                   print version

Optional name prefix (*) in parameters specifies a unique id by which parameters are grouped for a selected target.
For lib target it will create 2 directories, _static and _pic, for static and dynamic (PIC) objects. If -*objdir parameter is specified it will be appended with '_pic' suffix for dynamic objects.
EOF
}

abs_path() {
  _sub_orig_dir=`pwd`
  if test $# = 0; then
    abs_path_ret=
    return
  fi
  if test $# = 2; then
    _arg_orig_dir=$1
    _arg=$2
    if echo -n "$_arg" | grep "^/" > /dev/null; then
      :
    else
      _arg=`echo -n "$_arg_orig_dir/$_arg" | sed 's!//*!/!g'`
    fi
  else
    _arg=$1
  fi
  if test -e "$_arg"; then
    if test -d $_arg; then
      _file=
    else
      _file=`basename -- $_arg`
      _arg=`dirname -- $_arg`
    fi

    cd $_cd_param $_arg
    abs_path_ret=`pwd`
    if test x"$_file" != "x"; then
      abs_path_ret="$abs_path_ret/$_file"
    fi

    cd $_cd_param $_sub_orig_dir
  else
    if echo -n "$_arg" | grep "^/" > /dev/null; then
      abs_path_ret="$_arg"
    else
      abs_path_ret="$_sub_orig_dir/$_arg"
    fi
    abs_path_ret=`echo -n "$abs_path_ret" | sed 's#//*#/#g'`
    abs_path_ret=`echo -n "$abs_path_ret" | sed 's#/*$#/#'`
    string_prev=
    while test "x$abs_path_ret" != "x$string_prev" ; do
      string_prev=$abs_path_ret
      abs_path_ret=`echo -n "$abs_path_ret" | sed 's#/[^/][^/][^/][^/]*/\.\./#/#g' | sed 's#/[^/][^/.]/\.\./#/#g' | sed 's#/[^/.][^/]/\.\./#/#g' | sed 's#/[^/.]/\.\./#/#g'`
      abs_path_ret=`echo -n "$abs_path_ret" | sed 's#^/\.\./#/#' | sed 's#^/\.\.$#/#'`
      abs_path_ret=`echo -n "$abs_path_ret" | sed 's#/\./#/#g' | sed 's#/\.$#/#'`
    done
    abs_path_ret=`echo -n "$abs_path_ret" | sed 's#/$##' | sed 's#^$#/#'`
  fi
}


prefix=
current_opt=
while test $# -gt 0; do
  case "$1" in
    -h|-help|--help)
      print_help
      exit 0
      ;;
    -srcroot)
      current_opt=srcroot
      ;;
    -subdirs)
      op_subdirs=
      current_opt=subdirs
      ;;
    -add-src)
      op_add_src=
      current_opt=add-src
      ;;
    -add-obj)
      op_add_obj=
      current_opt=add-obj
      ;;
    -add-dobj)
      op_add_dobj=
      current_opt=add-dobj
      ;;
    -add-cflags=*)
      op_add_cflags=`echo -n "$1" | sed 's/^[^=]*=//'`
      current_opt=
      ;;
    -add-cxxflags=*)
      op_add_cxxflags=`echo -n "$1" | sed 's/^[^=]*=//'`
      current_opt=
      ;;
    -add-ldflags=*)
      op_add_ldflags=`echo -n "$1" | sed 's/^[^=]*=//'`
      current_opt=
      ;;
    -def-type)
      current_opt="def-type"
      ;;
    -def-ver)
      current_opt=def-ver
      ;;
    -def-no-install)
      op_def_no_install=1
      current_opt=
      ;;
    -def-objdir)
      current_opt=def-objdir
      ;;
    -def-lang)
      current_opt=def-lang
      ;;
    -*src)
      prefix=`echo -n "$1" | sed 's/src$//' | sed 's/^-*//' | sed 's/-*$//' | tr '-' '_' | sed 's/[^a-zA-Z0-9_]//g'`
      if test -z "$prefix"; then
        prefix="_"
      fi
      prefix_list="$prefix_list $prefix"
      eval target_${prefix}_src=
      current_opt=target-src
      ;;
    -*dobj)
      prefix=`echo -n "$1" | sed 's/dobj$//' | sed 's/^-*//' | sed 's/-*$//' | tr '-' '_' | sed 's/[^a-zA-Z0-9_]//g'`
      if test -z "$prefix"; then
        prefix="_"
      fi
      prefix_list="$prefix_list $prefix"
      eval target_${prefix}_dobj=
      current_opt=target-dobj
      ;;
    -*obj)
      prefix=`echo -n "$1" | sed 's/obj$//' | sed 's/^-*//' | sed 's/-*$//' | tr '-' '_' | sed 's/[^a-zA-Z0-9_]//g'`
      if test -z "$prefix"; then
        prefix="_"
      fi
      prefix_list="$prefix_list $prefix"
      eval target_${prefix}_obj=
      current_opt=target-obj
      ;;
    -*type)
      prefix=`echo -n "$1" | sed 's/type$//' | sed 's/^-*//' | sed 's/-*$//' | tr '-' '_' | sed 's/[^a-zA-Z0-9_]//g'`
      if test -z "$prefix"; then
        prefix="_"
      fi
      prefix_list="$prefix_list $prefix"
      current_opt=target-type
      ;;
    -*name)
      prefix=`echo -n "$1" | sed 's/name$//' | sed 's/^-*//' | sed 's/-*$//' | tr '-' '_' | sed 's/[^a-zA-Z0-9_]//g'`
      if test -z "$prefix"; then
        prefix="_"
      fi
      prefix_list="$prefix_list $prefix"
      current_opt=target-name
      ;;
    -*cflags=*)
      prefix=`echo -n "$1" | sed 's/cflags=.*//' | sed 's/^-*//' | sed 's/-*$//' | tr '-' '_' | sed 's/[^a-zA-Z0-9_]//g'`
      if test -z "$prefix"; then
        prefix="_"
      fi
      prefix_list="$prefix_list $prefix"
      _cflags=`echo -n "$1" | sed 's/^[^=]*=//'`
      eval target_${prefix}_cflags=\$_cflags
      current_opt=
      ;;
    -*cxxflags=*)
      prefix=`echo -n "$1" | sed 's/cxxflags=.*//' | sed 's/^-*//' | sed 's/-*$//' | tr '-' '_' | sed 's/[^a-zA-Z0-9_]//g'`
      if test -z "$prefix"; then
        prefix="_"
      fi
      prefix_list="$prefix_list $prefix"
      _cxxflags=`echo -n "$1" | sed 's/^[^=]*=//'`
      eval target_${prefix}_cxxflags=\$_cxxflags
      current_opt=
      ;;
    -*ldflags=*)
      prefix=`echo -n "$1" | sed 's/ldflags=.*//' | sed 's/^-*//' | sed 's/-*$//' | tr '-' '_' | sed 's/[^a-zA-Z0-9_]//g'`
      if test -z "$prefix"; then
        prefix="_"
      fi
      prefix_list="$prefix_list $prefix"
      _ldflags=`echo -n "$1" | sed 's/^[^=]*=//'`
      eval target_${prefix}_ldflags=\$_ldflags
      current_opt=
      ;;
    -*no-install)
      prefix=`echo -n "$1" | sed 's/no-install$//' | sed 's/^-*//' | sed 's/-*$//' | tr '-' '_' | sed 's/[^a-zA-Z0-9_]//g'`
      if test -z "$prefix"; then
        prefix="_"
      fi
      prefix_list="$prefix_list $prefix"
      eval target_${prefix}_no_install=1
      current_opt=
      ;;
    -*common)
      prefix=`echo -n "$1" | sed 's/common$//' | sed 's/^-*//' | sed 's/-*$//' | tr '-' '_' | sed 's/[^a-zA-Z0-9_]//g'`
      if test -z "$prefix"; then
        prefix="_"
      fi
      prefix_list="$prefix_list $prefix"
      eval target_${prefix}_common=1
      current_opt=
      ;;
    -*ver)
      prefix=`echo -n "$1" | sed 's/ver$//' | sed 's/^-*//' | sed 's/-*$//' | tr '-' '_' | sed 's/[^a-zA-Z0-9_]//g'`
      if test -z "$prefix"; then
        prefix="_"
      fi
      prefix_list="$prefix_list $prefix"
      current_opt=target-ver
      ;;
    -*objdir)
      prefix=`echo -n "$1" | sed 's/objdir$//' | sed 's/^-*//' | sed 's/-*$//' | tr '-' '_' | sed 's/[^a-zA-Z0-9_]//g'`
      if test -z "$prefix"; then
        prefix="_"
      fi
      prefix_list="$prefix_list $prefix"
      current_opt=target-objdir
      ;;
    -*lang)
      prefix=`echo -n "$1" | sed 's/lang$//' | sed 's/^-*//' | sed 's/-*$//' | tr '-' '_' | sed 's/[^a-zA-Z0-9_]//g'`
      if test -z "$prefix"; then
        prefix="_"
      fi
      prefix_list="$prefix_list $prefix"
      current_opt=target-lang
      ;;
    -inst-bin)
      op_inst_bin=
      have_custom_inst_stuff=1
      current_opt=inst-bin
      ;;
    -inst-sbin)
      op_inst_sbin=
      have_custom_inst_stuff=1
      current_opt=inst-sbin
      ;;
    -inst-lib)
      op_inst_lib=
      have_custom_inst_stuff=1
      current_opt=inst-lib
      ;;
    -inst-libexec)
      op_inst_libexec=
      have_custom_inst_stuff=1
      current_opt=inst-libexec
      ;;
    -inst-inc)
      op_inst_inc=
      have_custom_inst_stuff=1
      current_opt=inst-inc
      ;;
    -inst-man[0-9])
      man_num=`echo -n "$1" | sed 's/^-inst-man//'`
      eval op_inst_man$man_num=
      have_custom_inst_stuff=1
      current_opt=inst-man
      ;;
    -inst-doc)
      op_inst_doc=
      have_custom_inst_stuff=1
      current_opt=inst-doc
      ;;
    -inst-share)
      op_inst_share=
      have_custom_inst_stuff=1
      current_opt=inst-share
      ;;
    -inst-etc)
      op_inst_etc=
      have_custom_inst_stuff=1
      current_opt=inst-etc
      ;;
    -f)
      op_force=1
      ;;
    -o)
      current_opt=o
      ;;
    -omk)
      current_opt=omk
      ;;
    -v)
      echo "$version_string"
      exit 0
      ;;
    *)
      case "$current_opt" in
        srcroot)
          op_srcroot=`echo -n "$1" | sed 's!//*!/!g'`
          if test "$op_srcroot" != "/"; then
            op_srcroot=`echo -n "$op_srcroot" | sed 's!/*$!!'`
          fi
          current_opt=
          ;;
        subdirs)
          if echo -n "$1" | grep "^/" > /dev/null; then
            echo "$script_name: error: parameter -subdirs: absolute path not allowed: $1" >&2
            exit 1
          fi
          subdir=`echo -n "$1" | sed 's/\/*$//'`
          op_subdirs="$op_subdirs $subdir"
          ;;
        add-src)
          op_add_src="$op_add_src $1"
          all_sources="$all_sources $1"
          have_src=1
          case "$1" in
            *.C|*.[Cc][Cc]|*.[Cc][Pp][Pp]|*.[Cc][Xx][Xx])
              have_add_cxx=1
              ;;
            *.c)
              have_add_c=1
              ;;
            *)
              echo "$script_name: error: bad source type $1" >&2
              exit 1
              ;;
          esac
          ;;
        add-obj)
          op_add_obj="$op_add_obj $1"
          ;;
        add-dobj)
          op_add_dobj="$op_add_dobj $1"
          ;;
        def-type)
          case "$1" in
            obj)
              ttype=tobj
              ;;
            prog|tobj|dobj|xobj)
              ttype=$1
              ;;
            lib)
              ttype=tlib
              use_libro=1
              ;;
            tlib|dlib|xlib)
              ttype=$1
              use_libro=1
              ;;
            *)
              echo "$script_name: error: invalid default type: $1" >&2
              exit 1
              ;;
          esac
          op_def_type=$ttype
          current_opt=
          ;;
        def-ver)
          op_def_ver=$1
          current_opt=
          ;;
        def-objdir)
          op_def_objdir=$1
          current_opt=
          ;;
        def-lang)
          case "$1" in
            c|c++)
              op_def_lang=$1
              ;;
            *)
              echo "$script_name: error: invalid language type $1" >&2
              exit 1
              ;;
          esac
          current_opt=
          ;;
        target-src)
          eval target_${prefix}_src=\"\$target_${prefix}_src \$1\"
          all_sources="$all_sources $1"
          have_src=1
          case "$1" in
            *.C|*.[Cc][Cc]|*.[Cc][Pp][Pp]|*.[Cc][Xx][Xx])
              eval target_${prefix}_have_cxx=1
              ;;
            *.c)
              eval target_${prefix}_have_c=1
              ;;
            *)
              echo "$script_name: error: bad source type $1" >&2
              exit 1
              ;;
          esac
          ;;
        target-obj)
          eval target_${prefix}_obj=\"\$target_${prefix}_obj \$1\"
          ;;
        target-dobj)
          eval target_${prefix}_dobj=\"\$target_${prefix}_dobj \$1\"
          ;;
        target-type)
          case "$1" in
            obj)
              ttype=tobj
              ;;
            prog|tobj|dobj|xobj)
              ttype=$1
              ;;
            lib)
              ttype=tlib
              use_libro=1
              ;;
            tlib|dlib|xlib)
              ttype=$1
              use_libro=1
              ;;
            *)
              echo "$script_name: error: invalid target type: $1" >&2
              exit 1
              ;;
          esac
          eval target_${prefix}_type=\$ttype
          current_opt=
          ;;
        target-name)
          eval target_${prefix}_name=\$1
          current_opt=
          ;;
        target-ver)
          eval target_${prefix}_ver=\$1
          current_opt=
          ;;
        target-objdir)
          eval target_${prefix}_objdir=\$1
          current_opt=
          ;;
        target-lang)
          case "$1" in
            c|c++)
              eval target_${prefix}_lang=\$1
              ;;
            *)
              echo "$script_name: error: invalid language type $1" >&2
              exit 1
              ;;
          esac
          current_opt=
          ;;
        inst-bin)
          op_inst_bin="$op_inst_bin $1"
          ;;
        inst-sbin)
          op_inst_sbin="$op_inst_sbin $1"
          ;;
        inst-lib)
          op_inst_lib="$op_inst_lib $1"
          ;;
        inst-libexec)
          op_inst_libexec="$op_inst_libexec $1"
          ;;
        inst-inc)
          op_inst_inc="$op_inst_inc $1"
          ;;
        inst-man)
          eval op_inst_man$man_num=\"\$op_inst_man$man_num $1\"
          ;;
        inst-doc)
          op_inst_doc="$op_inst_doc $1"
          ;;
        inst-share)
          op_inst_share="$op_inst_share $1"
          ;;
        inst-etc)
          op_inst_etc="$op_inst_etc $1"
          ;;
        o)
          op_out_file=`echo -n "$1" | sed 's/\/*$//'`
          if test -d "$op_out_file"; then
            op_out_file="$op_out_file/mkmf"
          fi
          op_force=1
          current_opt=
          ;;
        omk)
          op_out_mkfile=$1
          current_opt=
          ;;
        *)
          echo "$script_name: error: bad option $1" >&2
          exit 1
          ;;
      esac
      ;;
  esac
  shift
done

prefix_list=`echo "$prefix_list" | tr ' ' '\n' | sort | uniq | tr '\n' ' ' | sed 's/^ *//'`

if test -f $op_out_file && test x$op_force = x; then
  op_out_file="${op_out_file}.new"
fi

if test x$have_custom_inst_stuff = x1; then
  have_inst_stuff=1
fi

for prefix in $prefix_list; do
  eval target_src=\$target_${prefix}_src
  eval target_obj=\$target_${prefix}_obj
  eval target_dobj=\$target_${prefix}_dobj
  eval target_type=\$target_${prefix}_type
  eval target_name=\$target_${prefix}_name
  eval target_ldflags=\$target_${prefix}_ldflags
  eval target_no_install=\$target_${prefix}_no_install
  eval target_ver=\$target_${prefix}_ver
  eval target_objdir=\$target_${prefix}_objdir
  eval target_obj_common=\$target_${prefix}_common
  eval target_lang=\$target_${prefix}_lang

  target_src=`echo "$target_src" | sed 's/^ *//'`
  eval target_${prefix}_src=\$target_src
  target_obj=`echo "$target_obj" | sed 's/^ *//'`
  eval target_${prefix}_obj=\$target_obj
  target_dobj=`echo "$target_dobj" | sed 's/^ *//'`
  eval target_${prefix}_dobj=\$target_dobj


  if test -z "$target_type"; then
    if test -n "$op_def_type"; then
      target_type=$op_def_type
    elif test x$target_obj_common = x1; then
      target_type=tobj
    elif test -n "$target_ver"; then
      target_type=xlib
    elif test -n "$target_name" || test -n "$target_ldflags"; then
      target_type=prog
    else
      target_type=tobj
    fi
    eval target_${prefix}_type=\$target_type
  fi

  if test -z "$target_name"; then
    if test $prefix != "_"; then
      eval target_${prefix}_name=\$prefix
    else
      case $target_type in
        tlib|dlib|xlib)
          eval target_${prefix}_name="mod"
          ;;
        prog)
          eval target_${prefix}_name="prog"
          ;;
      esac
    fi
  fi

  if test -z "$target_ver"; then
    if test -n "$op_def_ver"; then
      eval target_${prefix}_ver=\$op_def_ver
    else
      eval target_${prefix}_ver=\"1.0.0\"
    fi
  fi

  if test -n "$target_objdir"; then
    target_objdir_pic="${target_objdir}_pic"
    eval target_${prefix}_objdir_pic=\$target_objdir_pic
  elif test -n "$op_def_objdir"; then
    target_objdir="$op_def_objdir"
    eval target_${prefix}_objdir=\$target_objdir
    target_objdir_pic="${op_def_objdir}_pic"
    eval target_${prefix}_objdir_pic=\$target_objdir_pic
  else
    case $target_type in
      prog|tlib|xlib|tobj|xobj)
        common_static_dir=$default_static_dir
        ;;
    esac
    case $target_type in
      dlib|xlib|dobj|xobj)
        common_pic_dir=$default_pic_dir
        ;;
    esac
  fi

  if test x$op_def_no_install = x1; then
    target_no_install=1
    eval target_${prefix}_no_install=1
  fi

  if test -z "$target_no_install"; then
    have_inst_stuff=1
  fi

  if test x$target_obj_common = x1; then
    case $target_type in
      tobj|dobj|xobj) : ;;
      *)
        echo "error: option -*common can be used only for types obj, tobj, dobj, xobj" >&2
        exit 1
        ;;
    esac
  fi

  if test x$have_add_cxx = x1; then
    eval target_${prefix}_have_cxx=1
  fi

  if test -z "$target_lang"; then
    target_lang=$op_def_lang
  fi

  if test -n "$target_lang"; then
    eval target_${prefix}_lang=\$target_lang
    case $target_lang in
      c)
        eval target_${prefix}_have_cxx=
        eval target_${prefix}_have_c=1
        ;;
      c++)
        eval target_${prefix}_have_cxx=1
        eval target_${prefix}_have_c=
        ;;
    esac
  fi
done


formake_scripts="relpath mkrule"
echo "using the following Formake scripts: $formake_scripts"

cat <<TOP_EOF >$op_out_file
#!/bin/sh
################################################################################
# Generated by Formake fmkmf
TOP_EOF
date >/dev/null 2>&1
if test $? -eq 0; then
  date | sed 's/^/# /' >>$op_out_file
fi

cat <<TOP_EOF >>$op_out_file
# $script_name $script_options
TOP_EOF

cat <<TOP_EOF >>$op_out_file

################################################################################
# BASE CONFIGURATION
BUILDROOT=$op_srcroot
CONF="build.conf"
MAKEFILE="$op_out_mkfile"
TOOLS="$formake_scripts"
TOP_EOF
if test -n "$op_subdirs"; then
  op_subdirs=`echo -n "$op_subdirs" | sed 's/^ *//'`
  echo "SUBDIRS=\"$op_subdirs\"" >>$op_out_file
fi

cat <<"TOP_EOF" >>$op_out_file

################################################################################
# INIT
SCRIPT=`basename $0`
PATH=$FORMAKE:$PWD/$BUILDROOT/formake:$PATH
syscap test -f $TOOLS || exit 1
SRCDIR=`dirname $0 | xargs relpath ./`
SRCROOT=`relpath ./ $SRCDIR/$BUILDROOT`
ABS_BUILDDIR=`pwd`
SUBDIR=`relpath $BUILDROOT ./`

################################################################################
# READ CONFIG
test -f $BUILDROOT/$CONF && . $BUILDROOT/$CONF

################################################################################
# INIT MAKEFILE
mkrule init >$MAKEFILE
TOP_EOF
if test "$op_srcroot" = "."; then
  echo "mkrule distclean \$CONF configure.log formake/*.conf \$MAKEFILE >>\$MAKEFILE" >>$op_out_file
else
  echo "mkrule distclean \$MAKEFILE >>\$MAKEFILE" >>$op_out_file
fi
echo "" >>$op_out_file

cat <<"TOP_EOF" >>$op_out_file
################################################################################
# COMMON BUILD VARIABLES
#
# Common settings for compilation and linking
#
TOP_EOF
if test -n "$have_src"; then
  print_nl=
  if test -n "$common_static_dir"; then
    echo "COMMON_STATIC_DIR=\"$common_static_dir\"" >>$op_out_file
    print_nl=1
  fi
  if test -n "$common_pic_dir"; then
    echo "COMMON_PIC_DIR=\"$common_pic_dir\"" >>$op_out_file
    print_nl=1
  fi
  test x$print_nl = x1 && echo "" >>$op_out_file
fi

if test -n "$op_add_cflags"; then
  echo "ADD_CFLAGS=\"$op_add_cflags\"" >>$op_out_file
fi
if test -n "$op_add_cxxflags"; then
  echo "ADD_CXXFLAGS=\"$op_add_cxxflags\"" >>$op_out_file
fi
if test -n "$op_add_ldflags"; then
  echo "ADD_LDFLAGS=\"$op_add_ldflags\"" >>$op_out_file
fi
if test -n "$op_add_src"; then
  echo "ADD_SRC=\"$op_add_src\"" >>$op_out_file
fi
if test -n "$op_add_obj"; then
  echo "ADD_OBJ=\"$op_add_obj\"" >>$op_out_file
fi
if test -n "$op_add_dobj"; then
  echo "ADD_DOBJ=\"$op_add_dobj\"" >>$op_out_file
fi


cat <<"TOP_EOF" >>$op_out_file

################################################################################
# OBJECTS
#
# Compile C/C++ sources
#
# ---OPTIONAL CODE--------------------------------------------------------------
#   # Set module specific C flags
#   cflags=""
#
#   # Set module specific C++ flags
#   cxxflags=""
#
#   # Set output directory for C/C++ compiled objects
#   COMMON_STATIC_DIR="_static"
#
#   # Set output directory for C/C++ compiled objects for shared library
#   COMMON_PIC_DIR="_pic"
#
#   # Set sources
#   prog_sources="file1.c file2.c file3.c"
#   lib_sources="file1.c file2.c file3.c"
#
#   # Compile sources
#   mkrule obj -cflags="$cflags" -srcdir $SRCDIR -src $prog_sources -d $COMMON_STATIC_DIR >>$MAKEFILE
#   mkrule obj -cflags="$cflags" -srcdir $SRCDIR -src $lib_sources -d $COMMON_STATIC_DIR >>$MAKEFILE
#   mkrule obj -pic -cflags="$cflags" -srcdir $SRCDIR -src $lib_sources -d $COMMON_PIC_DIR >>$MAKEFILE

TOP_EOF

common_static_objects=
common_pic_objects=
for prefix in $prefix_list; do
  eval target_src=\$target_${prefix}_src
  eval target_obj=\$target_${prefix}_obj
  eval target_dobj=\$target_${prefix}_dobj
  eval target_cflags=\$target_${prefix}_cflags
  eval target_cxxflags=\$target_${prefix}_cxxflags
  eval target_type=\$target_${prefix}_type
  eval target_objdir=\$target_${prefix}_objdir
  eval target_objdir_pic=\$target_${prefix}_objdir_pic
  eval target_have_cxx=\$target_${prefix}_have_cxx
  eval target_obj_common=\$target_${prefix}_common

  if test $prefix = "_"; then
    prefix_=
  else
    prefix_=`echo -n "${prefix}_" | tr 'A-Z' 'a-z'`
  fi

  if test x$target_have_cxx = x1; then
    if test -n "$op_add_cxxflags"; then
      echo "${prefix_}cxxflags=\"\$ADD_CXXFLAGS $target_cxxflags\"" >>$op_out_file
    else
      echo "${prefix_}cxxflags=\"$target_cxxflags\"" >>$op_out_file
    fi
  else
    if test -n "$op_add_cflags"; then
      echo "${prefix_}cflags=\"\$ADD_CFLAGS $target_cflags\"" >>$op_out_file
    else
      echo "${prefix_}cflags=\"$target_cflags\"" >>$op_out_file
    fi
  fi

  case $target_type in
    prog|tlib|xlib|tobj|xobj)
      if test -n "$target_objdir"; then
        echo "${prefix_}static_dir=\"$target_objdir\"" >>$op_out_file
        objdir_var="${prefix_}static_dir"
        eval target_${prefix}_objdir_var=\$objdir_var
      else
        objdir_var="COMMON_STATIC_DIR"
        eval target_${prefix}_objdir_var=\$objdir_var
      fi
      ;;
  esac
  case $target_type in
    dlib|xlib|dobj|xobj)
      if test -n "$target_objdir_pic"; then
        echo "${prefix_}pic_dir=\"$target_objdir_pic\"" >>$op_out_file
        objdir_pic_var="${prefix_}pic_dir"
        eval target_${prefix}_objdir_pic_var=\$objdir_pic_var
      else
        objdir_pic_var="COMMON_PIC_DIR"
        eval target_${prefix}_objdir_pic_var=\$objdir_pic_var
      fi
      ;;
  esac

  target_src=`echo -n "$target_src" | sed 's/^ *//' | sed 's/ *$//' | sed 's/  */ /g'`
  if test -n "$op_add_src"; then
    echo "${prefix_}sources=\"\$ADD_SRC $target_src\"" >>$op_out_file
  else
    echo "${prefix_}sources=\"$target_src\"" >>$op_out_file
  fi
  if test -z "$target_src$op_add_src"; then
    comment_out="# "
  else
    comment_out=
  fi
  case $target_type in
    prog|tlib|xlib|tobj|xobj)
      if test -z "$target_have_cxx"; then
        echo "${comment_out}mkrule obj -cflags=\"\$${prefix_}cflags\" -srcdir \$SRCDIR -src \$${prefix_}sources -d \$$objdir_var >>\$MAKEFILE" >>$op_out_file
      else
        echo "${comment_out}mkrule obj -c++ -cflags=\"\$${prefix_}cxxflags\" -srcdir \$SRCDIR -src \$${prefix_}sources -d \$$objdir_var >>\$MAKEFILE" >>$op_out_file
      fi
      if test -n "$target_obj"; then
        echo "${prefix_}ext_objects=\"$target_obj\"" >>$op_out_file
        echo "${prefix_}objects=\`src2obj -o \$$objdir_var \$${prefix_}sources\`\"\$${prefix_}ext_objects\"" >>$op_out_file
      else
        echo "${prefix_}objects=\`src2obj -o \$$objdir_var \$${prefix_}sources\`" >>$op_out_file
      fi
      if test x$target_obj_common = x1; then
        common_static_objects="$common_static_objects \$${prefix_}objects $target_obj"
      fi
      ;;
  esac
  case $target_type in
    dlib|xlib|dobj|xobj)
      if test -z "$target_have_cxx"; then
        echo "${comment_out}mkrule obj -pic -cflags=\"\$${prefix_}cflags\" -srcdir \$SRCDIR -src \$${prefix_}sources -d \$$objdir_pic_var >>\$MAKEFILE" >>$op_out_file
      else
        echo "${comment_out}mkrule obj -c++ -pic -cflags=\"\$${prefix_}cxxflags\" -srcdir \$SRCDIR -src \$${prefix_}sources -d \$$objdir_pic_var >>\$MAKEFILE" >>$op_out_file
      fi
      if test -n "$target_dobj"; then
        echo "${prefix_}ext_pic_objects=\"$target_dobj\"" >>$op_out_file
        echo "${prefix_}pic_objects=\`src2obj -o \$$objdir_pic_var \$${prefix_}sources\`\"\$${prefix_}ext_pic_objects\"" >>$op_out_file
      else
        echo "${prefix_}pic_objects=\`src2obj -o \$$objdir_pic_var \$${prefix_}sources\`" >>$op_out_file
      fi
      if test x$target_obj_common = x1; then
        common_pic_objects="$common_pic_objects \$${prefix_}pic_objects $target_dobj"
      fi
      ;;
  esac
  echo "" >>$op_out_file
done

common_static_objects=`echo -n "$common_static_objects" | sed 's/^ *//' | sed 's/ *$//'`
common_pic_objects=`echo -n "$common_pic_objects" | sed 's/^ *//' | sed 's/ *$//'`

print_nl=
if test -n "$common_static_objects"; then
  cat <<TOP_EOF >>$op_out_file
COMMON_STATIC_OBJECTS="$common_static_objects"
TOP_EOF
  print_nl=1
fi
if test -n "$common_pic_objects"; then
  cat <<TOP_EOF >>$op_out_file
COMMON_PIC_OBJECTS="$common_pic_objects"
TOP_EOF
  print_nl=1
fi
test x$print_nl = x1 && echo "" >>$op_out_file


cat <<"TOP_EOF" >>$op_out_file
################################################################################
# PROGRAMS
#
# Link C/C++ programs
#
# ---OPTIONAL CODE--------------------------------------------------------------
#   # Set up program options
#   prog_name="my_prog"
#   prog_ldflags=""
#
#   Link C program
#   mkrule prog -all -install -ldflags="$prog_ldflags" -n $prog_name -obj $objects >>$MAKEFILE
#
#   Link C++ program
#   mkrule prog -all -install -c++ -ldflags="$prog_ldflags" -n $prog_name -obj $objects >>$MAKEFILE

TOP_EOF
for prefix in $prefix_list; do
  eval target_src=\$target_${prefix}_src
  eval target_obj=\$target_${prefix}_obj
  eval target_name=\$target_${prefix}_name
  eval target_type=\$target_${prefix}_type
  eval target_ldflags=\$target_${prefix}_ldflags
  eval target_no_install=\$target_${prefix}_no_install
  eval target_have_cxx=\$target_${prefix}_have_cxx
  eval target_objdir_var=\$target_${prefix}_objdir_var

  if test $target_type = prog; then
    if test $prefix = "_"; then
      prefix_=
    else
      prefix_=`echo -n "${prefix}_" | tr 'A-Z' 'a-z'`
    fi

    echo "${prefix_}name="$target_name"" >>$op_out_file
    if test -n "$add_ldflags"; then
      echo "${prefix_}ldflags=\"\$ADD_LDFLAGS $target_ldflags\"" >>$op_out_file
    else
      echo "${prefix_}ldflags=\"$target_ldflags\"" >>$op_out_file
    fi

    add_params="-all"
    if test x$target_no_install = x; then
      add_params="$add_params -install"
    fi
    if test x$target_have_cxx = x1; then
      add_params="$add_params -c++"
    fi

    obj_params=
    if test -n "$common_static_objects$op_add_obj"; then
      if test -n "$common_static_objects"; then
        obj_params="\$common_static_objects"
      fi
      if test -n "$op_add_obj"; then
        obj_params="$obj_params \$ADD_OBJ"
      fi
    fi

    if test -z "$target_src$op_add_src$target_obj$op_add_obj$common_static_obj"; then
      comment_out="# "
    else
      comment_out=
    fi
    echo "${comment_out}mkrule prog $add_params -ldflags=\"\$${prefix_}ldflags\" -n \$${prefix_}name -obj \$${prefix_}objects $obj_params >>\$MAKEFILE" >>$op_out_file
    echo "" >>$op_out_file
  fi
done

cat <<"TOP_EOF" >>$op_out_file
################################################################################
# LIBRARIES
#
# Link C/C++ libraries
#
# ---OPTIONAL CODE--------------------------------------------------------------
#   # Set up library options
#   lib_name="my_lib"
#   lib_version="1.0.0"
#   lib_ldflags=""
#
#   # Link C library
#   mkrule lib -all -install -static -n $lib_name -ver $lib_version -obj $objects >>$MAKEFILE
#   mkrule lib -all -install -shared -ldflags="$lib_ldflags" -n $lib_name -ver $lib_version -obj $pic_objects >>$MAKEFILE
#
#   # Link C++ library
#   mkrule lib -c++ -all -install -static -n $lib_name -ver $lib_version -obj $objects >>$MAKEFILE
#   mkrule lib -c++ -all -install -shared -ldflags="$lib_ldflags" -n $lib_name -ver $lib_version -obj $pic_objects >>$MAKEFILE

TOP_EOF

for prefix in $prefix_list; do
  eval target_src=\$target_${prefix}_src
  eval target_obj=\$target_${prefix}_obj
  eval target_dobj=\$target_${prefix}_dobj
  eval target_name=\$target_${prefix}_name
  eval target_type=\$target_${prefix}_type
  eval target_ldflags=\$target_${prefix}_ldflags
  eval target_no_install=\$target_${prefix}_no_install
  eval target_have_cxx=\$target_${prefix}_have_cxx
  eval target_version=\$target_${prefix}_ver
  eval target_objdir_var=\$target_${prefix}_objdir_var
  eval target_objdir_pic_var=\$target_${prefix}_objdir_pic_var

  if test $target_type = tlib || test $target_type = dlib || test $target_type = xlib; then
    if test $prefix = "_"; then
      prefix_=
    else
      prefix_=`echo -n "${prefix}_" | tr 'A-Z' 'a-z'`
    fi

    cat <<TOP_EOF >>$op_out_file
${prefix_}name="$target_name"
${prefix_}version="$target_version"
TOP_EOF
    if test -n "$add_ldflags"; then
      echo "${prefix_}ldflags=\"\$ADD_LDFLAGS $target_ldflags\"" >>$op_out_file
    else
      echo "${prefix_}ldflags=\"$target_ldflags\"" >>$op_out_file
    fi

    add_params="-all"
    if test x$target_no_install = x; then
      add_params="$add_params -install"
    fi
    if test x$target_have_cxx = x1; then
      add_params="$add_params -c++"
    fi

    tobj_params=
    if test -n "$common_static_objects$op_add_obj"; then
      tobj_params="-obj"
      if test -n "$common_static_objects"; then
        tobj_params="$tobj_params \$common_static_objects"
      fi
      if test -n "$op_add_obj"; then
        tobj_params="$tobj_params \$ADD_OBJ"
      fi
    fi
    dobj_params=
    if test -n "$common_pic_objects$op_add_dobj"; then
      dobj_params="-obj"
      if test -n "$common_pic_objects"; then
        dobj_params="$dobj_params \$common_pic_objects"
      fi
      if test -n "$op_add_dobj"; then
        dobj_params="$dobj_params \$ADD_DOBJ"
      fi
    fi

    if test -z "$target_src$op_add_src$target_obj$op_add_obj$common_static_obj"; then
      comment_out="# "
    else
      comment_out=
    fi
    if test $target_type = tlib || test $target_type = xlib; then
      echo "${comment_out}mkrule lib $add_params -static -ldflags=\"\$${prefix_}ldflags\" -n \$${prefix_}name -ver \$${prefix_}version -obj \$${prefix_}objects $tobj_params >>\$MAKEFILE" >>$op_out_file
    fi

    if test -z "$target_src$op_add_src$target_dobj$op_add_dobj$common_pic_obj"; then
      comment_out="# "
    else
      comment_out=
    fi
    if test $target_type = dlib || test $target_type = xlib; then
      echo "${comment_out}mkrule lib $add_params -shared -ldflags=\"\$${prefix_}ldflags\" -n \$${prefix_}name -ver \$${prefix_}version -obj \$${prefix_}pic_objects $dobj_params >>\$MAKEFILE" >>$op_out_file
    fi
    echo "" >>$op_out_file
  fi
done

cat <<TOP_EOF >>$op_out_file
################################################################################
# CUSTOM CODE
#
# Put your custom code here

TOP_EOF

cat <<"TOP_EOF" >>$op_out_file
################################################################################
# INSTALLATION FILES
#
# Install files by 'make install'
#
# ---OPTIONAL CODE--------------------------------------------------------------
#   # Set up corresponding variables and generate installation rules
#   mkrule install bin $install_bin >>$MAKEFILE
#   mkrule install sbin $install_sbin >>$MAKEFILE
#   mkrule install lib $install_lib >>$MAKEFILE
#   mkrule install libexec $install_libexec >>$MAKEFILE
#   mkrule install inc $install_inc >>$MAKEFILE
#   mkrule install man0 $install_man0 >>$MAKEFILE
#   mkrule install man1 $install_man1 >>$MAKEFILE
#   mkrule install man2 $install_man2 >>$MAKEFILE
#   mkrule install man3 $install_man3 >>$MAKEFILE
#   mkrule install man4 $install_man4 >>$MAKEFILE
#   mkrule install man5 $install_man5 >>$MAKEFILE
#   mkrule install man6 $install_man6 >>$MAKEFILE
#   mkrule install man7 $install_man7 >>$MAKEFILE
#   mkrule install man8 $install_man8 >>$MAKEFILE
#   mkrule install man9 $install_man9 >>$MAKEFILE
#   mkrule install doc $install_doc >>$MAKEFILE
#   mkrule install data $install_share >>$MAKEFILE
#   mkrule install etc $install_etc >>$MAKEFILE
TOP_EOF
if test x$have_custom_inst_stuff = x1; then
  if test -n "$op_inst_bin"; then
    op_inst_bin=`echo -n "$op_inst_bin" | sed 's/^ *//'`
    echo "install_bin=\"$op_inst_bin\"" >>$op_out_file
    dist_files="$dist_files \$install_bin"
  fi
  if test -n "$op_inst_sbin"; then
    op_inst_sbin=`echo -n "$op_inst_sbin" | sed 's/^ *//'`
    echo "install_sbin=\"$op_inst_sbin\"" >>$op_out_file
    dist_files="$dist_files \$install_sbin"
  fi
  if test -n "$op_inst_lib"; then
    op_inst_lib=`echo -n "$op_inst_lib" | sed 's/^ *//'`
    echo "install_lib=\"$op_inst_lib\"" >>$op_out_file
    dist_files="$dist_files \$install_lib"
  fi
  if test -n "$op_inst_libexec"; then
    op_inst_libexec=`echo -n "$op_inst_libexec" | sed 's/^ *//'`
    echo "install_libexec=\"$op_inst_libexec\"" >>$op_out_file
    dist_files="$dist_files \$install_libexec"
  fi
  if test -n "$op_inst_inc"; then
    op_inst_inc=`echo -n "$op_inst_inc" | sed 's/^ *//'`
    echo "install_inc=\"$op_inst_inc\"" >>$op_out_file
    dist_files="$dist_files \$install_inc"
  fi
  if test -n "$op_inst_man0"; then
    op_inst_man0=`echo -n "$op_inst_man0" | sed 's/^ *//'`
    echo "install_man0=\"$op_inst_man0\"" >>$op_out_file
    dist_files="$dist_files \$install_man0"
  fi
  if test -n "$op_inst_man1"; then
    op_inst_man1=`echo -n "$op_inst_man1" | sed 's/^ *//'`
    echo "install_man1=\"$op_inst_man1\"" >>$op_out_file
    dist_files="$dist_files \$install_man1"
  fi
  if test -n "$op_inst_man2"; then
    op_inst_man2=`echo -n "$op_inst_man2" | sed 's/^ *//'`
    echo "install_man2=\"$op_inst_man2\"" >>$op_out_file
    dist_files="$dist_files \$install_man2"
  fi
  if test -n "$op_inst_man3"; then
    op_inst_man3=`echo -n "$op_inst_man3" | sed 's/^ *//'`
    echo "install_man3=\"$op_inst_man3\"" >>$op_out_file
    dist_files="$dist_files \$install_man3"
  fi
  if test -n "$op_inst_man4"; then
    op_inst_man4=`echo -n "$op_inst_man4" | sed 's/^ *//'`
    echo "install_man4=\"$op_inst_man4\"" >>$op_out_file
    dist_files="$dist_files \$install_man4"
  fi
  if test -n "$op_inst_man5"; then
    op_inst_man5=`echo -n "$op_inst_man5" | sed 's/^ *//'`
    echo "install_man5=\"$op_inst_man5\"" >>$op_out_file
    dist_files="$dist_files \$install_man5"
  fi
  if test -n "$op_inst_man6"; then
    op_inst_man6=`echo -n "$op_inst_man6" | sed 's/^ *//'`
    echo "install_man6=\"$op_inst_man6\"" >>$op_out_file
    dist_files="$dist_files \$install_man6"
  fi
  if test -n "$op_inst_man7"; then
    op_inst_man7=`echo -n "$op_inst_man7" | sed 's/^ *//'`
    echo "install_man7=\"$op_inst_man7\"" >>$op_out_file
    dist_files="$dist_files \$install_man7"
  fi
  if test -n "$op_inst_man8"; then
    op_inst_man8=`echo -n "$op_inst_man8" | sed 's/^ *//'`
    echo "install_man8=\"$op_inst_man8\"" >>$op_out_file
    dist_files="$dist_files \$install_man8"
  fi
  if test -n "$op_inst_man9"; then
    op_inst_man9=`echo -n "$op_inst_man9" | sed 's/^ *//'`
    echo "install_man9=\"$op_inst_man9\"" >>$op_out_file
    dist_files="$dist_files \$install_man9"
  fi
  if test -n "$op_inst_doc"; then
    op_inst_doc=`echo -n "$op_inst_doc" | sed 's/^ *//'`
    echo "install_doc=\"$op_inst_doc\"" >>$op_out_file
    dist_files="$dist_files \$install_doc"
  fi
  if test -n "$op_inst_share"; then
    op_inst_share=`echo -n "$op_inst_share" | sed 's/^ *//'`
    echo "install_share=\"$op_inst_share\"" >>$op_out_file
    dist_files="$dist_files \$install_share"
  fi
  if test -n "$op_inst_etc"; then
    op_inst_etc=`echo -n "$op_inst_etc" | sed 's/^ *//'`
    echo "install_etc=\"$op_inst_etc\"" >>$op_out_file
    dist_files="$dist_files \$install_etc"
  fi

  if test -n "$op_inst_bin"; then
    echo "mkrule install bin \$install_bin >>\$MAKEFILE" >>$op_out_file
  fi
  if test -n "$op_inst_sbin"; then
    echo "mkrule install sbin \$install_sbin >>\$MAKEFILE" >>$op_out_file
  fi
  if test -n "$op_inst_lib"; then
    echo "mkrule install lib \$install_lib >>\$MAKEFILE" >>$op_out_file
  fi
  if test -n "$op_inst_libexec"; then
    echo "mkrule install libexec \$install_libexec >>\$MAKEFILE" >>$op_out_file
  fi
  if test -n "$op_inst_inc"; then
    echo "mkrule install inc \$install_inc >>\$MAKEFILE" >>$op_out_file
  fi
  if test -n "$op_inst_man0"; then
    echo "mkrule install man0 \$install_man0 >>\$MAKEFILE" >>$op_out_file
  fi
  if test -n "$op_inst_man1"; then
    echo "mkrule install man1 \$install_man1 >>\$MAKEFILE" >>$op_out_file
  fi
  if test -n "$op_inst_man2"; then
    echo "mkrule install man2 \$install_man2 >>\$MAKEFILE" >>$op_out_file
  fi
  if test -n "$op_inst_man3"; then
    echo "mkrule install man3 \$install_man3 >>\$MAKEFILE" >>$op_out_file
  fi
  if test -n "$op_inst_man4"; then
    echo "mkrule install man4 \$install_man4 >>\$MAKEFILE" >>$op_out_file
  fi
  if test -n "$op_inst_man5"; then
    echo "mkrule install man5 \$install_man5 >>\$MAKEFILE" >>$op_out_file
  fi
  if test -n "$op_inst_man6"; then
    echo "mkrule install man6 \$install_man6 >>\$MAKEFILE" >>$op_out_file
  fi
  if test -n "$op_inst_man7"; then
    echo "mkrule install man7 \$install_man7 >>\$MAKEFILE" >>$op_out_file
  fi
  if test -n "$op_inst_man8"; then
    echo "mkrule install man8 \$install_man8 >>\$MAKEFILE" >>$op_out_file
  fi
  if test -n "$op_inst_man9"; then
    echo "mkrule install man9 \$install_man9 >>\$MAKEFILE" >>$op_out_file
  fi
  if test -n "$op_inst_doc"; then
    echo "mkrule install doc \$install_doc >>\$MAKEFILE" >>$op_out_file
  fi
  if test -n "$op_inst_share"; then
    echo "mkrule install data \$install_share >>\$MAKEFILE" >>$op_out_file
  fi
  if test -n "$op_inst_etc"; then
    echo "mkrule install etc \$install_etc >>\$MAKEFILE" >>$op_out_file
  fi
fi

cat <<TOP_EOF >>$op_out_file

################################################################################
# DIST
#
# Create distribution tarball by 'make dist'

TOP_EOF
src_dist_files=
if test -n "$all_sources"; then
  src_dist_files="$src_dist_files $all_sources"
fi
src_dist_files=`echo -n "$src_dist_files" | sed 's/^ *//' | tr ' ' '\n' | sort | uniq | tr '\n' ' ' | sed 's/ *$//'`
dist_files="$dist_files $src_dist_files"

if test "$op_srcroot" = "."; then
  if test -d formake; then
    opt_fscripts="abspath cfront cstem cstem+ install ldlshell ldlwrap libro src2obj mkdep optool syscap"
    formake_dist=
    for script in $opt_fscripts; do
      if test -f formake/$script; then
        formake_dist="$formake_dist formake/$script"
      fi
    done
    formake_dist=`echo -n "$formake_dist" | sed 's/^ *//'`
    dist_files="$formake_dist $dist_files"
  fi
  dist_files="configure formake/relpath formake/mkrule $dist_files"
fi

echo "DIST_FILES=\"$dist_files\"" >>$op_out_file

if test "$op_srcroot" = "."; then
  echo "mkrule dist -n \$PACKAGE_NAME -ver \$PACKAGE_VERSION -buildroot \$BUILDROOT -srcdir \$SRCDIR -f \$DIST_FILES >>\$MAKEFILE || exit 1" >>$op_out_file
else
  echo "mkrule dist -buildroot \$BUILDROOT -srcdir \$SRCDIR -f \$DIST_FILES >>\$MAKEFILE || exit 1" >>$op_out_file
fi
echo "" >>$op_out_file


cat <<"TOP_EOF" >>$op_out_file
################################################################################
# SUBDIRS
#
# Build subdirectories
#
# ---OPTIONAL CODE--------------------------------------------------------------
#   # Generate rules to build subdirectories
#   mkrule subdir -all -install -clean -dist -distclean -d $SUBDIRS >>$MAKEFILE
#
#   # Run mkmf in subdirectories
#   for dir in $SUBDIRS; do
#     cd $ABS_BUILDDIR
#     test -d $dir || mkdir -p $dir
#     cd $dir; $ABS_BUILDDIR/$SRCDIR/$dir/mkmf || exit 1
#   done

TOP_EOF
if test -n "$op_subdirs"; then
  cat <<"TOP_EOF" >>$op_out_file
mkrule subdir -all -install -clean -dist -distclean -d $SUBDIRS >>$MAKEFILE
for dir in $SUBDIRS; do
  cd $ABS_BUILDDIR
  test -d $dir || mkdir -p $dir
  cd $dir; $ABS_BUILDDIR/$SRCDIR/$dir/mkmf || exit 1
done

TOP_EOF
fi

cat <<"TOP_EOF" >>$op_out_file
################################################################################
# DONE
echo "$SUBDIR/$SCRIPT: DONE"

TOP_EOF


# ---final output---------------------------
chmod +x $op_out_file
echo "created script $op_out_file"


#!/bin/sh
#
# pofig version 6
#
# Author: Oleksiy Chernyavskyy <ochern@rocketmail.com>
#

# NOTE: if kernel name and OS name are same than config_is_<name> means OS name. If some OSes explore kernel that has
# the name as it's native OS than for that custom OSes config_is_<name> is not used for indicating kernel. For example,
# there are some OSes based on FreeBSd kernel. We should not indicated kernel name with prop_os_freebsd for DragonflyBSD,
# for example, since this name indicates FreeBSD OS name.

# NOTE: Linux is a kernel name. It is not OS name. Generally all GNU-based Linux distributions are GNU/Linux OS. So this is
# the name of linux kernel based OS. Since there is no OS named Linux we can use prop_kernel_linux to indicate kernel name.


script_name=`basename $0`
script_dir=`dirname $0`

################################################################################
# LOAD CONFIG
PATH=$FORMAKE:$PATH
POFIG=
if test -f $script_dir/config.rc; then
  . $script_dir/config.rc
fi
test -n "$FORMAKE_POFIG" && POFIG=$FORMAKE_POFIG
if test -n "$POFIG" && test -z "$POFIG_REDIRECT"; then
  export POFIG_REDIRECT=1
  $POFIG "$@"
  ret=$?
  if test $ret -ne 64; then
    exit $ret
  fi
fi
################################################################################

print_help() {
cat <<EOF >&2
portable tool to figure out base system properties
$script_name [options]
 -os        print OS
 -osver     print OS version
 -kernel    print kernel
 -kernver   print kernel version
 -distro    print distro
 -distver   print distro version
 -arch      print architecture
 -id        print system id
EOF
}

gen_system_id() {
  uname_n=`(uname -n) 2>/dev/null` || uname_n=unknown
  uname_m=`(uname -m) 2>/dev/null` || uname_m=unknown
  uname_r=`(uname -r) 2>/dev/null` || uname_r=unknown
  uname_s=`(uname -s) 2>/dev/null` || uname_s=unknown
  uname_v=`(uname -v) 2>/dev/null` || uname_v=unknown
  uname_p=`(uname -p) 2>/dev/null` || uname_p=unknown
  uname_i=`(uname -i) 2>/dev/null` || uname_i=unknown
  uname_o=`(uname -o) 2>/dev/null` || uname_o=unknown
  arch=`(arch) 2>/dev/null` || arch=unknown
  host_name=`(hostname) 2>/dev/null` || host_name=unknown
  host_id=`(hostid) 2>/dev/null` || host_id=unknown
  lsb_release_a=`(lsb_release -a) 2>/dev/null` || lsb_release_a=unknown
  
  _system_id="${uname_n}${uname_m}${uname_r}${uname_s}${uname_v}${uname_p}${uname_i}${uname_o}${arch}${host_name}${host_id}${lsb_release_a}"
  system_id=`echo "$_system_id" | tr -d '\n\t ' 2>/dev/null | sed 's/\///g'` || system_id=$_system_id
}


perform_probe() {
  config_os=unknown
  config_os_version=unknown
  config_kernel=unknown
  config_kernel_version=unknown
  config_distro=unknown
  config_distro_version=unknown
  config_arch=unknown
  config_system_id=unknown

  gen_system_id
  config_system_id=$system_id

  uname >/dev/null 2>&1
  if test $? -eq 127; then
    return
  fi

  uname_m=`(uname -m) 2>/dev/null` || uname_m=unknown
  uname_r=`(uname -r) 2>/dev/null` || uname_r=unknown
  uname_s=`(uname -s) 2>/dev/null` || uname_s=unknown
  uname_v=`(uname -v) 2>/dev/null` || uname_v=unknown
  uname_p=`(uname -p) 2>/dev/null` || uname_p=unknown

  if test "x$uname_m" = x; then
    uname_m=unknown
  fi
  if test "x$uname_r" = x; then
    uname_r=unknown
  fi
  if test "x$uname_s" = x; then
    uname_s=unknown
  fi
  if test "x$uname_v" = x; then
    uname_v=unknown
  fi
  if test "x$uname_p" = x; then
    uname_p=unknown
  fi

  uname_s_lc=`echo "$uname_s" | tr [A-Z] [a-z]`

  case "$uname_s_lc" in
    netbsd)
      config_os=netbsd
      case $uname_p in
        alpha)
          config_arch=alpha
          ;;
        arm)
          config_arch=arm
          ;;
        hppa)
          config_arch=hppa
          ;;
        mipseb | mipsel)
          config_arch=mips
          ;;
        powerpc)
          config_arch=powerpc
          ;;
        sh5*)
          config_arch=superh
          ;;
        sh3eb | sh3el)
          config_arch=superh
          ;;
        sparc)
          config_arch=sparc
          ;;
        sparc64)
          config_arch=sparc64
          ;;
        x86_64)
          config_arch=x86_64
          ;;
      esac
      ;;
    bitrig)
      config_os=bitrig
      ;;
    openbsd)
      config_os=openbsd
      ;;
    mirbsd)
      config_os=mirbsd
      case "$uname_m" in
        macppc)
          config_arch=powerpc
          ;;
      esac
      ;;
    amigaos)
      config_os=amiga
      ;;
    morphos)
      config_os=morphos
      ;;
    z/VM)
      config_os=zvm
      config_arch=zarch
      ;;
    riscos)
      config_os=riscos
      case "$uname_m" in
        arm*)
          config_arch=arm
          ;;
      esac
      ;;
    sunos)
      case "$uname_m:$uname_r" in
        sun4*:5.* | tadpole*:5.* | sun4*:6*)
          config_os=solaris
          config_arch=sparc
          ;;
        prep*:5.*)
          config_arch=powerpc
          config_os=solaris
          ;;
      esac

      case "$uname_r" in
        5.*)
          config_os_vmajor=`echo $uname_r | /usr/bin/sed 's/.*\.\([0-9]*\)/\1/g'`
          ;;
      esac

      case "$uname_p" in
        sparc)
          config_arch=sparc
          ;;
      esac
      ;;
    irix*)
      config_os=irix
      config_arch=mips
      case "$uname_s_lc" in
        irix64)
          config_arch=mips64
          ;;
      esac

      case "$uname_r" in
        *.*)
          config_os_vmajor=`echo $uname_r | sed 's/\([0-9]*\)\..*/\1/g'`
          config_os_vminor=`echo $uname_r | sed 's/.*\.\([0-9]*\)/\1/g'`
          ;;
      esac
      ;;
    aix)
      config_os=aix
      case "$uname_v" in
        [0-9] | [0-9][0-9])
          config_os_vmajor=$uname_v
          ;;
      esac
      case "$uname_r" in
        [0-9] | [0-9][0-9])
          config_os_vminor=$uname_r
          ;;
      esac

      case "$uname_p" in
        powerpc)
          config_arch=powerpc
          ;;
      esac

      case "$uname_m" in
        ia64)
          config_arch=ia64
          ;;
      esac
      ;;
    hp-ux)
      config_os=hpux

      case "${uname_m}" in
        ia64)
          config_arch=ia64
          ;;
	  esac
      ;;
    freebsd)
      config_os=freebsd
      case ${uname_p} in
        amd64)
          config_arch=x86_64
          ;;
      esac
      ;;
    cygwin)
      config_os=cygwin
      case "$uname_m" in
        amd64 | x86_64)
          config_arch=x86_64
          ;;
        i*)
          config_arch=x86
          ;;
        p*)
          config_arch=powerpc
          ;;
      esac
      ;;
    mingw64)
      config_os=mingw64
      ;;
    mingw*)
      config_os=mingw
      ;;
    windows32*)
      config_os=mingw
      case "$uname_m" in
        i*)
          config_arch=x86
          ;;
      esac
      ;;
    interix)
      config_os=interix
      case "$uname_m" in
        x86)
          config_arch=x86
          ;;
        authenticamd | genuineintel | EM64T)
          config_arch=x86_64
          ;;
        IA64)
          config_arch=ia64
          ;;
      esac
      ;;
    windows_95 | windows_98 | windows_nt)
      case "$uname_m" in
        8664)
          config_os=mks
          config_arch=x86_64
          ;;
      esac
      ;;
    minix)
      config_os=minix
      case "$uname_m" in
        i*86)
          config_arch=x86
          ;;
      esac
      ;;
    linux)
      config_kernel=linux
      uname_o=`uname -o 2>/dev/null`
      case $uname_o in
        GNU/Linux)
          config_os=gnulinux
          ;;
      esac

      uname_r=`uname -r 2>/dev/null`
      kernel_version=`uname -r 2>/dev/null | sed 's/\([0-9]*\.[0-9]*\.[0-9]*\).*/\1/'`
      config_kernel_vmajor=`echo $kernel_version | sed 's/\([0-9]*\)\..*/\1/'`
      config_kernel_vminor=`echo $kernel_version | sed 's/^.*\.\([0-9]*\)\.[0-9]*.*/\1/'`
      config_kernel_vrevision=`echo $kernel_version | sed 's/^.*\.[0-9]*\.\([0-9]*\).*/\1/'`

      case $uname_m in
        aarch64 | aarch64_be)
          config_arch=arm64
          ;;
        alpha)
          config_arch=alpha
          ;;
        arc | arceb)
          config_arch=arc
          ;;
        arm*)
          config_arch=arm
          ;;
        avr32*)
          config_arch=avr32
          ;;
        cris | crisv32)
          config_arch=cris
          ;;
        frv)
          config_arch=frv
          ;;
        hexagon)
          config_arch=hexagon
          ;;
        i686)
          config_arch=x86
          ;;
        ia64)
          config_arch=ia64
          ;;
        m32r*)
          config_arch=m32r
          ;;
        mips)
          config_arch=mips
          ;;
        mips64)
          config_arch=mips64
          ;;
        or1k|or32)
          config_arch=or1k
          ;;
        padre)
          config_arch=sparc
          ;;
        parisc64 | hppa64)
          config_arch=hppa64
          ;;
        parisc | hppa)
          config_arch=hppa
          ;;
        ppc64 | ppc64le)
          config_arch=powerpc
          ;;
        ppc | ppcle)
          config_arch=powerpc
          ;;
        sh64*)
          config_arch=superh
          ;;
        sh*)
          config_arch=superh
          ;;
        sparc)
          config_arch=sparc
          ;;
        sparc64)
          config_arch=sparc64
          ;;
        tile*)
          config_arch=tile
          ;;
        x86_64)
          config_arch=x86_64
          ;;
        xtensa*)
          config_arch=xtensa
          ;;
      esac

      if test -f /etc/gentoo-release; then
        distro_version=`cat /etc/gentoo-release | sed 's/.* release *\([0-9.][0-9.]*\).*/\1/'`
        config_distro=gentoo
        config_distro_vmajor=`echo $distro_version | sed 's/\([0-9]*\)\..*/\1/'`
        config_distro_vminor=`echo $distro_version | sed 's/^.*\.\([0-9]*\).*/\1/'`
      fi
      ;;
    syllable)
      config_os=syllable
      case "$uname_m" in
        i*86)
          config_arch=x86
          ;;
      esac
      ;;
    lynxos)
      config_os=lynxos
      case "$uname_m:$uname_r" in
        i*86:*)
          config_arch=x86
          ;;
        TSUNAMI:2.*)
          config_arch=sparc
          ;;
        PowerPC:2.* | PowerPC:3.[01]* | PowerPC:4.[02]*)
          config_arch=powerpc
          ;;
      esac
      ;;
    haiku)
      config_os=haiku
      case "$uname_m" in
        x86_64)
          config_arch=x86_64
          ;;
      esac
      ;;
    darwin)
      config_os=darwin
      ;;
    procnto* | QNX)
      config_os=qnx

      if test "$uname_p" = "x86"; then
        config_arch=x86
      fi
      ;;
    dragonfly)
      config_os=dragonfly
      ;;
    aros)
      config_os=aros
      case "$uname_m" in
        i*86)
          config_arch=x86
        ;;
      esac
      ;;
    vmkernel)
      config_os=esx
      case "$uname_m" in
        x86_64)
          config_arch=x86_64
        ;;
      esac
      ;;
  esac


  if test -n "$config_os_vmajor"; then
    config_os_version=$config_os_vmajor
    if test -n "$config_os_vminor"; then
      config_os_version=${config_os_version}.${config_os_vminor}
      if test -n "$config_os_vrevision"; then
        config_os_version="${config_os_version}.${config_os_vrevision}"
      fi
    fi
  fi

  if test -n "$config_kernel_vmajor"; then
    config_kernel_version=$config_kernel_vmajor
    if test -n "$config_kernel_vminor"; then
      config_kernel_version=${config_kernel_version}.${config_kernel_vminor}
      if test -n "$config_kernel_vrevision"; then
        config_kernel_version="${config_kernel_version}.${config_kernel_vrevision}"
      fi
    fi
  fi

  if test -n "$config_distro_vmajor"; then
    config_distro_version=$config_distro_vmajor
    if test -n "$config_distro_vminor"; then
      config_distro_version=${config_distro_version}.${config_distro_vminor}
      if test -n "$config_distro_vrevision"; then
        config_distro_version="${config_distro_version}.${config_distro_vrevision}"
      fi
    fi
  fi

}

perform_probe

if test $# -eq 0; then
  print_string="$config_os $config_os_version $config_kernel $config_kernel_version $config_distro $config_distro_version $config_arch"
fi

while test $# -gt 0; do
  case $1 in
    -h|-help|--help)
      param_help=1
      ;;
    -os)
      print_string="$print_string $config_os"
      ;;
    -osver)
      print_string="$print_string $config_os_version"
      ;;
    -kernel)
      print_string="$print_string $config_kernel"
      ;;
    -kernver)
      print_string="$print_string $config_kernel_version"
      ;;
    -distro)
      print_string="$print_string $config_distro"
      ;;
    -distver)
      print_string="$print_string $config_distro_version"
      ;;
    -arch)
      print_string="$print_string $config_arch"
      ;;
    -id)
      print_string="$print_string $config_system_id"
      ;;
    *)
      printf "%s\n" "$script_name: invalid parameter $1" >&2
      exit 1
      ;;
  esac
  shift
done

if test x$param_help = x1; then
 print_help
 exit 0
fi

print_string=`echo "$print_string" | sed 's/^ *//' | sed 's/ *$//' | sed 's/  */ /g'`
printf "%s\n" "$print_string"

exit 0


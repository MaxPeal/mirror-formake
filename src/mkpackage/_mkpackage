#!/bin/sh
#
# Author: Oleksiy Chernyavskyy <ochern@rocketmail.com>
#

version_string="mkpackage 1.0"

orig_dir=`pwd`
script_name=`basename "$0"`
script_dir=`dirname $0`

op_dir=formake
formake_scripts="abspath confighelp cstem cstem+ iflib iftool install libro listed mkbuildroot mkdep mkrule optool pofig relpath"
share_dir=

print_help() {
  cat <<EOF
$script_name -v
$script_name [OPTIONS] [SCRIPTS]

 -v      print version

OPTIONS:
 -p DIR  create package directory
 -d DIR  package script dir name [formake]
 -std    install standard set of scripts
 -cc     install C related scripts
 -cxx    install C++ related scripts

SCRIPTS:
  abspath      generic automation       calculate absolute path
  confighelp   configure automation     print configure help
  cstem        configure automation     configure and probe C compiler
  cstem+       configure automation     configure and probe C++ compiler
  iflib        configure automation     library test tool
  iftool       configure automation     command test tool
  install      generic automation       portable version of BSD install
  libro        mkmf automation          build static and dynamic libraries
  listed       generic automation       process space separated text lists
  mkbuildroot  configure automation     create build root directory
  mkdep        mkmf automation          generate source dependencies for Makefile
  mkrule       mkmf automation          generate Make rules
  optool       generic automation       options processing tool
  pofig        configure automation     portable tool to figure out base system properties
  relpath      generic automation       calculate relative path between two directories
EOF
}

print_version() {
  echo "$version_string"
}

select_standard() {
  s_mkbuildroot=1
  s_abspath=1
  s_relpath=1
  s_install=1
  s_listed=1
  s_pofig=1
  s_confighelp=1
  s_optool=1
  s_iftool=1
  have_list=1
}

while test $# -gt 0; do
  case $1 in
    -h|-help|--help)
      print_help
      exit 0
      ;;
    -p)
      shift
      if test -z "$1"; then
        echo "$script_name: error. Parameter -p requires argument" >&2
        exit 1
      fi
      op_package_dir=$1
      ;;
    -d)
      shift
      if test -z "$1"; then
        echo "$script_name: error. Parameter -d requires argument" >&2
        exit 1
      fi
      op_dir=$1
      ;;
    -std)
      select_standard
      ;;
    -cc)
      s_cstem=1
      have_list=1
      ;;
    -cxx)
      s_pofig=1
      s_cstemx=1
      have_list=1
      ;;
    abspath)
      s_abspath=1
      have_list=1
      ;;
    confighelp)
      s_confighelp=1
      have_list=1
      ;;
    cstem)
      s_cstem=1
      have_list=1
      ;;
    cstem+)
      s_cstemx=1
      have_list=1
      ;;
    iflib)
      s_iflib=1
      have_list=1
      ;;
    iftool)
      s_iftool=1
      have_list=1
      ;;
    install)
      s_install=1
      have_list=1
      ;;
    libro)
      s_libro=1
      have_list=1
      ;;
    listed)
      s_listed=1
      have_list=1
      ;;
    mkbuildroot)
      s_mkbuildroot=1
      have_list=1
      ;;
    mkdep)
      s_mkdep=1
      have_list=1
      ;;
    mkrule)
      s_mkrule=1
      have_list=1
      ;;
    optool)
      s_optool=1
      have_list=1
      ;;
    pofig)
      s_pofig=1
      have_list=1
      ;;
    relpath)
      s_relpath=1
      have_list=1
      ;;
  esac
  shift
done

test -z "$have_list" && select_standard

if test -n "$s_mkrule"; then
  test -z "$s_cstem$s_cstemx" && s_cstem=1
  s_libro=1
fi
test -n "$s_iflib$s_libro" && test -z "$s_cstem$s_cstemx" && s_cstem=1
test -n "$s_cstem$s_ctemx" && s_pofig=1

for script in $formake_scripts; do
  case $script in
    cstem+)
      selected=$s_cstemx
      ;;
    *)
      eval selected=\$s_$script
      ;;
  esac
  if test x$selected = x1; then
    selected_scripts="$selected_scripts $script"
  fi
done

formake_dir=$share_dir
if test -z "$formake_dir"; then
  if test -z "$script_dir"; then
    for dir in $PATH; do
      if test -f "$dir/$script_name" && test -x "$dir/$script_name" ; then
        script_dir=$dir
        break
      fi
    done
  fi
  if test -n "$script_dir"; then
    cd $script_dir
    formake_dir=`pwd`
    cd $orig_dir
  fi
fi

if test -z "$formake_dir"; then
  if test -d /usr/share/formake; then
    formake_dir=/usr/share/formake
  elif test -d /usr/local/share/formake; then
    formake_dir=/usr/local/share/formake
  elif test -n "$script_dir" && test -d $script_dir/../share/formake; then
    formake_dir=$script_dir/../share/formake
  fi
fi

if test -n "$formake_dir"; then
  for script in $selected_scripts; do
    if test ! -f $formake_dir/$script; then
      echo "$script_name: script $script not found"
      exit 1
    fi
  done
  if test -n "$op_package_dir" && test ! -d $op_package_dir; then
    mkdir -p $op_package_dir
    if test ! -d $op_package_dir; then
      echo "$script_name: could not create package directory $op_dir"
      exit 1
    fi
    cd $op_package_dir
  fi
  test -d $op_dir || mkdir -p $op_dir
  if test ! -d $op_dir; then
    echo "$script_name: could not create script directory $op_dir"
    exit 1
  fi
  for script in $selected_scripts; do
    cp $formake_dir/$script $op_dir
    chmod +x $op_dir/$script
  done
else
  echo "$script_name: script directory not found"
fi


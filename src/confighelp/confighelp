#!/bin/sh
#
# Author: Oleksiy Chernyavskyy <ochern@rocketmail.com>
#

script_name=`basename $0`
script_dir=`dirname $0`

################################################################################
# LOAD CONFIG
PATH=$FORMAKE:$PATH
CONFIGHELP=
if test -f $script_dir/config.rc; then
  . $script_dir/config.rc
fi
test -n "$FORMAKE_CONFIGHELP" && CONFIGHELP=$FORMAKE_CONFIGHELP
if test -n "$CONFIGHELP" && test -z "$CONFIGHELP_REDIRECT"; then
  export CONFIGHELP_REDIRECT=1
  $CONFIGHELP "$@"
  ret=$?
  if test $ret -ne 64; then
    exit $ret
  fi
fi
################################################################################


print_help() {
  cat <<EOF
Usage: $script_name [-install] [-cc] [-cxx]
  -install   print installation related options
  -cc        print C compilation options
  -cxx       print C++ compilation options
EOF
}

op_cc=
op_cxx=
op_install=
for param in "$@"; do
  case $param in
    -h|-help|--help)
      print_help
      exit 0
      ;;
    -cc)
      op_cc=1
      ;;
    -cxx)
      op_cxx=1
      ;;
    -install)
      op_install=1
      ;;
    *)
      echo "$script_name: error: invalid parameter: $param" >&2
      exit 1
      ;;
  esac
done

tab_shift="   "

echo "Usage: configure [options]"
if test x$op_install = x1; then
  cat <<EOF
  -prefix PREFIX$tab_shift      path to install architecture-independent files [/usr/local]
  -exec-prefix EPREFIX${tab_shift}path to install architecture-dependent files [PREFIX]
  -bindir DIR$tab_shift         bin path [EPREFIX/bin]
  -sbindir DIR$tab_shift        sbin path [EPREFIX/sbin]
  -libexecdir DIR$tab_shift     libexec path [EPREFIX/libexec]
  -libdir DIR$tab_shift         lib path [EPREFIX/lib]
  -incdir DIR$tab_shift         include path [PREFIX/include]
  -etcdir DIR$tab_shift         etc path [PREFIX/etc]
  -vardir DIR$tab_shift         var path [PREFIX/var]
  -sharedir DIR$tab_shift       share path [PREFIX/share]
  -mandir DIR$tab_shift         man path [SHAREDIR/man]
  -docdir DIR$tab_shift         doc path [SHAREDIR/doc]
EOF
fi
if test x$op_cc = x1; then
  echo "  -cc CMD$tab_shift             C compiler command"
  echo "  -cflags=FLAGS$tab_shift       C compiler flags"
fi
if test x$op_cxx = x1; then
  echo "  -cxx CMD$tab_shift            C++ compiler command"
  echo "  -cxxflags=FLAGS$tab_shift     C++ compiler flags"
fi
if test x$op_cc = x1 || test x$op_cxx = x1; then
  echo "  -ldflags=FLAGS$tab_shift      LD flags"
  if test "$op_cc$op_cxx" = 11; then
    echo "  -c-ldflags=FLAGS$tab_shift    C LD flags"
    echo "  -cxx-ldflags=FLAGS$tab_shift  C++ LD flags"
  fi
fi

